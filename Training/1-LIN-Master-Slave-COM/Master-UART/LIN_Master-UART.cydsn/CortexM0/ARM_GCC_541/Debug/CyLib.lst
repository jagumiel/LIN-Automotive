ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.80
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  75:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  76:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  77:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  78:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  79:Generated_Source\PSoC4/CyLib.c **** 
  80:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  81:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  85:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  86:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  87:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  89:Generated_Source\PSoC4/CyLib.c **** *
  90:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
  91:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
  92:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
  95:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  98:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
  99:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 99 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 100:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 100 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 101:Generated_Source\PSoC4/CyLib.c **** 
 102:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 103:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 104:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 105:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 106:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 115 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 4


  57              	.LFB3:
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 121:Generated_Source\PSoC4/CyLib.c **** *
 122:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 123:Generated_Source\PSoC4/CyLib.c **** *
 124:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 125:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 126:Generated_Source\PSoC4/CyLib.c **** *
 127:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 130:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 131:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 131 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 132:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 133:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 134:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 135:Generated_Source\PSoC4/CyLib.c **** 
 136:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 137:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 138:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 139:Generated_Source\PSoC4/CyLib.c **** 
 140:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 140 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 141:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 141 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 142:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 5


 143:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 146:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 147:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 148:Generated_Source\PSoC4/CyLib.c ****     *
 149:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 150:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 151:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 152:Generated_Source\PSoC4/CyLib.c ****     *
 153:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 154:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 155:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 156:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 157:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 160:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 163:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 166:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 167:Generated_Source\PSoC4/CyLib.c ****     {
 168:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 169:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 170:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 171:Generated_Source\PSoC4/CyLib.c **** 
 172:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 173:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 174:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 175:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 176:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 179:Generated_Source\PSoC4/CyLib.c ****         {
 180:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 183:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 185:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 186:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 187:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 188:Generated_Source\PSoC4/CyLib.c **** 
 189:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 190:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 191:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 192:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 193:Generated_Source\PSoC4/CyLib.c ****                 {
 194:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 195:Generated_Source\PSoC4/CyLib.c ****                     {
 196:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 197:Generated_Source\PSoC4/CyLib.c ****                         break;
 198:Generated_Source\PSoC4/CyLib.c ****                     }
 199:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****             #else
 201:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 202:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 203:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 204:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 205:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 206:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 207:Generated_Source\PSoC4/CyLib.c ****                 #else
 208:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 209:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 210:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 211:Generated_Source\PSoC4/CyLib.c **** 
 212:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 213:Generated_Source\PSoC4/CyLib.c ****             
 214:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 215:Generated_Source\PSoC4/CyLib.c ****             
 216:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 217:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 218:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 219:Generated_Source\PSoC4/CyLib.c ****                 {
 220:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 221:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 222:Generated_Source\PSoC4/CyLib.c ****                 }
 223:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 224:Generated_Source\PSoC4/CyLib.c **** 
 225:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 226:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 227:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 228:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 229:Generated_Source\PSoC4/CyLib.c **** 
 230:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 231:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 234:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 235:Generated_Source\PSoC4/CyLib.c **** 
 236:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 237:Generated_Source\PSoC4/CyLib.c ****             
 238:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 239:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 240:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 241:Generated_Source\PSoC4/CyLib.c **** 
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 243:Generated_Source\PSoC4/CyLib.c ****             
 244:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 248:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
 249:Generated_Source\PSoC4/CyLib.c ****             }
 250:Generated_Source\PSoC4/CyLib.c **** 
 251:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 252:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << 
 253:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 254:Generated_Source\PSoC4/CyLib.c **** 
 255:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 256:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 258:Generated_Source\PSoC4/CyLib.c ****         }
 259:Generated_Source\PSoC4/CyLib.c ****     }
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 263:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 264:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 265:Generated_Source\PSoC4/CyLib.c ****     *
 266:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 267:Generated_Source\PSoC4/CyLib.c ****     *
 268:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 269:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 270:Generated_Source\PSoC4/CyLib.c ****     *
 271:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 272:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 275:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 276:Generated_Source\PSoC4/CyLib.c ****     {
 277:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 278:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 279:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 280:Generated_Source\PSoC4/CyLib.c **** 
 281:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 282:Generated_Source\PSoC4/CyLib.c ****         
 283:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 284:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 285:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 286:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 287:Generated_Source\PSoC4/CyLib.c ****             {
 288:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 289:Generated_Source\PSoC4/CyLib.c ****                 {
 290:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 291:Generated_Source\PSoC4/CyLib.c ****                     break;
 292:Generated_Source\PSoC4/CyLib.c ****                 }
 293:Generated_Source\PSoC4/CyLib.c ****             }
 294:Generated_Source\PSoC4/CyLib.c ****         #else
 295:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 296:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 297:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 298:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 299:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) & 
 300:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 301:Generated_Source\PSoC4/CyLib.c ****             #else
 302:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 303:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 304:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 305:Generated_Source\PSoC4/CyLib.c **** 
 306:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 309:Generated_Source\PSoC4/CyLib.c ****         
 310:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 312:Generated_Source\PSoC4/CyLib.c ****         #else
 313:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif
 315:Generated_Source\PSoC4/CyLib.c ****     }
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 320:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 325:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 328:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 334:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 335:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 336:Generated_Source\PSoC4/CyLib.c ****     }
 337:Generated_Source\PSoC4/CyLib.c **** 
 338:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 339:Generated_Source\PSoC4/CyLib.c **** 
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 344:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 345:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 346:Generated_Source\PSoC4/CyLib.c ****     *
 347:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 348:Generated_Source\PSoC4/CyLib.c ****     *
 349:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 352:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 355:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 358:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 359:Generated_Source\PSoC4/CyLib.c ****     {
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 362:Generated_Source\PSoC4/CyLib.c ****             
 363:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 364:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 365:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 368:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 369:Generated_Source\PSoC4/CyLib.c **** 
 370:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****             {
 372:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 373:Generated_Source\PSoC4/CyLib.c ****                 {
 374:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 375:Generated_Source\PSoC4/CyLib.c ****                     break;
 376:Generated_Source\PSoC4/CyLib.c ****                 }
 377:Generated_Source\PSoC4/CyLib.c ****             }
 378:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 379:Generated_Source\PSoC4/CyLib.c ****         
 380:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 381:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 382:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 383:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 384:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 385:Generated_Source\PSoC4/CyLib.c **** 
 386:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 387:Generated_Source\PSoC4/CyLib.c ****            
 388:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 389:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 390:Generated_Source\PSoC4/CyLib.c ****             
 391:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 392:Generated_Source\PSoC4/CyLib.c ****             {
 393:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 394:Generated_Source\PSoC4/CyLib.c ****                 
 395:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 396:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 397:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 398:Generated_Source\PSoC4/CyLib.c ****                 
 399:Generated_Source\PSoC4/CyLib.c ****             }
 400:Generated_Source\PSoC4/CyLib.c ****             else
 401:Generated_Source\PSoC4/CyLib.c ****             {
 402:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 403:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 404:Generated_Source\PSoC4/CyLib.c **** 
 405:Generated_Source\PSoC4/CyLib.c ****             }
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 408:Generated_Source\PSoC4/CyLib.c ****             {
 409:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 410:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 411:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 412:Generated_Source\PSoC4/CyLib.c ****             }
 413:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 414:Generated_Source\PSoC4/CyLib.c ****             {
 415:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 416:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 417:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 418:Generated_Source\PSoC4/CyLib.c ****             }
 419:Generated_Source\PSoC4/CyLib.c ****             else
 420:Generated_Source\PSoC4/CyLib.c ****             {
 421:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 422:Generated_Source\PSoC4/CyLib.c ****             }
 423:Generated_Source\PSoC4/CyLib.c ****             
 424:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c **** 
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 431:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 432:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 433:Generated_Source\PSoC4/CyLib.c ****     *
 434:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 435:Generated_Source\PSoC4/CyLib.c ****     *
 436:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 437:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 438:Generated_Source\PSoC4/CyLib.c ****     *
 439:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 440:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 441:Generated_Source\PSoC4/CyLib.c ****     *
 442:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 443:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 446:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 447:Generated_Source\PSoC4/CyLib.c ****             
 448:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 449:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 450:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 451:Generated_Source\PSoC4/CyLib.c **** 
 452:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 453:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 454:Generated_Source\PSoC4/CyLib.c **** 
 455:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 456:Generated_Source\PSoC4/CyLib.c ****             {
 457:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 458:Generated_Source\PSoC4/CyLib.c ****                 {
 459:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 460:Generated_Source\PSoC4/CyLib.c ****                     break;
 461:Generated_Source\PSoC4/CyLib.c ****                 }
 462:Generated_Source\PSoC4/CyLib.c ****             }           
 463:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 464:Generated_Source\PSoC4/CyLib.c ****         
 465:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 466:Generated_Source\PSoC4/CyLib.c **** 
 467:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 468:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 469:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 470:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 471:Generated_Source\PSoC4/CyLib.c **** 
 472:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 473:Generated_Source\PSoC4/CyLib.c ****             {
 474:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 475:Generated_Source\PSoC4/CyLib.c ****             }
 476:Generated_Source\PSoC4/CyLib.c ****             
 477:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 478:Generated_Source\PSoC4/CyLib.c ****             
 479:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 480:Generated_Source\PSoC4/CyLib.c ****     }
 481:Generated_Source\PSoC4/CyLib.c **** 
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 484:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 486:Generated_Source\PSoC4/CyLib.c ****     *
 487:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 488:Generated_Source\PSoC4/CyLib.c ****     *
 489:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 490:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 491:Generated_Source\PSoC4/CyLib.c ****     *
 492:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 493:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 494:Generated_Source\PSoC4/CyLib.c ****     *
 495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 496:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 497:Generated_Source\PSoC4/CyLib.c ****     {
 498:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 499:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 500:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 501:Generated_Source\PSoC4/CyLib.c ****     }
 502:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 503:Generated_Source\PSoC4/CyLib.c **** 
 504:Generated_Source\PSoC4/CyLib.c **** 
 505:Generated_Source\PSoC4/CyLib.c **** 
 506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 509:Generated_Source\PSoC4/CyLib.c **** *
 510:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 513:Generated_Source\PSoC4/CyLib.c **** *
 514:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 515:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 516:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 517:Generated_Source\PSoC4/CyLib.c **** *
 518:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 519:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 520:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 521:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 522:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 523:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 524:Generated_Source\PSoC4/CyLib.c **** *
 525:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 526:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 527:Generated_Source\PSoC4/CyLib.c **** *
 528:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 529:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 530:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 531:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 532:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 533:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 534:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 535:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 536:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 539:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 540:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 540 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 12


  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 541:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 542:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 543:Generated_Source\PSoC4/CyLib.c ****     
 544:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 545:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 548 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 551:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 552:Generated_Source\PSoC4/CyLib.c ****     {
 553:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 554:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 555:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 556:Generated_Source\PSoC4/CyLib.c ****         
 557:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 558:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 559:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 560:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 561:Generated_Source\PSoC4/CyLib.c ****         
 562:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 563:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 564:Generated_Source\PSoC4/CyLib.c ****         
 565:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 566:Generated_Source\PSoC4/CyLib.c ****         {
 567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 568:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 569:Generated_Source\PSoC4/CyLib.c ****         }
 570:Generated_Source\PSoC4/CyLib.c ****         
 571:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 572:Generated_Source\PSoC4/CyLib.c ****     }
 573:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 574:Generated_Source\PSoC4/CyLib.c **** 
 575:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 575 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 576:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 577:Generated_Source\PSoC4/CyLib.c **** 
 578:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 579:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 13


 580:Generated_Source\PSoC4/CyLib.c ****     {
 581:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 582:Generated_Source\PSoC4/CyLib.c ****     }
 583:Generated_Source\PSoC4/CyLib.c ****     else
 584:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 585:Generated_Source\PSoC4/CyLib.c ****     {
 586:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 106              		.loc 1 586 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 587:Generated_Source\PSoC4/CyLib.c ****     }   
 588:Generated_Source\PSoC4/CyLib.c ****     
 589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 589 0
 112 0014 1460     		str	r4, [r2]
 590:Generated_Source\PSoC4/CyLib.c ****     
 591:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 591 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 592:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 592 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 593:Generated_Source\PSoC4/CyLib.c **** 
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 596:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 597:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 598:Generated_Source\PSoC4/CyLib.c **** *
 599:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 600:Generated_Source\PSoC4/CyLib.c **** *
 601:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 602:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 603:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 604:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 605:Generated_Source\PSoC4/CyLib.c **** *
 606:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 607:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 14


 608:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 609:Generated_Source\PSoC4/CyLib.c **** *
 610:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 611:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 612:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 612 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 613:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 614:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 614 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 615:Generated_Source\PSoC4/CyLib.c ****         {
 616:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 616 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 617:Generated_Source\PSoC4/CyLib.c ****         }
 618:Generated_Source\PSoC4/CyLib.c ****         else
 619:Generated_Source\PSoC4/CyLib.c ****         {
 620:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 620 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 621:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 622:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 622 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 623:Generated_Source\PSoC4/CyLib.c ****         }
 624:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 625:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 626:Generated_Source\PSoC4/CyLib.c ****         {
 627:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 628:Generated_Source\PSoC4/CyLib.c ****         }
 629:Generated_Source\PSoC4/CyLib.c ****         else
 630:Generated_Source\PSoC4/CyLib.c ****         {
 631:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 15


 632:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 633:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 634:Generated_Source\PSoC4/CyLib.c ****         }
 635:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 636:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 636 0
 169              		@ sp needed
 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB6:
 637:Generated_Source\PSoC4/CyLib.c **** 
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/CyLib.c **** *
 643:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 644:Generated_Source\PSoC4/CyLib.c **** *
 645:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 646:Generated_Source\PSoC4/CyLib.c **** *
 647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 648:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 649:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 649 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 650:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 651:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 652:Generated_Source\PSoC4/CyLib.c **** 
 653:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 653 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 654:Generated_Source\PSoC4/CyLib.c **** 
 655:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 656:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 657:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 16


 658:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 659:Generated_Source\PSoC4/CyLib.c ****     }
 660:Generated_Source\PSoC4/CyLib.c ****     else
 661:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 662:Generated_Source\PSoC4/CyLib.c ****     {
 663:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 663 0
 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 666:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 667:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 668:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 669:Generated_Source\PSoC4/CyLib.c ****         
 670:Generated_Source\PSoC4/CyLib.c ****     }
 671:Generated_Source\PSoC4/CyLib.c **** 
 672:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 672 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 673:Generated_Source\PSoC4/CyLib.c **** 
 674:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 675:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 675 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 683:Generated_Source\PSoC4/CyLib.c **** *
 684:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 685:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 17


 686:Generated_Source\PSoC4/CyLib.c **** *
 687:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 688:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 689:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 690:Generated_Source\PSoC4/CyLib.c **** *
 691:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 692:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 693:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 694:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 695:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 696:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 697:Generated_Source\PSoC4/CyLib.c **** *
 698:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 699:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 700:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 701:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 702:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 703:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 704:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 705:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 706:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 707:Generated_Source\PSoC4/CyLib.c **** *
 708:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 709:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 710:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 710 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 711:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 712:Generated_Source\PSoC4/CyLib.c **** 
 713:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 713 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 715 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 717:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 717 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 18


 716:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 716 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 715:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 715 0
 257 001e 2360     		str	r3, [r4]
 718:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 720 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 721:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 721 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 273              		.align	2
 274              		.global	CySysClkWriteImoFreq
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysClkWriteImoFreq, %function
 278              	CySysClkWriteImoFreq:
 279              	.LFB8:
 722:Generated_Source\PSoC4/CyLib.c **** 
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 726:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 727:Generated_Source\PSoC4/CyLib.c **** *
 728:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 731:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 732:Generated_Source\PSoC4/CyLib.c **** *
 733:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 734:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 735:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 738:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 739:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 742:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 743:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 744:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 745:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 19


 746:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 747:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 748:Generated_Source\PSoC4/CyLib.c **** *
 749:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 750:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 751:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 752:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 753:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 754:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 755:Generated_Source\PSoC4/CyLib.c **** *
 756:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 757:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 758:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 759:Generated_Source\PSoC4/CyLib.c **** *
 760:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 761:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 762:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 763:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 764:Generated_Source\PSoC4/CyLib.c **** *
 765:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 767:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 768:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 768 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 24
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              	.LVL16:
 285 0000 10B5     		push	{r4, lr}
 286              		.cfi_def_cfa_offset 8
 287              		.cfi_offset 4, -8
 288              		.cfi_offset 14, -4
 289 0002 86B0     		sub	sp, sp, #24
 290              		.cfi_def_cfa_offset 32
 291 0004 0400     		movs	r4, r0
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 770:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 771:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 772:Generated_Source\PSoC4/CyLib.c ****         #else
 773:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 774:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 775:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 776:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 777:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 780:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 781:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 782:Generated_Source\PSoC4/CyLib.c **** 
 783:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 784:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 785:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:Generated_Source\PSoC4/CyLib.c **** 
 787:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c **** 
 790:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 20


 292              		.loc 1 790 0
 293 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 294              	.LVL17:
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 793:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 794:Generated_Source\PSoC4/CyLib.c ****             {
 795:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 796:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 797:Generated_Source\PSoC4/CyLib.c ****             }
 798:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 799:Generated_Source\PSoC4/CyLib.c **** 
 800:Generated_Source\PSoC4/CyLib.c **** 
 801:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 804:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 805:Generated_Source\PSoC4/CyLib.c ****                 {
 806:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 809:Generated_Source\PSoC4/CyLib.c ****                 {
 810:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 811:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 812:Generated_Source\PSoC4/CyLib.c ****                 }
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                 }
 816:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 817:Generated_Source\PSoC4/CyLib.c **** 
 818:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 819:Generated_Source\PSoC4/CyLib.c **** 
 820:Generated_Source\PSoC4/CyLib.c **** 
 821:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 824:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 295              		.loc 1 824 0
 296 000a 0E4B     		ldr	r3, .L22
 297 000c 1B68     		ldr	r3, [r3]
 298 000e 0093     		str	r3, [sp]
 825:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 299              		.loc 1 825 0
 300 0010 0D4B     		ldr	r3, .L22+4
 301 0012 1B68     		ldr	r3, [r3]
 302 0014 0193     		str	r3, [sp, #4]
 826:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 303              		.loc 1 826 0
 304 0016 033C     		subs	r4, r4, #3
 305              	.LVL18:
 306 0018 0C4B     		ldr	r3, .L22+8
 307 001a 1B5D     		ldrb	r3, [r3, r4]
 308 001c 0293     		str	r3, [sp, #8]
 827:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 309              		.loc 1 827 0
 310 001e 0C4B     		ldr	r3, .L22+12
 311 0020 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 21


 312 0022 0393     		str	r3, [sp, #12]
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 313              		.loc 1 829 0
 314 0024 04AA     		add	r2, sp, #16
 315 0026 0B4B     		ldr	r3, .L22+16
 316 0028 0493     		str	r3, [sp, #16]
 830:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 831:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 832:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 317              		.loc 1 832 0
 318 002a 6B46     		mov	r3, sp
 319 002c 0593     		str	r3, [sp, #20]
 833:Generated_Source\PSoC4/CyLib.c **** 
 834:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 320              		.loc 1 834 0
 321 002e 0A4B     		ldr	r3, .L22+20
 322 0030 1A60     		str	r2, [r3]
 835:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 323              		.loc 1 835 0
 324 0032 0A49     		ldr	r1, .L22+24
 325 0034 0A4A     		ldr	r2, .L22+28
 326 0036 1160     		str	r1, [r2]
 836:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 327              		.loc 1 836 0
 328 0038 1B68     		ldr	r3, [r3]
 837:Generated_Source\PSoC4/CyLib.c **** 
 838:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 841:Generated_Source\PSoC4/CyLib.c ****         {
 842:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 843:Generated_Source\PSoC4/CyLib.c ****             {
 844:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 846:Generated_Source\PSoC4/CyLib.c ****             }
 847:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 848:Generated_Source\PSoC4/CyLib.c ****             {
 849:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 850:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 851:Generated_Source\PSoC4/CyLib.c ****             }
 852:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 853:Generated_Source\PSoC4/CyLib.c ****             {
 854:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 855:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 856:Generated_Source\PSoC4/CyLib.c ****             }
 857:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 858:Generated_Source\PSoC4/CyLib.c ****             {
 859:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 860:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 861:Generated_Source\PSoC4/CyLib.c ****             }
 862:Generated_Source\PSoC4/CyLib.c ****             else
 863:Generated_Source\PSoC4/CyLib.c ****             {
 864:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 865:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 866:Generated_Source\PSoC4/CyLib.c ****             }
 867:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 22


 868:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 869:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 873:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 874:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 875:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 876:Generated_Source\PSoC4/CyLib.c ****             *
 877:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 878:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 879:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 880:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 881:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 882:Generated_Source\PSoC4/CyLib.c ****             {
 883:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 884:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 885:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 886:Generated_Source\PSoC4/CyLib.c **** 
 887:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 888:Generated_Source\PSoC4/CyLib.c **** 
 889:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 890:Generated_Source\PSoC4/CyLib.c ****             }
 891:Generated_Source\PSoC4/CyLib.c ****             else
 892:Generated_Source\PSoC4/CyLib.c ****             {
 893:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 894:Generated_Source\PSoC4/CyLib.c ****             }
 895:Generated_Source\PSoC4/CyLib.c **** 
 896:Generated_Source\PSoC4/CyLib.c **** 
 897:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 898:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 899:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 900:Generated_Source\PSoC4/CyLib.c ****             *
 901:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 902:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 903:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 904:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 905:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 906:Generated_Source\PSoC4/CyLib.c ****             {
 907:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 908:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 909:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 910:Generated_Source\PSoC4/CyLib.c ****             }
 911:Generated_Source\PSoC4/CyLib.c **** 
 912:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 913:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 914:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 915:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 916:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 919:Generated_Source\PSoC4/CyLib.c ****             {
 920:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 921:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 922:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 923:Generated_Source\PSoC4/CyLib.c ****             }
 924:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 23


 925:Generated_Source\PSoC4/CyLib.c ****         else
 926:Generated_Source\PSoC4/CyLib.c ****         {
 927:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 928:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 929:Generated_Source\PSoC4/CyLib.c ****         }
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 932:Generated_Source\PSoC4/CyLib.c **** 
 933:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 934:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 935:Generated_Source\PSoC4/CyLib.c ****             {
 936:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 937:Generated_Source\PSoC4/CyLib.c ****             }
 938:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 939:Generated_Source\PSoC4/CyLib.c **** 
 940:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 941:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 329              		.loc 1 947 0
 330 003a FFF7FEFF 		bl	CyExitCriticalSection
 331              	.LVL19:
 948:Generated_Source\PSoC4/CyLib.c ****     }
 332              		.loc 1 948 0
 333 003e 06B0     		add	sp, sp, #24
 334              		@ sp needed
 335              	.LVL20:
 336 0040 10BD     		pop	{r4, pc}
 337              	.L23:
 338 0042 C046     		.align	2
 339              	.L22:
 340 0044 08010B40 		.word	1074462984
 341 0048 00010B40 		.word	1074462976
 342 004c 00000000 		.word	.LANCHOR1
 343 0050 30001040 		.word	1074790448
 344 0054 B6EA0000 		.word	60086
 345 0058 08001040 		.word	1074790408
 346 005c 17000080 		.word	-2147483625
 347 0060 04001040 		.word	1074790404
 348              		.cfi_endproc
 349              	.LFE8:
 350              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 351              		.section	.text.CySysClkEcoStop,"ax",%progbits
 352              		.align	2
 353              		.global	CySysClkEcoStop
 354              		.code	16
 355              		.thumb_func
 356              		.type	CySysClkEcoStop, %function
 357              	CySysClkEcoStop:
 358              	.LFB10:
 949:Generated_Source\PSoC4/CyLib.c **** 
 950:Generated_Source\PSoC4/CyLib.c **** #else
 951:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 24


 952:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 953:Generated_Source\PSoC4/CyLib.c ****     {
 954:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 955:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 956:Generated_Source\PSoC4/CyLib.c **** 
 957:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 958:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 959:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 960:Generated_Source\PSoC4/CyLib.c ****         
 961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 962:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 963:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 964:Generated_Source\PSoC4/CyLib.c **** 
 965:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 966:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 967:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 968:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 969:Generated_Source\PSoC4/CyLib.c ****         #else
 970:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 971:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 972:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 973:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 974:Generated_Source\PSoC4/CyLib.c ****         {
 975:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 976:Generated_Source\PSoC4/CyLib.c **** 
 977:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 978:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 979:Generated_Source\PSoC4/CyLib.c ****                 {
 980:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 981:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 982:Generated_Source\PSoC4/CyLib.c ****                 }
 983:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 988:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 989:Generated_Source\PSoC4/CyLib.c ****                     {
 990:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 991:Generated_Source\PSoC4/CyLib.c **** 
 992:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 993:Generated_Source\PSoC4/CyLib.c ****                     {
 994:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 995:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 996:Generated_Source\PSoC4/CyLib.c ****                     }
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 999:Generated_Source\PSoC4/CyLib.c ****                     }
1000:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1003:Generated_Source\PSoC4/CyLib.c **** 
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1007:Generated_Source\PSoC4/CyLib.c **** 
1008:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 25


1009:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1010:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1011:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1012:Generated_Source\PSoC4/CyLib.c ****                 {
1013:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1014:Generated_Source\PSoC4/CyLib.c ****                 }
1015:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1016:Generated_Source\PSoC4/CyLib.c ****                 {
1017:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1018:Generated_Source\PSoC4/CyLib.c ****                 }
1019:Generated_Source\PSoC4/CyLib.c ****                 else
1020:Generated_Source\PSoC4/CyLib.c ****                 {
1021:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1022:Generated_Source\PSoC4/CyLib.c ****                 }
1023:Generated_Source\PSoC4/CyLib.c ****             #else
1024:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1025:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1026:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1027:Generated_Source\PSoC4/CyLib.c **** 
1028:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1029:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1032:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1033:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1038:Generated_Source\PSoC4/CyLib.c ****             {
1039:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1040:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1041:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1044:Generated_Source\PSoC4/CyLib.c **** 
1045:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1046:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1048:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1049:Generated_Source\PSoC4/CyLib.c ****             }
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1052:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1053:Generated_Source\PSoC4/CyLib.c ****                 {
1054:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1055:Generated_Source\PSoC4/CyLib.c ****                 }
1056:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1057:Generated_Source\PSoC4/CyLib.c ****         
1058:Generated_Source\PSoC4/CyLib.c ****         
1059:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1060:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1061:Generated_Source\PSoC4/CyLib.c ****                 {
1062:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1063:Generated_Source\PSoC4/CyLib.c ****                 }
1064:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1065:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 26


1066:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1067:Generated_Source\PSoC4/CyLib.c ****         }
1068:Generated_Source\PSoC4/CyLib.c ****         else
1069:Generated_Source\PSoC4/CyLib.c ****         {
1070:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1071:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1072:Generated_Source\PSoC4/CyLib.c ****         }
1073:Generated_Source\PSoC4/CyLib.c ****     }
1074:Generated_Source\PSoC4/CyLib.c **** 
1075:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1076:Generated_Source\PSoC4/CyLib.c **** 
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1079:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1080:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1081:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1082:Generated_Source\PSoC4/CyLib.c ****     *
1083:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1084:Generated_Source\PSoC4/CyLib.c ****     *
1085:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1086:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1087:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1088:Generated_Source\PSoC4/CyLib.c ****     *
1089:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1090:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1091:Generated_Source\PSoC4/CyLib.c ****     *
1092:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1093:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1094:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1095:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1096:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1097:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1098:Generated_Source\PSoC4/CyLib.c ****     *
1099:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1100:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1101:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1102:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1103:Generated_Source\PSoC4/CyLib.c ****     *
1104:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1105:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1106:Generated_Source\PSoC4/CyLib.c ****     {
1107:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1110:Generated_Source\PSoC4/CyLib.c **** 
1111:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1112:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1113:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1114:Generated_Source\PSoC4/CyLib.c **** 
1115:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1116:Generated_Source\PSoC4/CyLib.c ****     }
1117:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1118:Generated_Source\PSoC4/CyLib.c **** 
1119:Generated_Source\PSoC4/CyLib.c **** 
1120:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1121:Generated_Source\PSoC4/CyLib.c **** 
1122:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 27


1123:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1124:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1125:Generated_Source\PSoC4/CyLib.c ****     *
1126:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1127:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1128:Generated_Source\PSoC4/CyLib.c ****     *
1129:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1130:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1131:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1132:Generated_Source\PSoC4/CyLib.c ****     * called.
1133:Generated_Source\PSoC4/CyLib.c ****     *
1134:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1135:Generated_Source\PSoC4/CyLib.c ****     *
1136:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1137:Generated_Source\PSoC4/CyLib.c ****     *
1138:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1139:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1140:Generated_Source\PSoC4/CyLib.c ****     *
1141:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1142:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1143:Generated_Source\PSoC4/CyLib.c ****     *
1144:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1145:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1146:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1147:Generated_Source\PSoC4/CyLib.c ****     *
1148:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1149:Generated_Source\PSoC4/CyLib.c ****     *
1150:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1151:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1152:Generated_Source\PSoC4/CyLib.c ****     {
1153:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1154:Generated_Source\PSoC4/CyLib.c **** 
1155:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1156:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1157:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1160:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1161:Generated_Source\PSoC4/CyLib.c **** 
1162:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1163:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1164:Generated_Source\PSoC4/CyLib.c ****         
1165:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1166:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1167:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1168:Generated_Source\PSoC4/CyLib.c ****             
1169:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1170:Generated_Source\PSoC4/CyLib.c ****             {
1171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1172:Generated_Source\PSoC4/CyLib.c ****             }
1173:Generated_Source\PSoC4/CyLib.c ****             else
1174:Generated_Source\PSoC4/CyLib.c ****             {
1175:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1176:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1177:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1178:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1179:Generated_Source\PSoC4/CyLib.c ****             
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 28


1180:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1181:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1182:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1183:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1187:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1188:Generated_Source\PSoC4/CyLib.c ****                 {
1189:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1190:Generated_Source\PSoC4/CyLib.c ****                 }
1191:Generated_Source\PSoC4/CyLib.c ****                 
1192:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1193:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1195:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1196:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1197:Generated_Source\PSoC4/CyLib.c **** 
1198:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1199:Generated_Source\PSoC4/CyLib.c ****                 {
1200:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1201:Generated_Source\PSoC4/CyLib.c ****                 }
1202:Generated_Source\PSoC4/CyLib.c **** 
1203:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c ****                 
1208:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1210:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1213:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1214:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1215:Generated_Source\PSoC4/CyLib.c ****                 #else
1216:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1217:Generated_Source\PSoC4/CyLib.c ****                 #endif
1218:Generated_Source\PSoC4/CyLib.c ****                 
1219:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1220:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1221:Generated_Source\PSoC4/CyLib.c ****                 {
1222:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1223:Generated_Source\PSoC4/CyLib.c ****                 }
1224:Generated_Source\PSoC4/CyLib.c ****                 
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1227:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1228:Generated_Source\PSoC4/CyLib.c ****                                             
1229:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1230:Generated_Source\PSoC4/CyLib.c ****                 {
1231:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1232:Generated_Source\PSoC4/CyLib.c ****                 }
1233:Generated_Source\PSoC4/CyLib.c **** 
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1235:Generated_Source\PSoC4/CyLib.c ****                 
1236:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 29


1237:Generated_Source\PSoC4/CyLib.c ****                 
1238:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1239:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1240:Generated_Source\PSoC4/CyLib.c ****                 
1241:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1242:Generated_Source\PSoC4/CyLib.c ****                 {
1243:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1244:Generated_Source\PSoC4/CyLib.c ****                 }
1245:Generated_Source\PSoC4/CyLib.c ****                 
1246:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1247:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1248:Generated_Source\PSoC4/CyLib.c ****                 
1249:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1250:Generated_Source\PSoC4/CyLib.c ****                 {
1251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1252:Generated_Source\PSoC4/CyLib.c ****                 }
1253:Generated_Source\PSoC4/CyLib.c ****                 
1254:Generated_Source\PSoC4/CyLib.c ****             }
1255:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1257:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1258:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1259:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1262:Generated_Source\PSoC4/CyLib.c ****         {
1263:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1264:Generated_Source\PSoC4/CyLib.c **** 
1265:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1266:Generated_Source\PSoC4/CyLib.c ****             {
1267:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1270:Generated_Source\PSoC4/CyLib.c ****                 {
1271:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1272:Generated_Source\PSoC4/CyLib.c ****                     break;
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c ****             }
1275:Generated_Source\PSoC4/CyLib.c **** 
1276:Generated_Source\PSoC4/CyLib.c ****         }
1277:Generated_Source\PSoC4/CyLib.c **** 
1278:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1279:Generated_Source\PSoC4/CyLib.c ****     }
1280:Generated_Source\PSoC4/CyLib.c **** 
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1283:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1284:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1285:Generated_Source\PSoC4/CyLib.c ****     *
1286:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1287:Generated_Source\PSoC4/CyLib.c ****     *
1288:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1289:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1290:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1293:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 30


1294:Generated_Source\PSoC4/CyLib.c ****     {
 359              		.loc 1 1294 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
1295:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1296:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1297:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 364              		.loc 1 1297 0
 365 0000 054A     		ldr	r2, .L25
 366 0002 1368     		ldr	r3, [r2]
 367 0004 0121     		movs	r1, #1
 368 0006 8B43     		bics	r3, r1
 369 0008 1360     		str	r3, [r2]
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1300:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 370              		.loc 1 1300 0
 371 000a 044A     		ldr	r2, .L25+4
 372 000c 1168     		ldr	r1, [r2]
 373 000e 044B     		ldr	r3, .L25+8
 374 0010 0B40     		ands	r3, r1
 375 0012 1360     		str	r3, [r2]
1301:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1302:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1303:Generated_Source\PSoC4/CyLib.c ****         #else
1304:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1305:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1306:Generated_Source\PSoC4/CyLib.c ****     }
 376              		.loc 1 1306 0
 377              		@ sp needed
 378 0014 7047     		bx	lr
 379              	.L26:
 380 0016 C046     		.align	2
 381              	.L25:
 382 0018 60F02E40 		.word	1076818016
 383 001c 10002E40 		.word	1076756496
 384 0020 FF7FFFFF 		.word	-32769
 385              		.cfi_endproc
 386              	.LFE10:
 387              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 388              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 389              		.align	2
 390              		.global	CySysClkEcoReadStatus
 391              		.code	16
 392              		.thumb_func
 393              		.type	CySysClkEcoReadStatus, %function
 394              	CySysClkEcoReadStatus:
 395              	.LFB11:
1307:Generated_Source\PSoC4/CyLib.c **** 
1308:Generated_Source\PSoC4/CyLib.c **** 
1309:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1310:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1311:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1312:Generated_Source\PSoC4/CyLib.c ****     *
1313:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 31


1314:Generated_Source\PSoC4/CyLib.c ****     *
1315:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1316:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1317:Generated_Source\PSoC4/CyLib.c ****     *
1318:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1319:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1320:Generated_Source\PSoC4/CyLib.c ****     *
1321:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1322:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1323:Generated_Source\PSoC4/CyLib.c ****     *
1324:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1325:Generated_Source\PSoC4/CyLib.c ****     *
1326:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1327:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1328:Generated_Source\PSoC4/CyLib.c ****     {
 396              		.loc 1 1328 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
1329:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1332:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 401              		.loc 1 1332 0
 402 0000 024B     		ldr	r3, .L28
 403 0002 1B68     		ldr	r3, [r3]
 404 0004 0120     		movs	r0, #1
 405 0006 1840     		ands	r0, r3
 406              	.LVL21:
1333:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1334:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1335:Generated_Source\PSoC4/CyLib.c **** 
1336:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1337:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1338:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1339:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1340:Generated_Source\PSoC4/CyLib.c ****         #else
1341:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1342:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1345:Generated_Source\PSoC4/CyLib.c ****     }
 407              		.loc 1 1345 0
 408              		@ sp needed
 409 0008 7047     		bx	lr
 410              	.L29:
 411 000a C046     		.align	2
 412              	.L28:
 413 000c 0C002E40 		.word	1076756492
 414              		.cfi_endproc
 415              	.LFE11:
 416              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 417              		.section	.text.CySysLvdDisable,"ax",%progbits
 418              		.align	2
 419              		.global	CySysLvdDisable
 420              		.code	16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 32


 421              		.thumb_func
 422              		.type	CySysLvdDisable, %function
 423              	CySysLvdDisable:
 424              	.LFB14:
1346:Generated_Source\PSoC4/CyLib.c **** 
1347:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1348:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1349:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1350:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1351:Generated_Source\PSoC4/CyLib.c ****         *
1352:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1353:Generated_Source\PSoC4/CyLib.c ****         *
1354:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1355:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1356:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1357:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1358:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1359:Generated_Source\PSoC4/CyLib.c ****         *
1360:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1361:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1362:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1363:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1364:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1365:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1366:Generated_Source\PSoC4/CyLib.c ****         *
1367:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1368:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1369:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1370:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1371:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1372:Generated_Source\PSoC4/CyLib.c ****         *
1373:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1374:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1375:Generated_Source\PSoC4/CyLib.c ****         {
1376:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1377:Generated_Source\PSoC4/CyLib.c **** 
1378:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1379:Generated_Source\PSoC4/CyLib.c ****             {
1380:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1381:Generated_Source\PSoC4/CyLib.c **** 
1382:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1383:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1386:Generated_Source\PSoC4/CyLib.c ****             }
1387:Generated_Source\PSoC4/CyLib.c ****             else
1388:Generated_Source\PSoC4/CyLib.c ****             {
1389:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1390:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1391:Generated_Source\PSoC4/CyLib.c ****             }
1392:Generated_Source\PSoC4/CyLib.c ****         }
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****     #else
1395:Generated_Source\PSoC4/CyLib.c **** 
1396:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1397:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1398:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 33


1399:Generated_Source\PSoC4/CyLib.c ****         *
1400:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1401:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1402:Generated_Source\PSoC4/CyLib.c ****         *
1403:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1404:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1407:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1408:Generated_Source\PSoC4/CyLib.c ****         *
1409:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1410:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1411:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1412:Generated_Source\PSoC4/CyLib.c ****         *
1413:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1414:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1415:Generated_Source\PSoC4/CyLib.c ****         *
1416:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1417:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1418:Generated_Source\PSoC4/CyLib.c ****         *
1419:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1420:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1421:Generated_Source\PSoC4/CyLib.c ****         *
1422:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1423:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1424:Generated_Source\PSoC4/CyLib.c ****         *
1425:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1426:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1427:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1428:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1429:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1430:Generated_Source\PSoC4/CyLib.c ****         *
1431:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1435:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1436:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1437:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1438:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1439:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1440:Generated_Source\PSoC4/CyLib.c ****         *
1441:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1442:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1443:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1444:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1445:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1446:Generated_Source\PSoC4/CyLib.c ****         *
1447:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1448:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1449:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1450:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1451:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1452:Generated_Source\PSoC4/CyLib.c ****         *
1453:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1454:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1455:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 34


1456:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1457:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1458:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1459:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1460:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1461:Generated_Source\PSoC4/CyLib.c ****         *
1462:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1463:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1464:Generated_Source\PSoC4/CyLib.c ****         {
1465:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1466:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1469:Generated_Source\PSoC4/CyLib.c **** 
1470:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1471:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1472:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1473:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1474:Generated_Source\PSoC4/CyLib.c **** 
1475:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1476:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1477:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1478:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1479:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1480:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1481:Generated_Source\PSoC4/CyLib.c **** 
1482:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1483:Generated_Source\PSoC4/CyLib.c **** 
1484:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1485:Generated_Source\PSoC4/CyLib.c ****         }
1486:Generated_Source\PSoC4/CyLib.c **** 
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1489:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1490:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1491:Generated_Source\PSoC4/CyLib.c ****         *
1492:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1493:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1494:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1495:Generated_Source\PSoC4/CyLib.c ****         *
1496:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1497:Generated_Source\PSoC4/CyLib.c ****         *
1498:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1499:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1500:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1501:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1502:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1503:Generated_Source\PSoC4/CyLib.c ****         *
1504:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1505:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1506:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1507:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1508:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1509:Generated_Source\PSoC4/CyLib.c ****         *
1510:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1511:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1512:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 35


1513:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1514:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1515:Generated_Source\PSoC4/CyLib.c ****         {
1516:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1517:Generated_Source\PSoC4/CyLib.c **** 
1518:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1519:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1521:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1522:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1525:Generated_Source\PSoC4/CyLib.c **** 
1526:Generated_Source\PSoC4/CyLib.c **** 
1527:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1528:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1529:Generated_Source\PSoC4/CyLib.c ****             {
1530:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1531:Generated_Source\PSoC4/CyLib.c ****             }
1532:Generated_Source\PSoC4/CyLib.c ****             else
1533:Generated_Source\PSoC4/CyLib.c ****             {
1534:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1535:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1536:Generated_Source\PSoC4/CyLib.c **** 
1537:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1538:Generated_Source\PSoC4/CyLib.c ****                 {
1539:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1540:Generated_Source\PSoC4/CyLib.c ****                 }
1541:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1542:Generated_Source\PSoC4/CyLib.c ****                 {
1543:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1544:Generated_Source\PSoC4/CyLib.c ****                 }
1545:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1546:Generated_Source\PSoC4/CyLib.c ****                 {
1547:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1548:Generated_Source\PSoC4/CyLib.c ****                 }
1549:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1552:Generated_Source\PSoC4/CyLib.c ****                 }
1553:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1554:Generated_Source\PSoC4/CyLib.c ****                 {
1555:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1556:Generated_Source\PSoC4/CyLib.c ****                 }
1557:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1558:Generated_Source\PSoC4/CyLib.c ****                 {
1559:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1560:Generated_Source\PSoC4/CyLib.c ****                 }
1561:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1562:Generated_Source\PSoC4/CyLib.c ****                 {
1563:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1564:Generated_Source\PSoC4/CyLib.c ****                 }
1565:Generated_Source\PSoC4/CyLib.c ****                 else
1566:Generated_Source\PSoC4/CyLib.c ****                 {
1567:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1568:Generated_Source\PSoC4/CyLib.c ****                 }
1569:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 36


1570:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1571:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1574:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1575:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1576:Generated_Source\PSoC4/CyLib.c ****                 {
1577:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1578:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1581:Generated_Source\PSoC4/CyLib.c ****                 {
1582:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1583:Generated_Source\PSoC4/CyLib.c ****                 }
1584:Generated_Source\PSoC4/CyLib.c ****                 else
1585:Generated_Source\PSoC4/CyLib.c ****                 {
1586:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1587:Generated_Source\PSoC4/CyLib.c ****                 }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1591:Generated_Source\PSoC4/CyLib.c ****                 {
1592:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1593:Generated_Source\PSoC4/CyLib.c ****                 }
1594:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1595:Generated_Source\PSoC4/CyLib.c ****                 {
1596:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1597:Generated_Source\PSoC4/CyLib.c ****                 }
1598:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1599:Generated_Source\PSoC4/CyLib.c ****                 {
1600:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1601:Generated_Source\PSoC4/CyLib.c ****                 }
1602:Generated_Source\PSoC4/CyLib.c ****                 else
1603:Generated_Source\PSoC4/CyLib.c ****                 {
1604:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1605:Generated_Source\PSoC4/CyLib.c ****                 }
1606:Generated_Source\PSoC4/CyLib.c **** 
1607:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1608:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1609:Generated_Source\PSoC4/CyLib.c **** 
1610:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1611:Generated_Source\PSoC4/CyLib.c **** 
1612:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1613:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1614:Generated_Source\PSoC4/CyLib.c ****                 {
1615:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1616:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1617:Generated_Source\PSoC4/CyLib.c ****                 }
1618:Generated_Source\PSoC4/CyLib.c ****                 else
1619:Generated_Source\PSoC4/CyLib.c ****                 {
1620:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1621:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1622:Generated_Source\PSoC4/CyLib.c ****                     */
1623:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1624:Generated_Source\PSoC4/CyLib.c ****                 }
1625:Generated_Source\PSoC4/CyLib.c ****             }
1626:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 37


1627:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1628:Generated_Source\PSoC4/CyLib.c ****         }
1629:Generated_Source\PSoC4/CyLib.c **** 
1630:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1631:Generated_Source\PSoC4/CyLib.c **** 
1632:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1633:Generated_Source\PSoC4/CyLib.c **** 
1634:Generated_Source\PSoC4/CyLib.c **** 
1635:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1636:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1637:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1638:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1641:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1642:Generated_Source\PSoC4/CyLib.c ****     *
1643:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1644:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1645:Generated_Source\PSoC4/CyLib.c ****     *
1646:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1647:Generated_Source\PSoC4/CyLib.c ****     *
1648:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1649:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1650:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1651:Generated_Source\PSoC4/CyLib.c ****     *
1652:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1653:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1654:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1655:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1656:Generated_Source\PSoC4/CyLib.c ****     *
1657:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1658:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1659:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1660:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1661:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1662:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1665:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1666:Generated_Source\PSoC4/CyLib.c ****     {
1667:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1668:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1669:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1670:Generated_Source\PSoC4/CyLib.c **** 
1671:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1672:Generated_Source\PSoC4/CyLib.c ****         {
1673:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1674:Generated_Source\PSoC4/CyLib.c **** 
1675:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1676:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1677:Generated_Source\PSoC4/CyLib.c **** 
1678:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1679:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1680:Generated_Source\PSoC4/CyLib.c **** 
1681:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 38


1684:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1685:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1686:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1687:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1690:Generated_Source\PSoC4/CyLib.c ****             {
1691:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1694:Generated_Source\PSoC4/CyLib.c ****                 {
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1697:Generated_Source\PSoC4/CyLib.c ****                     {
1698:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1699:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1700:Generated_Source\PSoC4/CyLib.c ****                         break;
1701:Generated_Source\PSoC4/CyLib.c ****                     }
1702:Generated_Source\PSoC4/CyLib.c **** 
1703:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1704:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1705:Generated_Source\PSoC4/CyLib.c ****                 }
1706:Generated_Source\PSoC4/CyLib.c ****             }
1707:Generated_Source\PSoC4/CyLib.c ****         }
1708:Generated_Source\PSoC4/CyLib.c ****         else
1709:Generated_Source\PSoC4/CyLib.c ****         {
1710:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1711:Generated_Source\PSoC4/CyLib.c ****         }
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1714:Generated_Source\PSoC4/CyLib.c ****     }
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c **** 
1717:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1718:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1719:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1720:Generated_Source\PSoC4/CyLib.c ****     *
1721:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1722:Generated_Source\PSoC4/CyLib.c ****     *
1723:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1724:Generated_Source\PSoC4/CyLib.c ****     *
1725:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1726:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1727:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1728:Generated_Source\PSoC4/CyLib.c ****     *
1729:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1732:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1733:Generated_Source\PSoC4/CyLib.c ****     {
1734:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1735:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1736:Generated_Source\PSoC4/CyLib.c **** 
1737:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1738:Generated_Source\PSoC4/CyLib.c **** 
1739:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1740:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 39


1741:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1742:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1743:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1744:Generated_Source\PSoC4/CyLib.c ****         {
1745:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1746:Generated_Source\PSoC4/CyLib.c ****         }
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1749:Generated_Source\PSoC4/CyLib.c **** 
1750:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1751:Generated_Source\PSoC4/CyLib.c ****     }
1752:Generated_Source\PSoC4/CyLib.c **** 
1753:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1755:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1758:Generated_Source\PSoC4/CyLib.c ****     *
1759:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1760:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1761:Generated_Source\PSoC4/CyLib.c ****     *
1762:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1763:Generated_Source\PSoC4/CyLib.c ****     *
1764:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1765:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1766:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1769:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1770:Generated_Source\PSoC4/CyLib.c ****     {
1771:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1772:Generated_Source\PSoC4/CyLib.c **** 
1773:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1774:Generated_Source\PSoC4/CyLib.c ****         {
1775:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1776:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1777:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1778:Generated_Source\PSoC4/CyLib.c ****         }
1779:Generated_Source\PSoC4/CyLib.c ****     }
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c **** 
1782:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1783:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1784:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1787:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1788:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1789:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1790:Generated_Source\PSoC4/CyLib.c ****     *
1791:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1792:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1793:Generated_Source\PSoC4/CyLib.c ****     *
1794:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1795:Generated_Source\PSoC4/CyLib.c ****     *
1796:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1797:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 40


1798:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1799:Generated_Source\PSoC4/CyLib.c ****     *
1800:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1801:Generated_Source\PSoC4/CyLib.c ****     * divider.
1802:Generated_Source\PSoC4/CyLib.c ****     *
1803:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1804:Generated_Source\PSoC4/CyLib.c ****     *
1805:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1806:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1807:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1808:Generated_Source\PSoC4/CyLib.c ****     *
1809:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1810:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1811:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1814:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1815:Generated_Source\PSoC4/CyLib.c ****     {
1816:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1817:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1818:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1819:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1822:Generated_Source\PSoC4/CyLib.c **** 
1823:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1826:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1827:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1828:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1829:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1830:Generated_Source\PSoC4/CyLib.c ****         {
1831:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1832:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1833:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1834:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1837:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1838:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1839:Generated_Source\PSoC4/CyLib.c **** 
1840:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1843:Generated_Source\PSoC4/CyLib.c ****         }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1846:Generated_Source\PSoC4/CyLib.c **** 
1847:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1848:Generated_Source\PSoC4/CyLib.c ****     }
1849:Generated_Source\PSoC4/CyLib.c **** 
1850:Generated_Source\PSoC4/CyLib.c **** 
1851:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1852:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1853:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1854:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 41


1855:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1858:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1861:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1862:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1863:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1864:Generated_Source\PSoC4/CyLib.c ****     *
1865:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1866:Generated_Source\PSoC4/CyLib.c ****     *
1867:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1868:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1869:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1870:Generated_Source\PSoC4/CyLib.c ****     *
1871:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1872:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1873:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1874:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1875:Generated_Source\PSoC4/CyLib.c ****     *
1876:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1877:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1878:Generated_Source\PSoC4/CyLib.c ****     *
1879:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1882:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1883:Generated_Source\PSoC4/CyLib.c ****     {
1884:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1885:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1886:Generated_Source\PSoC4/CyLib.c **** 
1887:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1888:Generated_Source\PSoC4/CyLib.c **** 
1889:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1890:Generated_Source\PSoC4/CyLib.c ****         {
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1893:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1894:Generated_Source\PSoC4/CyLib.c ****         }
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1897:Generated_Source\PSoC4/CyLib.c ****     }
1898:Generated_Source\PSoC4/CyLib.c **** 
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1901:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1902:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1905:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1908:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1909:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 42


1912:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1915:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1916:Generated_Source\PSoC4/CyLib.c ****     {
1917:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1918:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1919:Generated_Source\PSoC4/CyLib.c **** 
1920:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1921:Generated_Source\PSoC4/CyLib.c **** 
1922:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1925:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1928:Generated_Source\PSoC4/CyLib.c **** 
1929:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1930:Generated_Source\PSoC4/CyLib.c ****     }
1931:Generated_Source\PSoC4/CyLib.c **** 
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1934:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1935:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1936:Generated_Source\PSoC4/CyLib.c ****     *
1937:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1938:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1939:Generated_Source\PSoC4/CyLib.c ****     *
1940:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1941:Generated_Source\PSoC4/CyLib.c ****     *
1942:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1943:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1944:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1945:Generated_Source\PSoC4/CyLib.c ****     *
1946:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1947:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1948:Generated_Source\PSoC4/CyLib.c ****     *
1949:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1950:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1951:Generated_Source\PSoC4/CyLib.c ****     {
1952:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1953:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1954:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1955:Generated_Source\PSoC4/CyLib.c **** 
1956:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1957:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1958:Generated_Source\PSoC4/CyLib.c **** 
1959:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1960:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1961:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1962:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
1963:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1964:Generated_Source\PSoC4/CyLib.c ****             )
1965:Generated_Source\PSoC4/CyLib.c ****         {
1966:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1967:Generated_Source\PSoC4/CyLib.c ****         }
1968:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 43


1969:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1970:Generated_Source\PSoC4/CyLib.c ****     }
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1974:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1975:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1976:Generated_Source\PSoC4/CyLib.c ****     *
1977:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1978:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1979:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1980:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1981:Generated_Source\PSoC4/CyLib.c ****     *
1982:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1983:Generated_Source\PSoC4/CyLib.c ****     *
1984:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1985:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1986:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1989:Generated_Source\PSoC4/CyLib.c ****     *
1990:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1991:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1992:Generated_Source\PSoC4/CyLib.c ****     {
1993:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1994:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1995:Generated_Source\PSoC4/CyLib.c **** 
1996:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1997:Generated_Source\PSoC4/CyLib.c **** 
1998:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1999:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2000:Generated_Source\PSoC4/CyLib.c **** 
2001:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2002:Generated_Source\PSoC4/CyLib.c **** 
2003:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2004:Generated_Source\PSoC4/CyLib.c ****     }
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2008:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2009:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2010:Generated_Source\PSoC4/CyLib.c ****     *
2011:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2012:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2013:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2014:Generated_Source\PSoC4/CyLib.c ****     *
2015:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2016:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2017:Generated_Source\PSoC4/CyLib.c ****     *
2018:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
2019:Generated_Source\PSoC4/CyLib.c ****     *
2020:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2021:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2022:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2023:Generated_Source\PSoC4/CyLib.c ****     *
2024:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2025:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 44


2026:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2029:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2030:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2031:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2032:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2033:Generated_Source\PSoC4/CyLib.c ****     *
2034:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2037:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2040:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2041:Generated_Source\PSoC4/CyLib.c ****     *
2042:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2043:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2044:Generated_Source\PSoC4/CyLib.c ****     {
2045:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2046:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2049:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2050:Generated_Source\PSoC4/CyLib.c **** 
2051:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2052:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2055:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2058:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2059:Generated_Source\PSoC4/CyLib.c **** 
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2064:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2065:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2066:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2067:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2068:Generated_Source\PSoC4/CyLib.c ****         {
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2071:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2072:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2073:Generated_Source\PSoC4/CyLib.c **** 
2074:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2075:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2076:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2077:Generated_Source\PSoC4/CyLib.c **** 
2078:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2079:Generated_Source\PSoC4/CyLib.c ****             {
2080:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2081:Generated_Source\PSoC4/CyLib.c ****                 {
2082:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 45


2083:Generated_Source\PSoC4/CyLib.c **** 
2084:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2085:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2088:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2089:Generated_Source\PSoC4/CyLib.c **** 
2090:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2091:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2092:Generated_Source\PSoC4/CyLib.c **** 
2093:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2094:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2095:Generated_Source\PSoC4/CyLib.c ****                     {
2096:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2097:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2098:Generated_Source\PSoC4/CyLib.c ****                         break;
2099:Generated_Source\PSoC4/CyLib.c ****                     }
2100:Generated_Source\PSoC4/CyLib.c ****                 }
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c **** 
2103:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2104:Generated_Source\PSoC4/CyLib.c ****                 {
2105:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2106:Generated_Source\PSoC4/CyLib.c ****                     {
2107:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2108:Generated_Source\PSoC4/CyLib.c ****                     }
2109:Generated_Source\PSoC4/CyLib.c ****                 }
2110:Generated_Source\PSoC4/CyLib.c ****             }
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         }
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2115:Generated_Source\PSoC4/CyLib.c ****     }
2116:Generated_Source\PSoC4/CyLib.c **** 
2117:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2118:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2119:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2120:Generated_Source\PSoC4/CyLib.c ****     *
2121:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2122:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2123:Generated_Source\PSoC4/CyLib.c ****     *
2124:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2125:Generated_Source\PSoC4/CyLib.c ****     *
2126:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2127:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2128:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2129:Generated_Source\PSoC4/CyLib.c ****     *
2130:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2131:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2132:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2133:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2134:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2135:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2136:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2137:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2138:Generated_Source\PSoC4/CyLib.c ****     *
2139:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 46


2140:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2141:Generated_Source\PSoC4/CyLib.c ****     {
2142:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2143:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2144:Generated_Source\PSoC4/CyLib.c ****         
2145:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2146:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2147:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2148:Generated_Source\PSoC4/CyLib.c **** 
2149:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2150:Generated_Source\PSoC4/CyLib.c **** 
2151:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2152:Generated_Source\PSoC4/CyLib.c ****         {
2153:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2154:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2155:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2156:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2157:Generated_Source\PSoC4/CyLib.c ****             #else
2158:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2159:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2160:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2161:Generated_Source\PSoC4/CyLib.c ****                 
2162:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2163:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2164:Generated_Source\PSoC4/CyLib.c ****                 
2165:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2166:Generated_Source\PSoC4/CyLib.c ****                 {
2167:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2168:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2169:Generated_Source\PSoC4/CyLib.c ****                 }
2170:Generated_Source\PSoC4/CyLib.c ****                 
2171:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2174:Generated_Source\PSoC4/CyLib.c ****         }
2175:Generated_Source\PSoC4/CyLib.c **** 
2176:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2177:Generated_Source\PSoC4/CyLib.c ****     }
2178:Generated_Source\PSoC4/CyLib.c **** 
2179:Generated_Source\PSoC4/CyLib.c ****     
2180:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2181:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2182:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2183:Generated_Source\PSoC4/CyLib.c ****     *
2184:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2185:Generated_Source\PSoC4/CyLib.c ****     *
2186:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2187:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2188:Generated_Source\PSoC4/CyLib.c ****     *
2189:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2192:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2193:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2194:Generated_Source\PSoC4/CyLib.c ****     *
2195:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2196:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 47


2197:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2198:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2199:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2200:Generated_Source\PSoC4/CyLib.c ****     *
2201:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2202:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2203:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2204:Generated_Source\PSoC4/CyLib.c ****     *
2205:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2206:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2207:Generated_Source\PSoC4/CyLib.c ****     {
2208:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2209:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2210:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2211:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c **** 
2214:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2215:Generated_Source\PSoC4/CyLib.c **** 
2216:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2219:Generated_Source\PSoC4/CyLib.c ****         {
2220:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2221:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2224:Generated_Source\PSoC4/CyLib.c **** 
2225:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2226:Generated_Source\PSoC4/CyLib.c ****         }
2227:Generated_Source\PSoC4/CyLib.c **** 
2228:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2229:Generated_Source\PSoC4/CyLib.c **** 
2230:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2231:Generated_Source\PSoC4/CyLib.c ****     }
2232:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2233:Generated_Source\PSoC4/CyLib.c **** 
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2236:Generated_Source\PSoC4/CyLib.c **** 
2237:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2238:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2239:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2240:Generated_Source\PSoC4/CyLib.c ****     *
2241:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2242:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2243:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2246:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2247:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2248:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2249:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2250:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2251:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2252:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2253:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 48


2254:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2255:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2256:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2257:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2258:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2259:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2260:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2261:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2262:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2263:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2264:Generated_Source\PSoC4/CyLib.c ****     *
2265:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2266:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2267:Generated_Source\PSoC4/CyLib.c ****     {
2268:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2269:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2273:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2276:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2279:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2282:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2285:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2286:Generated_Source\PSoC4/CyLib.c ****     }
2287:Generated_Source\PSoC4/CyLib.c **** 
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2290:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2291:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2292:Generated_Source\PSoC4/CyLib.c ****     *
2293:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2294:Generated_Source\PSoC4/CyLib.c ****     *
2295:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2296:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2297:Generated_Source\PSoC4/CyLib.c ****     {
 425              		.loc 1 2297 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              		@ link register save eliminated.
2298:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 430              		.loc 1 2298 0
 431 0000 054A     		ldr	r2, .L31
 432 0002 1368     		ldr	r3, [r2]
 433 0004 0221     		movs	r1, #2
 434 0006 8B43     		bics	r3, r1
 435 0008 1360     		str	r3, [r2]
2299:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 49


 436              		.loc 1 2299 0
 437 000a 044A     		ldr	r2, .L31+4
 438 000c 1368     		ldr	r3, [r2]
 439 000e 0139     		subs	r1, r1, #1
 440 0010 8B43     		bics	r3, r1
 441 0012 1360     		str	r3, [r2]
2300:Generated_Source\PSoC4/CyLib.c ****     }
 442              		.loc 1 2300 0
 443              		@ sp needed
 444 0014 7047     		bx	lr
 445              	.L32:
 446 0016 C046     		.align	2
 447              	.L31:
 448 0018 08000B40 		.word	1074462728
 449 001c 18000B40 		.word	1074462744
 450              		.cfi_endproc
 451              	.LFE14:
 452              		.size	CySysLvdDisable, .-CySysLvdDisable
 453              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 454              		.align	2
 455              		.global	CySysLvdGetInterruptSource
 456              		.code	16
 457              		.thumb_func
 458              		.type	CySysLvdGetInterruptSource, %function
 459              	CySysLvdGetInterruptSource:
 460              	.LFB15:
2301:Generated_Source\PSoC4/CyLib.c **** 
2302:Generated_Source\PSoC4/CyLib.c **** 
2303:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2304:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2305:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2306:Generated_Source\PSoC4/CyLib.c ****     *
2307:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2308:Generated_Source\PSoC4/CyLib.c ****     *
2309:Generated_Source\PSoC4/CyLib.c ****     * \return
2310:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2311:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2312:Generated_Source\PSoC4/CyLib.c ****     *
2313:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2314:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2315:Generated_Source\PSoC4/CyLib.c ****     {
 461              		.loc 1 2315 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
2316:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 466              		.loc 1 2316 0
 467 0000 024B     		ldr	r3, .L34
 468 0002 1B68     		ldr	r3, [r3]
 469 0004 0220     		movs	r0, #2
 470 0006 1840     		ands	r0, r3
2317:Generated_Source\PSoC4/CyLib.c ****     }
 471              		.loc 1 2317 0
 472              		@ sp needed
 473 0008 7047     		bx	lr
 474              	.L35:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 50


 475 000a C046     		.align	2
 476              	.L34:
 477 000c 04000B40 		.word	1074462724
 478              		.cfi_endproc
 479              	.LFE15:
 480              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 481              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 482              		.align	2
 483              		.global	CySysLvdClearInterrupt
 484              		.code	16
 485              		.thumb_func
 486              		.type	CySysLvdClearInterrupt, %function
 487              	CySysLvdClearInterrupt:
 488              	.LFB16:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c **** 
2320:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2322:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CyLib.c ****     *
2324:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2325:Generated_Source\PSoC4/CyLib.c ****     *
2326:Generated_Source\PSoC4/CyLib.c ****     * \return
2327:Generated_Source\PSoC4/CyLib.c ****     *  None
2328:Generated_Source\PSoC4/CyLib.c ****     *
2329:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2331:Generated_Source\PSoC4/CyLib.c ****     {
 489              		.loc 1 2331 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
2332:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 494              		.loc 1 2332 0
 495 0000 0222     		movs	r2, #2
 496 0002 014B     		ldr	r3, .L37
 497 0004 1A60     		str	r2, [r3]
2333:Generated_Source\PSoC4/CyLib.c ****     }
 498              		.loc 1 2333 0
 499              		@ sp needed
 500 0006 7047     		bx	lr
 501              	.L38:
 502              		.align	2
 503              	.L37:
 504 0008 04000B40 		.word	1074462724
 505              		.cfi_endproc
 506              	.LFE16:
 507              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 508              		.section	.text.CySysGetResetReason,"ax",%progbits
 509              		.align	2
 510              		.global	CySysGetResetReason
 511              		.code	16
 512              		.thumb_func
 513              		.type	CySysGetResetReason, %function
 514              	CySysGetResetReason:
 515              	.LFB17:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 51


2334:Generated_Source\PSoC4/CyLib.c **** 
2335:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2336:Generated_Source\PSoC4/CyLib.c **** 
2337:Generated_Source\PSoC4/CyLib.c **** 
2338:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2339:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2340:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2341:Generated_Source\PSoC4/CyLib.c **** *
2342:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2343:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2344:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2345:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2348:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2349:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2350:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** * \return
2353:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2354:Generated_Source\PSoC4/CyLib.c **** *
2355:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2356:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2357:Generated_Source\PSoC4/CyLib.c **** {
 516              		.loc 1 2357 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521              	.LVL22:
 522 0000 0200     		movs	r2, r0
2358:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 523              		.loc 1 2360 0
 524 0002 1920     		movs	r0, #25
 525              	.LVL23:
 526 0004 0240     		ands	r2, r0
 527              	.LVL24:
2361:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 528              		.loc 1 2361 0
 529 0006 0249     		ldr	r1, .L40
 530 0008 0B68     		ldr	r3, [r1]
 531 000a 1840     		ands	r0, r3
 532              	.LVL25:
2362:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2363:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 533              		.loc 1 2363 0
 534 000c 0A60     		str	r2, [r1]
2364:Generated_Source\PSoC4/CyLib.c **** 
2365:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2366:Generated_Source\PSoC4/CyLib.c **** }
 535              		.loc 1 2366 0
 536              		@ sp needed
 537 000e 7047     		bx	lr
 538              	.L41:
 539              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 52


 540              	.L40:
 541 0010 00030B40 		.word	1074463488
 542              		.cfi_endproc
 543              	.LFE17:
 544              		.size	CySysGetResetReason, .-CySysGetResetReason
 545              		.section	.text.CyDisableInts,"ax",%progbits
 546              		.align	2
 547              		.global	CyDisableInts
 548              		.code	16
 549              		.thumb_func
 550              		.type	CyDisableInts, %function
 551              	CyDisableInts:
 552              	.LFB18:
2367:Generated_Source\PSoC4/CyLib.c **** 
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2370:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2371:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** * \return
2376:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2379:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2380:Generated_Source\PSoC4/CyLib.c **** {
 553              		.loc 1 2380 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
2381:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2384:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 558              		.loc 1 2384 0
 559 0000 024B     		ldr	r3, .L43
 560 0002 1868     		ldr	r0, [r3]
 561              	.LVL26:
2385:Generated_Source\PSoC4/CyLib.c **** 
2386:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2387:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 562              		.loc 1 2387 0
 563 0004 0122     		movs	r2, #1
 564 0006 5242     		rsbs	r2, r2, #0
 565 0008 1A60     		str	r2, [r3]
2388:Generated_Source\PSoC4/CyLib.c **** 
2389:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2390:Generated_Source\PSoC4/CyLib.c **** }
 566              		.loc 1 2390 0
 567              		@ sp needed
 568 000a 7047     		bx	lr
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 000c 80E100E0 		.word	-536813184
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 53


 573              		.cfi_endproc
 574              	.LFE18:
 575              		.size	CyDisableInts, .-CyDisableInts
 576              		.section	.text.CyEnableInts,"ax",%progbits
 577              		.align	2
 578              		.global	CyEnableInts
 579              		.code	16
 580              		.thumb_func
 581              		.type	CyEnableInts, %function
 582              	CyEnableInts:
 583              	.LFB19:
2391:Generated_Source\PSoC4/CyLib.c **** 
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2394:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2395:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2396:Generated_Source\PSoC4/CyLib.c **** *
2397:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2398:Generated_Source\PSoC4/CyLib.c **** *
2399:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2400:Generated_Source\PSoC4/CyLib.c **** *
2401:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2403:Generated_Source\PSoC4/CyLib.c **** {
 584              		.loc 1 2403 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL27:
2404:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 590              		.loc 1 2404 0
 591 0000 014B     		ldr	r3, .L46
 592 0002 1860     		str	r0, [r3]
2405:Generated_Source\PSoC4/CyLib.c **** }
 593              		.loc 1 2405 0
 594              		@ sp needed
 595 0004 7047     		bx	lr
 596              	.L47:
 597 0006 C046     		.align	2
 598              	.L46:
 599 0008 00E100E0 		.word	-536813312
 600              		.cfi_endproc
 601              	.LFE19:
 602              		.size	CyEnableInts, .-CyEnableInts
 603              		.section	.text.CyIntEnable,"ax",%progbits
 604              		.align	2
 605              		.global	CyIntEnable
 606              		.code	16
 607              		.thumb_func
 608              		.type	CyIntEnable, %function
 609              	CyIntEnable:
 610              	.LFB26:
2406:Generated_Source\PSoC4/CyLib.c **** 
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2409:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 54


2410:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2413:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2416:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2417:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2418:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2419:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2420:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2423:Generated_Source\PSoC4/CyLib.c **** *
2424:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2425:Generated_Source\PSoC4/CyLib.c **** *
2426:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2427:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2428:Generated_Source\PSoC4/CyLib.c **** {
2429:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2430:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2431:Generated_Source\PSoC4/CyLib.c **** 
2432:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2433:Generated_Source\PSoC4/CyLib.c **** 
2434:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2435:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2436:Generated_Source\PSoC4/CyLib.c **** 
2437:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2438:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2439:Generated_Source\PSoC4/CyLib.c **** 
2440:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2441:Generated_Source\PSoC4/CyLib.c **** }
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2445:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2446:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2447:Generated_Source\PSoC4/CyLib.c **** *
2448:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2449:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2452:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2453:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2454:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2455:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2456:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2457:Generated_Source\PSoC4/CyLib.c **** *
2458:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2459:Generated_Source\PSoC4/CyLib.c **** *
2460:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2461:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2462:Generated_Source\PSoC4/CyLib.c **** {
2463:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2464:Generated_Source\PSoC4/CyLib.c **** 
2465:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2466:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 55


2467:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2468:Generated_Source\PSoC4/CyLib.c **** }
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2472:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2473:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2476:Generated_Source\PSoC4/CyLib.c **** *
2477:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2478:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2483:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2484:Generated_Source\PSoC4/CyLib.c **** {
2485:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2486:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2487:Generated_Source\PSoC4/CyLib.c **** 
2488:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2491:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2492:Generated_Source\PSoC4/CyLib.c **** 
2493:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2494:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2495:Generated_Source\PSoC4/CyLib.c **** 
2496:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2497:Generated_Source\PSoC4/CyLib.c **** }
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c **** 
2500:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2501:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2502:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2505:Generated_Source\PSoC4/CyLib.c **** *
2506:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2507:Generated_Source\PSoC4/CyLib.c **** *
2508:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2511:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2512:Generated_Source\PSoC4/CyLib.c **** {
2513:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2518:Generated_Source\PSoC4/CyLib.c **** }
2519:Generated_Source\PSoC4/CyLib.c **** 
2520:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2521:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2522:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2523:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 56


2524:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2525:Generated_Source\PSoC4/CyLib.c **** *
2526:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2527:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2528:Generated_Source\PSoC4/CyLib.c **** *
2529:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2530:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2531:Generated_Source\PSoC4/CyLib.c **** {
2532:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2533:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2534:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2535:Generated_Source\PSoC4/CyLib.c **** 
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2537:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2538:Generated_Source\PSoC4/CyLib.c **** 
2539:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2540:Generated_Source\PSoC4/CyLib.c **** 
2541:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2542:Generated_Source\PSoC4/CyLib.c **** 
2543:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2544:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2545:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2546:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2547:Generated_Source\PSoC4/CyLib.c **** 
2548:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2549:Generated_Source\PSoC4/CyLib.c **** }
2550:Generated_Source\PSoC4/CyLib.c **** 
2551:Generated_Source\PSoC4/CyLib.c **** 
2552:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2553:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2554:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2559:Generated_Source\PSoC4/CyLib.c **** *
2560:Generated_Source\PSoC4/CyLib.c **** * \return
2561:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2562:Generated_Source\PSoC4/CyLib.c **** *
2563:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2564:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2565:Generated_Source\PSoC4/CyLib.c **** {
2566:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2567:Generated_Source\PSoC4/CyLib.c **** 
2568:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2571:Generated_Source\PSoC4/CyLib.c **** 
2572:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2573:Generated_Source\PSoC4/CyLib.c **** }
2574:Generated_Source\PSoC4/CyLib.c **** 
2575:Generated_Source\PSoC4/CyLib.c **** 
2576:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2577:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2578:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2579:Generated_Source\PSoC4/CyLib.c **** *
2580:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 57


2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2585:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2586:Generated_Source\PSoC4/CyLib.c **** {
 611              		.loc 1 2586 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616              	.LVL28:
2587:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 617              		.loc 1 2587 0
 618 0000 1F23     		movs	r3, #31
 619 0002 1840     		ands	r0, r3
 620              	.LVL29:
 621 0004 1E3B     		subs	r3, r3, #30
 622 0006 8340     		lsls	r3, r3, r0
 623 0008 014A     		ldr	r2, .L49
 624 000a 1360     		str	r3, [r2]
2588:Generated_Source\PSoC4/CyLib.c **** }
 625              		.loc 1 2588 0
 626              		@ sp needed
 627 000c 7047     		bx	lr
 628              	.L50:
 629 000e C046     		.align	2
 630              	.L49:
 631 0010 00E100E0 		.word	-536813312
 632              		.cfi_endproc
 633              	.LFE26:
 634              		.size	CyIntEnable, .-CyIntEnable
 635              		.section	.text.CyIntGetState,"ax",%progbits
 636              		.align	2
 637              		.global	CyIntGetState
 638              		.code	16
 639              		.thumb_func
 640              		.type	CyIntGetState, %function
 641              	CyIntGetState:
 642              	.LFB27:
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c **** 
2591:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2592:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2593:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2596:Generated_Source\PSoC4/CyLib.c **** *
2597:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2598:Generated_Source\PSoC4/CyLib.c **** *
2599:Generated_Source\PSoC4/CyLib.c **** * \return
2600:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2603:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2604:Generated_Source\PSoC4/CyLib.c **** {
 643              		.loc 1 2604 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 58


 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL30:
2605:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2606:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 649              		.loc 1 2606 0
 650 0000 044B     		ldr	r3, .L52
 651 0002 1B68     		ldr	r3, [r3]
 652 0004 1F22     		movs	r2, #31
 653 0006 1040     		ands	r0, r2
 654              	.LVL31:
 655 0008 C340     		lsrs	r3, r3, r0
 656 000a 1800     		movs	r0, r3
 657 000c 0123     		movs	r3, #1
 658 000e 1840     		ands	r0, r3
2607:Generated_Source\PSoC4/CyLib.c **** }
 659              		.loc 1 2607 0
 660              		@ sp needed
 661 0010 7047     		bx	lr
 662              	.L53:
 663 0012 C046     		.align	2
 664              	.L52:
 665 0014 00E100E0 		.word	-536813312
 666              		.cfi_endproc
 667              	.LFE27:
 668              		.size	CyIntGetState, .-CyIntGetState
 669              		.section	.text.CyIntDisable,"ax",%progbits
 670              		.align	2
 671              		.global	CyIntDisable
 672              		.code	16
 673              		.thumb_func
 674              		.type	CyIntDisable, %function
 675              	CyIntDisable:
 676              	.LFB28:
2608:Generated_Source\PSoC4/CyLib.c **** 
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2611:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2612:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2613:Generated_Source\PSoC4/CyLib.c **** *
2614:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2615:Generated_Source\PSoC4/CyLib.c **** *
2616:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2617:Generated_Source\PSoC4/CyLib.c **** *
2618:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2620:Generated_Source\PSoC4/CyLib.c **** {
 677              		.loc 1 2620 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL32:
2621:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 683              		.loc 1 2621 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 59


 684 0000 1F23     		movs	r3, #31
 685 0002 1840     		ands	r0, r3
 686              	.LVL33:
 687 0004 1E3B     		subs	r3, r3, #30
 688 0006 8340     		lsls	r3, r3, r0
 689 0008 014A     		ldr	r2, .L55
 690 000a 1360     		str	r3, [r2]
2622:Generated_Source\PSoC4/CyLib.c **** }
 691              		.loc 1 2622 0
 692              		@ sp needed
 693 000c 7047     		bx	lr
 694              	.L56:
 695 000e C046     		.align	2
 696              	.L55:
 697 0010 80E100E0 		.word	-536813184
 698              		.cfi_endproc
 699              	.LFE28:
 700              		.size	CyIntDisable, .-CyIntDisable
 701              		.section	.text.CyIntSetPending,"ax",%progbits
 702              		.align	2
 703              		.global	CyIntSetPending
 704              		.code	16
 705              		.thumb_func
 706              		.type	CyIntSetPending, %function
 707              	CyIntSetPending:
 708              	.LFB29:
2623:Generated_Source\PSoC4/CyLib.c **** 
2624:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2625:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2626:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2627:Generated_Source\PSoC4/CyLib.c **** *
2628:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2629:Generated_Source\PSoC4/CyLib.c **** *
2630:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2634:Generated_Source\PSoC4/CyLib.c **** {
 709              		.loc 1 2634 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL34:
2635:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 715              		.loc 1 2635 0
 716 0000 1F23     		movs	r3, #31
 717 0002 1840     		ands	r0, r3
 718              	.LVL35:
 719 0004 1E3B     		subs	r3, r3, #30
 720 0006 8340     		lsls	r3, r3, r0
 721 0008 014A     		ldr	r2, .L58
 722 000a 1360     		str	r3, [r2]
2636:Generated_Source\PSoC4/CyLib.c **** }
 723              		.loc 1 2636 0
 724              		@ sp needed
 725 000c 7047     		bx	lr
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 60


 726              	.L59:
 727 000e C046     		.align	2
 728              	.L58:
 729 0010 00E200E0 		.word	-536813056
 730              		.cfi_endproc
 731              	.LFE29:
 732              		.size	CyIntSetPending, .-CyIntSetPending
 733              		.section	.text.CyIntClearPending,"ax",%progbits
 734              		.align	2
 735              		.global	CyIntClearPending
 736              		.code	16
 737              		.thumb_func
 738              		.type	CyIntClearPending, %function
 739              	CyIntClearPending:
 740              	.LFB30:
2637:Generated_Source\PSoC4/CyLib.c **** 
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2640:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2641:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2642:Generated_Source\PSoC4/CyLib.c **** *
2643:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2644:Generated_Source\PSoC4/CyLib.c **** *
2645:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2646:Generated_Source\PSoC4/CyLib.c **** *
2647:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2648:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2649:Generated_Source\PSoC4/CyLib.c **** {
 741              		.loc 1 2649 0
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 0, uses_anonymous_args = 0
 745              		@ link register save eliminated.
 746              	.LVL36:
2650:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 747              		.loc 1 2650 0
 748 0000 1F23     		movs	r3, #31
 749 0002 1840     		ands	r0, r3
 750              	.LVL37:
 751 0004 1E3B     		subs	r3, r3, #30
 752 0006 8340     		lsls	r3, r3, r0
 753 0008 014A     		ldr	r2, .L61
 754 000a 1360     		str	r3, [r2]
2651:Generated_Source\PSoC4/CyLib.c **** }
 755              		.loc 1 2651 0
 756              		@ sp needed
 757 000c 7047     		bx	lr
 758              	.L62:
 759 000e C046     		.align	2
 760              	.L61:
 761 0010 80E200E0 		.word	-536812928
 762              		.cfi_endproc
 763              	.LFE30:
 764              		.size	CyIntClearPending, .-CyIntClearPending
 765              		.section	.text.CyHalt,"ax",%progbits
 766              		.align	2
 767              		.global	CyHalt
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 61


 768              		.code	16
 769              		.thumb_func
 770              		.type	CyHalt, %function
 771              	CyHalt:
 772              	.LFB31:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2661:Generated_Source\PSoC4/CyLib.c **** *
2662:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2663:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2664:Generated_Source\PSoC4/CyLib.c **** {
 773              		.loc 1 2664 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778              	.LVL38:
2665:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2666:Generated_Source\PSoC4/CyLib.c ****     {
2667:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2668:Generated_Source\PSoC4/CyLib.c ****     }
2669:Generated_Source\PSoC4/CyLib.c **** 
2670:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2671:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2672:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2673:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 779              		.loc 1 2673 0
 780              		.syntax divided
 781              	@ 2673 "Generated_Source\PSoC4\CyLib.c" 1
 782 0000 01BE     		    bkpt    1
 783              	@ 0 "" 2
2674:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2675:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2676:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2677:Generated_Source\PSoC4/CyLib.c **** }
 784              		.loc 1 2677 0
 785              		.thumb
 786              		.syntax unified
 787              		@ sp needed
 788 0002 7047     		bx	lr
 789              		.cfi_endproc
 790              	.LFE31:
 791              		.size	CyHalt, .-CyHalt
 792              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 793              		.align	2
 794              		.global	CySysClkWriteEcoDiv
 795              		.code	16
 796              		.thumb_func
 797              		.type	CySysClkWriteEcoDiv, %function
 798              	CySysClkWriteEcoDiv:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 62


 799              	.LFB12:
1375:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 800              		.loc 1 1375 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL39:
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 809 0002 0400     		movs	r4, r0
1378:Generated_Source\PSoC4/CyLib.c ****             {
 810              		.loc 1 1378 0
 811 0004 0A4B     		ldr	r3, .L67
 812 0006 1B68     		ldr	r3, [r3]
 813 0008 0722     		movs	r2, #7
 814 000a 1340     		ands	r3, r2
 815 000c 022B     		cmp	r3, #2
 816 000e 0BD0     		beq	.L65
1380:Generated_Source\PSoC4/CyLib.c **** 
 817              		.loc 1 1380 0
 818 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 819              	.LVL40:
1382:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 820              		.loc 1 1382 0
 821 0014 0321     		movs	r1, #3
 822 0016 0C40     		ands	r4, r1
 823              	.LVL41:
1383:Generated_Source\PSoC4/CyLib.c **** 
 824              		.loc 1 1383 0
 825 0018 064A     		ldr	r2, .L67+4
 826 001a 1368     		ldr	r3, [r2]
 827 001c 8B43     		bics	r3, r1
1382:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 828              		.loc 1 1382 0
 829 001e 2343     		orrs	r3, r4
 830 0020 1360     		str	r3, [r2]
1385:Generated_Source\PSoC4/CyLib.c ****             }
 831              		.loc 1 1385 0
 832 0022 FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL42:
 834 0026 02E0     		b	.L64
 835              	.LVL43:
 836              	.L65:
1390:Generated_Source\PSoC4/CyLib.c ****             }
 837              		.loc 1 1390 0 discriminator 1
 838 0028 0020     		movs	r0, #0
 839              	.LVL44:
 840 002a FFF7FEFF 		bl	CyHalt
 841              	.LVL45:
 842              	.L64:
1392:Generated_Source\PSoC4/CyLib.c **** 
 843              		.loc 1 1392 0
 844              		@ sp needed
 845 002e 10BD     		pop	{r4, pc}
 846              	.L68:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 63


 847              		.align	2
 848              	.L67:
 849 0030 00010B40 		.word	1074462976
 850 0034 64F02E40 		.word	1076818020
 851              		.cfi_endproc
 852              	.LFE12:
 853              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 854              		.section	.text.CyIntSetSysVector,"ax",%progbits
 855              		.align	2
 856              		.global	CyIntSetSysVector
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyIntSetSysVector, %function
 860              	CyIntSetSysVector:
 861              	.LFB20:
2428:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 862              		.loc 1 2428 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              	.LVL46:
 867 0000 70B5     		push	{r4, r5, r6, lr}
 868              		.cfi_def_cfa_offset 16
 869              		.cfi_offset 4, -16
 870              		.cfi_offset 5, -12
 871              		.cfi_offset 6, -8
 872              		.cfi_offset 14, -4
 873 0002 0400     		movs	r4, r0
 874 0004 0D00     		movs	r5, r1
 875              	.LVL47:
2432:Generated_Source\PSoC4/CyLib.c **** 
 876              		.loc 1 2432 0
 877 0006 0F28     		cmp	r0, #15
 878 0008 02D9     		bls	.L70
2432:Generated_Source\PSoC4/CyLib.c **** 
 879              		.loc 1 2432 0 is_stmt 0 discriminator 1
 880 000a 0020     		movs	r0, #0
 881              	.LVL48:
 882 000c FFF7FEFF 		bl	CyHalt
 883              	.LVL49:
 884              	.L70:
2435:Generated_Source\PSoC4/CyLib.c **** 
 885              		.loc 1 2435 0 is_stmt 1
 886 0010 A400     		lsls	r4, r4, #2
 887 0012 8023     		movs	r3, #128
 888 0014 9B05     		lsls	r3, r3, #22
 889 0016 9C46     		mov	ip, r3
 890 0018 6444     		add	r4, r4, ip
 891 001a 2068     		ldr	r0, [r4]
 892              	.LVL50:
2438:Generated_Source\PSoC4/CyLib.c **** 
 893              		.loc 1 2438 0
 894 001c 2560     		str	r5, [r4]
2441:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2441 0
 896              		@ sp needed
 897              	.LVL51:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 64


 898 001e 70BD     		pop	{r4, r5, r6, pc}
 899              		.cfi_endproc
 900              	.LFE20:
 901              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 902              		.section	.text.CyIntGetSysVector,"ax",%progbits
 903              		.align	2
 904              		.global	CyIntGetSysVector
 905              		.code	16
 906              		.thumb_func
 907              		.type	CyIntGetSysVector, %function
 908              	CyIntGetSysVector:
 909              	.LFB21:
2462:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 910              		.loc 1 2462 0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914              	.LVL52:
 915 0000 10B5     		push	{r4, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 4, -8
 918              		.cfi_offset 14, -4
 919 0002 0400     		movs	r4, r0
 920              	.LVL53:
2465:Generated_Source\PSoC4/CyLib.c **** 
 921              		.loc 1 2465 0
 922 0004 0F28     		cmp	r0, #15
 923 0006 02D9     		bls	.L72
2465:Generated_Source\PSoC4/CyLib.c **** 
 924              		.loc 1 2465 0 is_stmt 0 discriminator 1
 925 0008 0020     		movs	r0, #0
 926              	.LVL54:
 927 000a FFF7FEFF 		bl	CyHalt
 928              	.LVL55:
 929              	.L72:
2467:Generated_Source\PSoC4/CyLib.c **** }
 930              		.loc 1 2467 0 is_stmt 1
 931 000e A400     		lsls	r4, r4, #2
 932 0010 8023     		movs	r3, #128
 933 0012 9B05     		lsls	r3, r3, #22
 934 0014 9C46     		mov	ip, r3
 935 0016 6444     		add	r4, r4, ip
 936 0018 2068     		ldr	r0, [r4]
2468:Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2468 0
 938              		@ sp needed
 939 001a 10BD     		pop	{r4, pc}
 940              		.cfi_endproc
 941              	.LFE21:
 942              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 943              		.section	.text.CyIntSetVector,"ax",%progbits
 944              		.align	2
 945              		.global	CyIntSetVector
 946              		.code	16
 947              		.thumb_func
 948              		.type	CyIntSetVector, %function
 949              	CyIntSetVector:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 65


 950              	.LFB22:
2484:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 951              		.loc 1 2484 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 0
 954              		@ frame_needed = 0, uses_anonymous_args = 0
 955              	.LVL56:
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962 0002 0400     		movs	r4, r0
 963 0004 0D00     		movs	r5, r1
 964              	.LVL57:
2488:Generated_Source\PSoC4/CyLib.c **** 
 965              		.loc 1 2488 0
 966 0006 1F28     		cmp	r0, #31
 967 0008 02D9     		bls	.L74
2488:Generated_Source\PSoC4/CyLib.c **** 
 968              		.loc 1 2488 0 is_stmt 0 discriminator 1
 969 000a 0020     		movs	r0, #0
 970              	.LVL58:
 971 000c FFF7FEFF 		bl	CyHalt
 972              	.LVL59:
 973              	.L74:
2491:Generated_Source\PSoC4/CyLib.c **** 
 974              		.loc 1 2491 0 is_stmt 1
 975 0010 1034     		adds	r4, r4, #16
 976 0012 A400     		lsls	r4, r4, #2
 977 0014 8023     		movs	r3, #128
 978 0016 9B05     		lsls	r3, r3, #22
 979 0018 9C46     		mov	ip, r3
 980 001a 6444     		add	r4, r4, ip
 981 001c 2068     		ldr	r0, [r4]
 982              	.LVL60:
2494:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2494 0
 984 001e 2560     		str	r5, [r4]
2497:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2497 0
 986              		@ sp needed
 987              	.LVL61:
 988 0020 70BD     		pop	{r4, r5, r6, pc}
 989              		.cfi_endproc
 990              	.LFE22:
 991              		.size	CyIntSetVector, .-CyIntSetVector
 992 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 993              		.align	2
 994              		.global	CyIntGetVector
 995              		.code	16
 996              		.thumb_func
 997              		.type	CyIntGetVector, %function
 998              	CyIntGetVector:
 999              	.LFB23:
2512:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 66


 1000              		.loc 1 2512 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              	.LVL62:
 1005 0000 10B5     		push	{r4, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 4, -8
 1008              		.cfi_offset 14, -4
 1009 0002 0400     		movs	r4, r0
 1010              	.LVL63:
2515:Generated_Source\PSoC4/CyLib.c **** 
 1011              		.loc 1 2515 0
 1012 0004 1F28     		cmp	r0, #31
 1013 0006 02D9     		bls	.L76
2515:Generated_Source\PSoC4/CyLib.c **** 
 1014              		.loc 1 2515 0 is_stmt 0 discriminator 1
 1015 0008 0020     		movs	r0, #0
 1016              	.LVL64:
 1017 000a FFF7FEFF 		bl	CyHalt
 1018              	.LVL65:
 1019              	.L76:
2517:Generated_Source\PSoC4/CyLib.c **** }
 1020              		.loc 1 2517 0 is_stmt 1
 1021 000e 1034     		adds	r4, r4, #16
 1022 0010 A400     		lsls	r4, r4, #2
 1023 0012 8023     		movs	r3, #128
 1024 0014 9B05     		lsls	r3, r3, #22
 1025 0016 9C46     		mov	ip, r3
 1026 0018 6444     		add	r4, r4, ip
 1027 001a 2068     		ldr	r0, [r4]
2518:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2518 0
 1029              		@ sp needed
 1030 001c 10BD     		pop	{r4, pc}
 1031              		.cfi_endproc
 1032              	.LFE23:
 1033              		.size	CyIntGetVector, .-CyIntGetVector
 1034 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1035              		.align	2
 1036              		.global	CyIntSetPriority
 1037              		.code	16
 1038              		.thumb_func
 1039              		.type	CyIntSetPriority, %function
 1040              	CyIntSetPriority:
 1041              	.LFB24:
2531:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1042              		.loc 1 2531 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              	.LVL66:
 1047 0000 70B5     		push	{r4, r5, r6, lr}
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 4, -16
 1050              		.cfi_offset 5, -12
 1051              		.cfi_offset 6, -8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 67


 1052              		.cfi_offset 14, -4
 1053 0002 0400     		movs	r4, r0
 1054 0004 0E00     		movs	r6, r1
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1055              		.loc 1 2536 0
 1056 0006 0329     		cmp	r1, #3
 1057 0008 02D9     		bls	.L78
2536:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1058              		.loc 1 2536 0 is_stmt 0 discriminator 1
 1059 000a 0020     		movs	r0, #0
 1060              	.LVL67:
 1061 000c FFF7FEFF 		bl	CyHalt
 1062              	.LVL68:
 1063              	.L78:
2537:Generated_Source\PSoC4/CyLib.c **** 
 1064              		.loc 1 2537 0 is_stmt 1
 1065 0010 1F2C     		cmp	r4, #31
 1066 0012 02D9     		bls	.L79
2537:Generated_Source\PSoC4/CyLib.c **** 
 1067              		.loc 1 2537 0 is_stmt 0 discriminator 1
 1068 0014 0020     		movs	r0, #0
 1069 0016 FFF7FEFF 		bl	CyHalt
 1070              	.LVL69:
 1071              	.L79:
2539:Generated_Source\PSoC4/CyLib.c **** 
 1072              		.loc 1 2539 0 is_stmt 1
 1073 001a 0325     		movs	r5, #3
 1074 001c 2540     		ands	r5, r4
 1075 001e ED00     		lsls	r5, r5, #3
 1076 0020 0635     		adds	r5, r5, #6
 1077              	.LVL70:
2541:Generated_Source\PSoC4/CyLib.c **** 
 1078              		.loc 1 2541 0
 1079 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL71:
2543:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1081              		.loc 1 2543 0
 1082 0026 A408     		lsrs	r4, r4, #2
 1083 0028 A400     		lsls	r4, r4, #2
 1084 002a 074B     		ldr	r3, .L80
 1085 002c 9C46     		mov	ip, r3
 1086 002e 6444     		add	r4, r4, ip
 1087 0030 2168     		ldr	r1, [r4]
 1088              	.LVL72:
2544:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1089              		.loc 1 2544 0
 1090 0032 0323     		movs	r3, #3
 1091 0034 AB40     		lsls	r3, r3, r5
 1092 0036 9943     		bics	r1, r3
 1093              	.LVL73:
 1094 0038 0B00     		movs	r3, r1
 1095              	.LVL74:
2545:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1096              		.loc 1 2545 0
 1097 003a 3100     		movs	r1, r6
 1098              	.LVL75:
 1099 003c A940     		lsls	r1, r1, r5
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 68


 1100 003e 1943     		orrs	r1, r3
 1101              	.LVL76:
2546:Generated_Source\PSoC4/CyLib.c **** 
 1102              		.loc 1 2546 0
 1103 0040 2160     		str	r1, [r4]
2548:Generated_Source\PSoC4/CyLib.c **** }
 1104              		.loc 1 2548 0
 1105 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1106              	.LVL77:
2549:Generated_Source\PSoC4/CyLib.c **** 
 1107              		.loc 1 2549 0
 1108              		@ sp needed
 1109              	.LVL78:
 1110 0046 70BD     		pop	{r4, r5, r6, pc}
 1111              	.L81:
 1112              		.align	2
 1113              	.L80:
 1114 0048 00E400E0 		.word	-536812544
 1115              		.cfi_endproc
 1116              	.LFE24:
 1117              		.size	CyIntSetPriority, .-CyIntSetPriority
 1118              		.section	.text.CyIntGetPriority,"ax",%progbits
 1119              		.align	2
 1120              		.global	CyIntGetPriority
 1121              		.code	16
 1122              		.thumb_func
 1123              		.type	CyIntGetPriority, %function
 1124              	CyIntGetPriority:
 1125              	.LFB25:
2565:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1126              		.loc 1 2565 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL79:
 1131 0000 10B5     		push	{r4, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 4, -8
 1134              		.cfi_offset 14, -4
 1135 0002 0400     		movs	r4, r0
2568:Generated_Source\PSoC4/CyLib.c **** 
 1136              		.loc 1 2568 0
 1137 0004 1F28     		cmp	r0, #31
 1138 0006 02D9     		bls	.L83
2568:Generated_Source\PSoC4/CyLib.c **** 
 1139              		.loc 1 2568 0 is_stmt 0 discriminator 1
 1140 0008 0020     		movs	r0, #0
 1141              	.LVL80:
 1142 000a FFF7FEFF 		bl	CyHalt
 1143              	.LVL81:
 1144              	.L83:
2570:Generated_Source\PSoC4/CyLib.c **** 
 1145              		.loc 1 2570 0 is_stmt 1
 1146 000e A308     		lsrs	r3, r4, #2
 1147 0010 9B00     		lsls	r3, r3, #2
 1148 0012 054A     		ldr	r2, .L84
 1149 0014 9446     		mov	ip, r2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 69


 1150 0016 6344     		add	r3, r3, ip
 1151 0018 1868     		ldr	r0, [r3]
 1152 001a 0323     		movs	r3, #3
 1153 001c 1C40     		ands	r4, r3
 1154 001e E400     		lsls	r4, r4, #3
 1155 0020 0634     		adds	r4, r4, #6
 1156 0022 E040     		lsrs	r0, r0, r4
 1157              	.LVL82:
2572:Generated_Source\PSoC4/CyLib.c **** }
 1158              		.loc 1 2572 0
 1159 0024 1840     		ands	r0, r3
 1160              	.LVL83:
2573:Generated_Source\PSoC4/CyLib.c **** 
 1161              		.loc 1 2573 0
 1162              		@ sp needed
 1163 0026 10BD     		pop	{r4, pc}
 1164              	.L85:
 1165              		.align	2
 1166              	.L84:
 1167 0028 00E400E0 		.word	-536812544
 1168              		.cfi_endproc
 1169              	.LFE25:
 1170              		.size	CyIntGetPriority, .-CyIntGetPriority
 1171              		.section	.text.CySoftwareReset,"ax",%progbits
 1172              		.align	2
 1173              		.global	CySoftwareReset
 1174              		.code	16
 1175              		.thumb_func
 1176              		.type	CySoftwareReset, %function
 1177              	CySoftwareReset:
 1178              	.LFB32:
2678:Generated_Source\PSoC4/CyLib.c **** 
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2681:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2682:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
 1179              		.loc 1 2688 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
2689:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2690:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2691:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2692:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2693:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1184              		.loc 1 2693 0
 1185 0000 034A     		ldr	r2, .L87
 1186 0002 1368     		ldr	r3, [r2]
 1187 0004 1B04     		lsls	r3, r3, #16
 1188 0006 1B0C     		lsrs	r3, r3, #16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 70


2694:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1189              		.loc 1 2694 0
 1190 0008 0249     		ldr	r1, .L87+4
 1191 000a 0B43     		orrs	r3, r1
2693:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1192              		.loc 1 2693 0
 1193 000c 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c **** }
 1194              		.loc 1 2695 0
 1195              		@ sp needed
 1196 000e 7047     		bx	lr
 1197              	.L88:
 1198              		.align	2
 1199              	.L87:
 1200 0010 0CED00E0 		.word	-536810228
 1201 0014 0400FA05 		.word	100270084
 1202              		.cfi_endproc
 1203              	.LFE32:
 1204              		.size	CySoftwareReset, .-CySoftwareReset
 1205              		.section	.text.CyDelay,"ax",%progbits
 1206              		.align	2
 1207              		.global	CyDelay
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	CyDelay, %function
 1211              	CyDelay:
 1212              	.LFB33:
2696:Generated_Source\PSoC4/CyLib.c **** 
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2701:Generated_Source\PSoC4/CyLib.c **** *
2702:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2705:Generated_Source\PSoC4/CyLib.c **** *
2706:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2708:Generated_Source\PSoC4/CyLib.c **** {
 1213              		.loc 1 2708 0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              	.LVL84:
 1218 0000 10B5     		push	{r4, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 1222 0002 0400     		movs	r4, r0
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1223              		.loc 1 2709 0
 1224 0004 06E0     		b	.L90
 1225              	.LVL85:
 1226              	.L91:
2710:Generated_Source\PSoC4/CyLib.c ****     {
2711:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 71


2712:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2713:Generated_Source\PSoC4/CyLib.c ****          */
2714:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1227              		.loc 1 2714 0
 1228 0006 084B     		ldr	r3, .L92
 1229 0008 5868     		ldr	r0, [r3, #4]
 1230 000a FFF7FEFF 		bl	CyDelayCycles
 1231              	.LVL86:
2715:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1232              		.loc 1 2715 0
 1233 000e 074B     		ldr	r3, .L92+4
 1234 0010 9C46     		mov	ip, r3
 1235 0012 6444     		add	r4, r4, ip
 1236              	.LVL87:
 1237              	.L90:
2709:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1238              		.loc 1 2709 0
 1239 0014 8023     		movs	r3, #128
 1240 0016 1B02     		lsls	r3, r3, #8
 1241 0018 9C42     		cmp	r4, r3
 1242 001a F4D8     		bhi	.L91
2716:Generated_Source\PSoC4/CyLib.c ****     }
2717:Generated_Source\PSoC4/CyLib.c **** 
2718:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1243              		.loc 1 2718 0
 1244 001c 024B     		ldr	r3, .L92
 1245 001e 9868     		ldr	r0, [r3, #8]
 1246 0020 6043     		muls	r0, r4
 1247 0022 FFF7FEFF 		bl	CyDelayCycles
 1248              	.LVL88:
2719:Generated_Source\PSoC4/CyLib.c **** }
 1249              		.loc 1 2719 0
 1250              		@ sp needed
 1251              	.LVL89:
 1252 0026 10BD     		pop	{r4, pc}
 1253              	.L93:
 1254              		.align	2
 1255              	.L92:
 1256 0028 00000000 		.word	.LANCHOR0
 1257 002c 0080FFFF 		.word	-32768
 1258              		.cfi_endproc
 1259              	.LFE33:
 1260              		.size	CyDelay, .-CyDelay
 1261              		.section	.text.CyDelayUs,"ax",%progbits
 1262              		.align	2
 1263              		.global	CyDelayUs
 1264              		.code	16
 1265              		.thumb_func
 1266              		.type	CyDelayUs, %function
 1267              	CyDelayUs:
 1268              	.LFB34:
2720:Generated_Source\PSoC4/CyLib.c **** 
2721:Generated_Source\PSoC4/CyLib.c **** 
2722:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2723:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2724:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2725:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 72


2726:Generated_Source\PSoC4/CyLib.c **** *
2727:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2728:Generated_Source\PSoC4/CyLib.c **** *
2729:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2730:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2731:Generated_Source\PSoC4/CyLib.c **** {
 1269              		.loc 1 2731 0
 1270              		.cfi_startproc
 1271              		@ args = 0, pretend = 0, frame = 0
 1272              		@ frame_needed = 0, uses_anonymous_args = 0
 1273              	.LVL90:
 1274 0000 10B5     		push	{r4, lr}
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 4, -8
 1277              		.cfi_offset 14, -4
2732:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1278              		.loc 1 2732 0
 1279 0002 034B     		ldr	r3, .L95
 1280 0004 1B7B     		ldrb	r3, [r3, #12]
 1281 0006 5843     		muls	r0, r3
 1282              	.LVL91:
 1283 0008 FFF7FEFF 		bl	CyDelayCycles
 1284              	.LVL92:
2733:Generated_Source\PSoC4/CyLib.c **** }
 1285              		.loc 1 2733 0
 1286              		@ sp needed
 1287 000c 10BD     		pop	{r4, pc}
 1288              	.L96:
 1289 000e C046     		.align	2
 1290              	.L95:
 1291 0010 00000000 		.word	.LANCHOR0
 1292              		.cfi_endproc
 1293              	.LFE34:
 1294              		.size	CyDelayUs, .-CyDelayUs
 1295              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1296              		.align	2
 1297              		.global	CySysClkEcoStart
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	CySysClkEcoStart, %function
 1301              	CySysClkEcoStart:
 1302              	.LFB9:
1152:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1303              		.loc 1 1152 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              	.LVL93:
 1308 0000 10B5     		push	{r4, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 1312 0002 0400     		movs	r4, r0
 1313              	.LVL94:
1157:Generated_Source\PSoC4/CyLib.c **** 
 1314              		.loc 1 1157 0
 1315 0004 0F4A     		ldr	r2, .L102
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 73


 1316 0006 1168     		ldr	r1, [r2]
 1317 0008 0123     		movs	r3, #1
 1318 000a 0B43     		orrs	r3, r1
 1319 000c 1360     		str	r3, [r2]
1160:Generated_Source\PSoC4/CyLib.c **** 
 1320              		.loc 1 1160 0
 1321 000e 0E4A     		ldr	r2, .L102+4
 1322 0010 0E4B     		ldr	r3, .L102+8
 1323 0012 1A60     		str	r2, [r3]
1163:Generated_Source\PSoC4/CyLib.c ****         
 1324              		.loc 1 1163 0
 1325 0014 0E4A     		ldr	r2, .L102+12
 1326 0016 1368     		ldr	r3, [r2]
 1327 0018 8021     		movs	r1, #128
 1328 001a 0902     		lsls	r1, r1, #8
 1329 001c 0B43     		orrs	r3, r1
 1330 001e 1360     		str	r3, [r2]
1261:Generated_Source\PSoC4/CyLib.c ****         {
 1331              		.loc 1 1261 0
 1332 0020 0028     		cmp	r0, #0
 1333 0022 09D1     		bne	.L98
1153:Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 1153 0
 1335 0024 0020     		movs	r0, #0
 1336              	.LVL95:
 1337 0026 0CE0     		b	.L99
 1338              	.L100:
1267:Generated_Source\PSoC4/CyLib.c **** 
 1339              		.loc 1 1267 0
 1340 0028 0120     		movs	r0, #1
 1341 002a FFF7FEFF 		bl	CyDelayUs
 1342              	.LVL96:
1269:Generated_Source\PSoC4/CyLib.c ****                 {
 1343              		.loc 1 1269 0
 1344 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1345              	.LVL97:
 1346 0032 0028     		cmp	r0, #0
 1347 0034 04D1     		bne	.L101
1265:Generated_Source\PSoC4/CyLib.c ****             {
 1348              		.loc 1 1265 0
 1349 0036 013C     		subs	r4, r4, #1
 1350              	.LVL98:
 1351              	.L98:
1265:Generated_Source\PSoC4/CyLib.c ****             {
 1352              		.loc 1 1265 0 is_stmt 0 discriminator 1
 1353 0038 002C     		cmp	r4, #0
 1354 003a F5D1     		bne	.L100
1263:Generated_Source\PSoC4/CyLib.c **** 
 1355              		.loc 1 1263 0 is_stmt 1
 1356 003c 1020     		movs	r0, #16
 1357 003e 00E0     		b	.L99
 1358              	.L101:
1271:Generated_Source\PSoC4/CyLib.c ****                     break;
 1359              		.loc 1 1271 0
 1360 0040 0020     		movs	r0, #0
 1361              	.L99:
 1362              	.LVL99:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 74


1279:Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 1279 0
 1364              		@ sp needed
 1365              	.LVL100:
 1366 0042 10BD     		pop	{r4, pc}
 1367              	.L103:
 1368              		.align	2
 1369              	.L102:
 1370 0044 60F02E40 		.word	1076818016
 1371 0048 02200000 		.word	8194
 1372 004c 78002E40 		.word	1076756600
 1373 0050 10002E40 		.word	1076756496
 1374              		.cfi_endproc
 1375              	.LFE9:
 1376              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1377              		.section	.text.CySysLvdEnable,"ax",%progbits
 1378              		.align	2
 1379              		.global	CySysLvdEnable
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CySysLvdEnable, %function
 1383              	CySysLvdEnable:
 1384              	.LFB13:
2267:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1385              		.loc 1 2267 0
 1386              		.cfi_startproc
 1387              		@ args = 0, pretend = 0, frame = 0
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              	.LVL101:
 1390 0000 70B5     		push	{r4, r5, r6, lr}
 1391              		.cfi_def_cfa_offset 16
 1392              		.cfi_offset 4, -16
 1393              		.cfi_offset 5, -12
 1394              		.cfi_offset 6, -8
 1395              		.cfi_offset 14, -4
 1396 0002 0300     		movs	r3, r0
2269:Generated_Source\PSoC4/CyLib.c **** 
 1397              		.loc 1 2269 0
 1398 0004 0D4C     		ldr	r4, .L105
 1399 0006 2268     		ldr	r2, [r4]
 1400 0008 0225     		movs	r5, #2
 1401 000a AA43     		bics	r2, r5
 1402 000c 2260     		str	r2, [r4]
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1403              		.loc 1 2272 0
 1404 000e 0C4A     		ldr	r2, .L105+4
 1405 0010 1168     		ldr	r1, [r2]
 1406 0012 1E20     		movs	r0, #30
 1407              	.LVL102:
 1408 0014 8143     		bics	r1, r0
2273:Generated_Source\PSoC4/CyLib.c **** 
 1409              		.loc 1 2273 0
 1410 0016 5B00     		lsls	r3, r3, #1
 1411              	.LVL103:
 1412 0018 1840     		ands	r0, r3
2272:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1413              		.loc 1 2272 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 75


 1414 001a 0843     		orrs	r0, r1
 1415 001c 1060     		str	r0, [r2]
2276:Generated_Source\PSoC4/CyLib.c **** 
 1416              		.loc 1 2276 0
 1417 001e 1168     		ldr	r1, [r2]
 1418 0020 0123     		movs	r3, #1
 1419 0022 0B43     		orrs	r3, r1
 1420 0024 1360     		str	r3, [r2]
2279:Generated_Source\PSoC4/CyLib.c **** 
 1421              		.loc 1 2279 0
 1422 0026 FA20     		movs	r0, #250
 1423 0028 8000     		lsls	r0, r0, #2
 1424 002a FFF7FEFF 		bl	CyDelayUs
 1425              	.LVL104:
2282:Generated_Source\PSoC4/CyLib.c **** 
 1426              		.loc 1 2282 0
 1427 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1428              	.LVL105:
2285:Generated_Source\PSoC4/CyLib.c ****     }
 1429              		.loc 1 2285 0
 1430 0032 2368     		ldr	r3, [r4]
 1431 0034 1D43     		orrs	r5, r3
 1432 0036 2560     		str	r5, [r4]
2286:Generated_Source\PSoC4/CyLib.c **** 
 1433              		.loc 1 2286 0
 1434              		@ sp needed
 1435 0038 70BD     		pop	{r4, r5, r6, pc}
 1436              	.L106:
 1437 003a C046     		.align	2
 1438              	.L105:
 1439 003c 08000B40 		.word	1074462728
 1440 0040 18000B40 		.word	1074462744
 1441              		.cfi_endproc
 1442              	.LFE13:
 1443              		.size	CySysLvdEnable, .-CySysLvdEnable
 1444              		.global	__aeabi_uidiv
 1445              		.section	.text.CyDelayFreq,"ax",%progbits
 1446              		.align	2
 1447              		.global	CyDelayFreq
 1448              		.code	16
 1449              		.thumb_func
 1450              		.type	CyDelayFreq, %function
 1451              	CyDelayFreq:
 1452              	.LFB35:
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** 
2736:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2737:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2738:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2739:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2740:Generated_Source\PSoC4/CyLib.c **** *
2741:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2744:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2745:Generated_Source\PSoC4/CyLib.c **** {
 1453              		.loc 1 2745 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 76


 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              	.LVL106:
 1458 0000 70B5     		push	{r4, r5, r6, lr}
 1459              		.cfi_def_cfa_offset 16
 1460              		.cfi_offset 4, -16
 1461              		.cfi_offset 5, -12
 1462              		.cfi_offset 6, -8
 1463              		.cfi_offset 14, -4
2746:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1464              		.loc 1 2746 0
 1465 0002 0028     		cmp	r0, #0
 1466 0004 02D0     		beq	.L108
2747:Generated_Source\PSoC4/CyLib.c ****     {
2748:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1467              		.loc 1 2748 0
 1468 0006 0C4B     		ldr	r3, .L110
 1469 0008 1861     		str	r0, [r3, #16]
 1470 000a 02E0     		b	.L109
 1471              	.L108:
2749:Generated_Source\PSoC4/CyLib.c ****     }
2750:Generated_Source\PSoC4/CyLib.c ****     else
2751:Generated_Source\PSoC4/CyLib.c ****     {
2752:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1472              		.loc 1 2752 0
 1473 000c 0B4A     		ldr	r2, .L110+4
 1474 000e 0A4B     		ldr	r3, .L110
 1475 0010 1A61     		str	r2, [r3, #16]
 1476              	.L109:
2753:Generated_Source\PSoC4/CyLib.c ****     }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1477              		.loc 1 2755 0
 1478 0012 094C     		ldr	r4, .L110
 1479 0014 2569     		ldr	r5, [r4, #16]
 1480 0016 0A4B     		ldr	r3, .L110+8
 1481 0018 E818     		adds	r0, r5, r3
 1482              	.LVL107:
 1483 001a 0A49     		ldr	r1, .L110+12
 1484 001c FFF7FEFF 		bl	__aeabi_uidiv
 1485              	.LVL108:
 1486 0020 2073     		strb	r0, [r4, #12]
2756:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1487              		.loc 1 2756 0
 1488 0022 094B     		ldr	r3, .L110+16
 1489 0024 E818     		adds	r0, r5, r3
 1490 0026 FA21     		movs	r1, #250
 1491 0028 8900     		lsls	r1, r1, #2
 1492 002a FFF7FEFF 		bl	__aeabi_uidiv
 1493              	.LVL109:
 1494 002e A060     		str	r0, [r4, #8]
2757:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1495              		.loc 1 2757 0
 1496 0030 C003     		lsls	r0, r0, #15
 1497 0032 6060     		str	r0, [r4, #4]
2758:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 77


 1498              		.loc 1 2758 0
 1499              		@ sp needed
 1500 0034 70BD     		pop	{r4, r5, r6, pc}
 1501              	.L111:
 1502 0036 C046     		.align	2
 1503              	.L110:
 1504 0038 00000000 		.word	.LANCHOR0
 1505 003c 006CDC02 		.word	48000000
 1506 0040 3F420F00 		.word	999999
 1507 0044 40420F00 		.word	1000000
 1508 0048 E7030000 		.word	999
 1509              		.cfi_endproc
 1510              	.LFE35:
 1511              		.size	CyDelayFreq, .-CyDelayFreq
 1512              		.section	.text.CySysTickStop,"ax",%progbits
 1513              		.align	2
 1514              		.global	CySysTickStop
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	CySysTickStop, %function
 1518              	CySysTickStop:
 1519              	.LFB39:
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2763:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2766:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2767:Generated_Source\PSoC4/CyLib.c **** *
2768:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2769:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2770:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2771:Generated_Source\PSoC4/CyLib.c **** *
2772:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2773:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2776:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2777:Generated_Source\PSoC4/CyLib.c **** {
2778:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2779:Generated_Source\PSoC4/CyLib.c ****     {
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2781:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2782:Generated_Source\PSoC4/CyLib.c ****     }
2783:Generated_Source\PSoC4/CyLib.c **** 
2784:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2785:Generated_Source\PSoC4/CyLib.c **** }
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2789:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2790:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2791:Generated_Source\PSoC4/CyLib.c **** *
2792:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2793:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 78


2794:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2795:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2798:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2799:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2800:Generated_Source\PSoC4/CyLib.c **** *
2801:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2802:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2803:Generated_Source\PSoC4/CyLib.c **** *
2804:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2805:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2806:Generated_Source\PSoC4/CyLib.c **** {
2807:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2808:Generated_Source\PSoC4/CyLib.c **** 
2809:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2810:Generated_Source\PSoC4/CyLib.c ****     {
2811:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2812:Generated_Source\PSoC4/CyLib.c ****     }
2813:Generated_Source\PSoC4/CyLib.c **** 
2814:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2817:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2818:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2819:Generated_Source\PSoC4/CyLib.c **** 
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2821:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2822:Generated_Source\PSoC4/CyLib.c **** }
2823:Generated_Source\PSoC4/CyLib.c **** 
2824:Generated_Source\PSoC4/CyLib.c **** 
2825:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2827:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2828:Generated_Source\PSoC4/CyLib.c **** *
2829:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2830:Generated_Source\PSoC4/CyLib.c **** *
2831:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2832:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2833:Generated_Source\PSoC4/CyLib.c **** *
2834:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2835:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2836:Generated_Source\PSoC4/CyLib.c **** {
2837:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2838:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2839:Generated_Source\PSoC4/CyLib.c **** }
2840:Generated_Source\PSoC4/CyLib.c **** 
2841:Generated_Source\PSoC4/CyLib.c **** 
2842:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2843:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2844:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2845:Generated_Source\PSoC4/CyLib.c **** *
2846:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2847:Generated_Source\PSoC4/CyLib.c **** *
2848:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2849:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2850:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 79


2851:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2852:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2853:Generated_Source\PSoC4/CyLib.c **** {
 1520              		.loc 1 2853 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
2854:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1525              		.loc 1 2854 0
 1526 0000 024A     		ldr	r2, .L113
 1527 0002 1368     		ldr	r3, [r2]
 1528 0004 0121     		movs	r1, #1
 1529 0006 8B43     		bics	r3, r1
 1530 0008 1360     		str	r3, [r2]
2855:Generated_Source\PSoC4/CyLib.c **** }
 1531              		.loc 1 2855 0
 1532              		@ sp needed
 1533 000a 7047     		bx	lr
 1534              	.L114:
 1535              		.align	2
 1536              	.L113:
 1537 000c 10E000E0 		.word	-536813552
 1538              		.cfi_endproc
 1539              	.LFE39:
 1540              		.size	CySysTickStop, .-CySysTickStop
 1541              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1542              		.align	2
 1543              		.global	CySysTickEnableInterrupt
 1544              		.code	16
 1545              		.thumb_func
 1546              		.type	CySysTickEnableInterrupt, %function
 1547              	CySysTickEnableInterrupt:
 1548              	.LFB40:
2856:Generated_Source\PSoC4/CyLib.c **** 
2857:Generated_Source\PSoC4/CyLib.c **** 
2858:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2859:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2860:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2865:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2866:Generated_Source\PSoC4/CyLib.c **** *
2867:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2868:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2869:Generated_Source\PSoC4/CyLib.c **** {
 1549              		.loc 1 2869 0
 1550              		.cfi_startproc
 1551              		@ args = 0, pretend = 0, frame = 0
 1552              		@ frame_needed = 0, uses_anonymous_args = 0
 1553              		@ link register save eliminated.
2870:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1554              		.loc 1 2870 0
 1555 0000 024A     		ldr	r2, .L116
 1556 0002 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 80


 1557 0004 0223     		movs	r3, #2
 1558 0006 0B43     		orrs	r3, r1
 1559 0008 1360     		str	r3, [r2]
2871:Generated_Source\PSoC4/CyLib.c **** }
 1560              		.loc 1 2871 0
 1561              		@ sp needed
 1562 000a 7047     		bx	lr
 1563              	.L117:
 1564              		.align	2
 1565              	.L116:
 1566 000c 10E000E0 		.word	-536813552
 1567              		.cfi_endproc
 1568              	.LFE40:
 1569              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1570              		.section	.text.CySysTickEnable,"ax",%progbits
 1571              		.align	2
 1572              		.global	CySysTickEnable
 1573              		.code	16
 1574              		.thumb_func
 1575              		.type	CySysTickEnable, %function
 1576              	CySysTickEnable:
 1577              	.LFB38:
2836:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1578              		.loc 1 2836 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582 0000 10B5     		push	{r4, lr}
 1583              		.cfi_def_cfa_offset 8
 1584              		.cfi_offset 4, -8
 1585              		.cfi_offset 14, -4
2837:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1586              		.loc 1 2837 0
 1587 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1588              	.LVL110:
2838:Generated_Source\PSoC4/CyLib.c **** }
 1589              		.loc 1 2838 0
 1590 0006 034A     		ldr	r2, .L119
 1591 0008 1168     		ldr	r1, [r2]
 1592 000a 0123     		movs	r3, #1
 1593 000c 0B43     		orrs	r3, r1
 1594 000e 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CyLib.c **** 
 1595              		.loc 1 2839 0
 1596              		@ sp needed
 1597 0010 10BD     		pop	{r4, pc}
 1598              	.L120:
 1599 0012 C046     		.align	2
 1600              	.L119:
 1601 0014 10E000E0 		.word	-536813552
 1602              		.cfi_endproc
 1603              	.LFE38:
 1604              		.size	CySysTickEnable, .-CySysTickEnable
 1605              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1606              		.align	2
 1607              		.global	CySysTickDisableInterrupt
 1608              		.code	16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 81


 1609              		.thumb_func
 1610              		.type	CySysTickDisableInterrupt, %function
 1611              	CySysTickDisableInterrupt:
 1612              	.LFB41:
2872:Generated_Source\PSoC4/CyLib.c **** 
2873:Generated_Source\PSoC4/CyLib.c **** 
2874:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2875:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2876:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2879:Generated_Source\PSoC4/CyLib.c **** *
2880:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2881:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2882:Generated_Source\PSoC4/CyLib.c **** *
2883:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2884:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2885:Generated_Source\PSoC4/CyLib.c **** {
 1613              		.loc 1 2885 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 0
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		@ link register save eliminated.
2886:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1618              		.loc 1 2886 0
 1619 0000 024A     		ldr	r2, .L122
 1620 0002 1368     		ldr	r3, [r2]
 1621 0004 0221     		movs	r1, #2
 1622 0006 8B43     		bics	r3, r1
 1623 0008 1360     		str	r3, [r2]
2887:Generated_Source\PSoC4/CyLib.c **** }
 1624              		.loc 1 2887 0
 1625              		@ sp needed
 1626 000a 7047     		bx	lr
 1627              	.L123:
 1628              		.align	2
 1629              	.L122:
 1630 000c 10E000E0 		.word	-536813552
 1631              		.cfi_endproc
 1632              	.LFE41:
 1633              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1634              		.section	.text.CySysTickSetReload,"ax",%progbits
 1635              		.align	2
 1636              		.global	CySysTickSetReload
 1637              		.code	16
 1638              		.thumb_func
 1639              		.type	CySysTickSetReload, %function
 1640              	CySysTickSetReload:
 1641              	.LFB42:
2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c **** 
2890:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2891:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2892:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2893:Generated_Source\PSoC4/CyLib.c **** *
2894:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2895:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 82


2896:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2901:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2902:Generated_Source\PSoC4/CyLib.c **** {
 1642              		.loc 1 2902 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              		@ link register save eliminated.
 1647              	.LVL111:
2903:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1648              		.loc 1 2903 0
 1649 0000 0002     		lsls	r0, r0, #8
 1650              	.LVL112:
 1651 0002 000A     		lsrs	r0, r0, #8
 1652 0004 014B     		ldr	r3, .L125
 1653 0006 1860     		str	r0, [r3]
2904:Generated_Source\PSoC4/CyLib.c **** }
 1654              		.loc 1 2904 0
 1655              		@ sp needed
 1656 0008 7047     		bx	lr
 1657              	.L126:
 1658 000a C046     		.align	2
 1659              	.L125:
 1660 000c 14E000E0 		.word	-536813548
 1661              		.cfi_endproc
 1662              	.LFE42:
 1663              		.size	CySysTickSetReload, .-CySysTickSetReload
 1664              		.section	.text.CySysTickGetReload,"ax",%progbits
 1665              		.align	2
 1666              		.global	CySysTickGetReload
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CySysTickGetReload, %function
 1670              	CySysTickGetReload:
 1671              	.LFB43:
2905:Generated_Source\PSoC4/CyLib.c **** 
2906:Generated_Source\PSoC4/CyLib.c **** 
2907:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2908:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2909:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2910:Generated_Source\PSoC4/CyLib.c **** *
2911:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** * \return
2914:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2915:Generated_Source\PSoC4/CyLib.c **** *
2916:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2917:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2918:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 2918 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 83


 1676              		@ link register save eliminated.
2919:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1677              		.loc 1 2919 0
 1678 0000 024B     		ldr	r3, .L128
 1679 0002 1868     		ldr	r0, [r3]
 1680 0004 0002     		lsls	r0, r0, #8
 1681 0006 000A     		lsrs	r0, r0, #8
2920:Generated_Source\PSoC4/CyLib.c **** }
 1682              		.loc 1 2920 0
 1683              		@ sp needed
 1684 0008 7047     		bx	lr
 1685              	.L129:
 1686 000a C046     		.align	2
 1687              	.L128:
 1688 000c 14E000E0 		.word	-536813548
 1689              		.cfi_endproc
 1690              	.LFE43:
 1691              		.size	CySysTickGetReload, .-CySysTickGetReload
 1692              		.section	.text.CySysTickGetValue,"ax",%progbits
 1693              		.align	2
 1694              		.global	CySysTickGetValue
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	CySysTickGetValue, %function
 1698              	CySysTickGetValue:
 1699              	.LFB44:
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** * \return
2930:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2933:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2934:Generated_Source\PSoC4/CyLib.c **** {
 1700              		.loc 1 2934 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
2935:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1705              		.loc 1 2935 0
 1706 0000 024B     		ldr	r3, .L131
 1707 0002 1868     		ldr	r0, [r3]
 1708 0004 0002     		lsls	r0, r0, #8
 1709 0006 000A     		lsrs	r0, r0, #8
2936:Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2936 0
 1711              		@ sp needed
 1712 0008 7047     		bx	lr
 1713              	.L132:
 1714 000a C046     		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 84


 1715              	.L131:
 1716 000c 18E000E0 		.word	-536813544
 1717              		.cfi_endproc
 1718              	.LFE44:
 1719              		.size	CySysTickGetValue, .-CySysTickGetValue
 1720              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1721              		.align	2
 1722              		.global	CySysTickSetClockSource
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickSetClockSource, %function
 1726              	CySysTickSetClockSource:
 1727              	.LFB45:
2937:Generated_Source\PSoC4/CyLib.c **** 
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2943:Generated_Source\PSoC4/CyLib.c ****     *
2944:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2945:Generated_Source\PSoC4/CyLib.c ****     *
2946:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2947:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2948:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2949:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2950:Generated_Source\PSoC4/CyLib.c ****     *
2951:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2952:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2953:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2954:Generated_Source\PSoC4/CyLib.c ****     *
2955:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2956:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2959:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2961:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2963:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2965:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2966:Generated_Source\PSoC4/CyLib.c ****     {
 1728              		.loc 1 2966 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733              	.LVL113:
2967:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1734              		.loc 1 2967 0
 1735 0000 0128     		cmp	r0, #1
 1736 0002 05D1     		bne	.L134
2968:Generated_Source\PSoC4/CyLib.c ****         {
2969:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1737              		.loc 1 2969 0
 1738 0004 054A     		ldr	r2, .L136
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 85


 1739 0006 1168     		ldr	r1, [r2]
 1740 0008 0423     		movs	r3, #4
 1741 000a 0B43     		orrs	r3, r1
 1742 000c 1360     		str	r3, [r2]
 1743 000e 04E0     		b	.L133
 1744              	.L134:
2970:Generated_Source\PSoC4/CyLib.c ****         }
2971:Generated_Source\PSoC4/CyLib.c ****         else
2972:Generated_Source\PSoC4/CyLib.c ****         {
2973:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1745              		.loc 1 2973 0
 1746 0010 024A     		ldr	r2, .L136
 1747 0012 1368     		ldr	r3, [r2]
 1748 0014 0421     		movs	r1, #4
 1749 0016 8B43     		bics	r3, r1
 1750 0018 1360     		str	r3, [r2]
 1751              	.L133:
2974:Generated_Source\PSoC4/CyLib.c ****         }
2975:Generated_Source\PSoC4/CyLib.c ****     }
 1752              		.loc 1 2975 0
 1753              		@ sp needed
 1754 001a 7047     		bx	lr
 1755              	.L137:
 1756              		.align	2
 1757              	.L136:
 1758 001c 10E000E0 		.word	-536813552
 1759              		.cfi_endproc
 1760              	.LFE45:
 1761              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1762              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1763              		.align	2
 1764              		.global	CySysTickGetClockSource
 1765              		.code	16
 1766              		.thumb_func
 1767              		.type	CySysTickGetClockSource, %function
 1768              	CySysTickGetClockSource:
 1769              	.LFB46:
2976:Generated_Source\PSoC4/CyLib.c **** 
2977:Generated_Source\PSoC4/CyLib.c ****     
2978:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2979:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2980:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2981:Generated_Source\PSoC4/CyLib.c ****     *
2982:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2983:Generated_Source\PSoC4/CyLib.c ****     *
2984:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2985:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2986:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2987:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2988:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2989:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2990:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2991:Generated_Source\PSoC4/CyLib.c ****     {
 1770              		.loc 1 2991 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 86


 1774              		@ link register save eliminated.
2992:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1775              		.loc 1 2992 0
 1776 0000 024B     		ldr	r3, .L139
 1777 0002 1868     		ldr	r0, [r3]
 1778 0004 8008     		lsrs	r0, r0, #2
 1779 0006 0123     		movs	r3, #1
 1780 0008 1840     		ands	r0, r3
2993:Generated_Source\PSoC4/CyLib.c ****     }
 1781              		.loc 1 2993 0
 1782              		@ sp needed
 1783 000a 7047     		bx	lr
 1784              	.L140:
 1785              		.align	2
 1786              	.L139:
 1787 000c 10E000E0 		.word	-536813552
 1788              		.cfi_endproc
 1789              	.LFE46:
 1790              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1791              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1792              		.align	2
 1793              		.global	CySysTickGetCountFlag
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CySysTickGetCountFlag, %function
 1797              	CySysTickGetCountFlag:
 1798              	.LFB47:
2994:Generated_Source\PSoC4/CyLib.c ****     
2995:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2996:Generated_Source\PSoC4/CyLib.c **** 
2997:Generated_Source\PSoC4/CyLib.c **** 
2998:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2999:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3000:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3001:Generated_Source\PSoC4/CyLib.c **** *
3002:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3003:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3004:Generated_Source\PSoC4/CyLib.c **** *
3005:Generated_Source\PSoC4/CyLib.c **** * \return
3006:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3007:Generated_Source\PSoC4/CyLib.c **** *
3008:Generated_Source\PSoC4/CyLib.c **** *
3009:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3010:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3013:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3014:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 3014 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
3015:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1804              		.loc 1 3015 0
 1805 0000 024B     		ldr	r3, .L142
 1806 0002 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 87


 1807 0004 000C     		lsrs	r0, r0, #16
 1808 0006 0123     		movs	r3, #1
 1809 0008 1840     		ands	r0, r3
3016:Generated_Source\PSoC4/CyLib.c **** }
 1810              		.loc 1 3016 0
 1811              		@ sp needed
 1812 000a 7047     		bx	lr
 1813              	.L143:
 1814              		.align	2
 1815              	.L142:
 1816 000c 10E000E0 		.word	-536813552
 1817              		.cfi_endproc
 1818              	.LFE47:
 1819              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1820              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1821              		.align	2
 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	CySysTickServiceCallbacks, %function
 1825              	CySysTickServiceCallbacks:
 1826              	.LFB51:
3017:Generated_Source\PSoC4/CyLib.c **** 
3018:Generated_Source\PSoC4/CyLib.c **** 
3019:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3020:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3021:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3024:Generated_Source\PSoC4/CyLib.c **** *
3025:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3027:Generated_Source\PSoC4/CyLib.c **** {
3028:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3029:Generated_Source\PSoC4/CyLib.c **** }
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c **** 
3032:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3033:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3034:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3035:Generated_Source\PSoC4/CyLib.c **** *
3036:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3037:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3038:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3039:Generated_Source\PSoC4/CyLib.c **** *
3040:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3041:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3042:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3043:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3044:Generated_Source\PSoC4/CyLib.c **** *  functions.
3045:Generated_Source\PSoC4/CyLib.c **** *
3046:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3047:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3050:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3051:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3052:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 88


3053:Generated_Source\PSoC4/CyLib.c **** * \return
3054:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3055:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3056:Generated_Source\PSoC4/CyLib.c **** *
3057:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3058:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3059:Generated_Source\PSoC4/CyLib.c **** *
3060:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3061:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3062:Generated_Source\PSoC4/CyLib.c **** {
3063:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3066:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3067:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3068:Generated_Source\PSoC4/CyLib.c **** }
3069:Generated_Source\PSoC4/CyLib.c **** 
3070:Generated_Source\PSoC4/CyLib.c **** 
3071:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3072:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3073:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3074:Generated_Source\PSoC4/CyLib.c **** *
3075:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3076:Generated_Source\PSoC4/CyLib.c **** *
3077:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3078:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** * \return
3081:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3082:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3083:Generated_Source\PSoC4/CyLib.c **** *
3084:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3085:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3086:Generated_Source\PSoC4/CyLib.c **** {
3087:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3088:Generated_Source\PSoC4/CyLib.c **** }
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3093:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c **** *
3095:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3096:Generated_Source\PSoC4/CyLib.c **** *
3097:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3098:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3099:Generated_Source\PSoC4/CyLib.c **** {
 1827              		.loc 1 3099 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 0, uses_anonymous_args = 0
 1831 0000 10B5     		push	{r4, lr}
 1832              		.cfi_def_cfa_offset 8
 1833              		.cfi_offset 4, -8
 1834              		.cfi_offset 14, -4
3100:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3101:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 89


3102:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3103:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1835              		.loc 1 3103 0
 1836 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1837              	.LVL114:
 1838 0006 0128     		cmp	r0, #1
 1839 0008 0BD1     		bne	.L144
 1840 000a 07E0     		b	.L149
 1841              	.LVL115:
 1842              	.L148:
3104:Generated_Source\PSoC4/CyLib.c ****     {
3105:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3106:Generated_Source\PSoC4/CyLib.c ****         {
3107:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1843              		.loc 1 3107 0
 1844 000c A300     		lsls	r3, r4, #2
 1845 000e 054A     		ldr	r2, .L150
 1846 0010 9B58     		ldr	r3, [r3, r2]
 1847 0012 002B     		cmp	r3, #0
 1848 0014 00D0     		beq	.L147
3108:Generated_Source\PSoC4/CyLib.c ****             {
3109:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1849              		.loc 1 3109 0
 1850 0016 9847     		blx	r3
 1851              	.LVL116:
 1852              	.L147:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1853              		.loc 1 3105 0 discriminator 2
 1854 0018 0134     		adds	r4, r4, #1
 1855              	.LVL117:
 1856 001a 00E0     		b	.L145
 1857              	.LVL118:
 1858              	.L149:
 1859 001c 0024     		movs	r4, #0
 1860              	.L145:
 1861              	.LVL119:
3105:Generated_Source\PSoC4/CyLib.c ****         {
 1862              		.loc 1 3105 0 is_stmt 0 discriminator 1
 1863 001e 042C     		cmp	r4, #4
 1864 0020 F4D9     		bls	.L148
 1865              	.LVL120:
 1866              	.L144:
3110:Generated_Source\PSoC4/CyLib.c ****             }
3111:Generated_Source\PSoC4/CyLib.c ****         }
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 3113 0 is_stmt 1
 1868              		@ sp needed
 1869 0022 10BD     		pop	{r4, pc}
 1870              	.L151:
 1871              		.align	2
 1872              	.L150:
 1873 0024 00000000 		.word	.LANCHOR2
 1874              		.cfi_endproc
 1875              	.LFE51:
 1876              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1877              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 90


 1878              		.align	2
 1879              		.global	CySysTickClear
 1880              		.code	16
 1881              		.thumb_func
 1882              		.type	CySysTickClear, %function
 1883              	CySysTickClear:
 1884              	.LFB48:
3027:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1885              		.loc 1 3027 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
3028:Generated_Source\PSoC4/CyLib.c **** }
 1890              		.loc 1 3028 0
 1891 0000 0022     		movs	r2, #0
 1892 0002 014B     		ldr	r3, .L153
 1893 0004 1A60     		str	r2, [r3]
3029:Generated_Source\PSoC4/CyLib.c **** 
 1894              		.loc 1 3029 0
 1895              		@ sp needed
 1896 0006 7047     		bx	lr
 1897              	.L154:
 1898              		.align	2
 1899              	.L153:
 1900 0008 18E000E0 		.word	-536813544
 1901              		.cfi_endproc
 1902              	.LFE48:
 1903              		.size	CySysTickClear, .-CySysTickClear
 1904              		.section	.text.CySysTickInit,"ax",%progbits
 1905              		.align	2
 1906              		.global	CySysTickInit
 1907              		.code	16
 1908              		.thumb_func
 1909              		.type	CySysTickInit, %function
 1910              	CySysTickInit:
 1911              	.LFB37:
2806:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1912              		.loc 1 2806 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916 0000 10B5     		push	{r4, lr}
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 4, -8
 1919              		.cfi_offset 14, -4
 1920              	.LVL121:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1921              		.loc 1 2809 0
 1922 0002 0023     		movs	r3, #0
 1923 0004 04E0     		b	.L156
 1924              	.LVL122:
 1925              	.L157:
2811:Generated_Source\PSoC4/CyLib.c ****     }
 1926              		.loc 1 2811 0 discriminator 3
 1927 0006 9900     		lsls	r1, r3, #2
 1928 0008 0020     		movs	r0, #0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 91


 1929 000a 0B4A     		ldr	r2, .L158
 1930 000c 8850     		str	r0, [r1, r2]
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1931              		.loc 1 2809 0 discriminator 3
 1932 000e 0133     		adds	r3, r3, #1
 1933              	.LVL123:
 1934              	.L156:
2809:Generated_Source\PSoC4/CyLib.c ****     {
 1935              		.loc 1 2809 0 is_stmt 0 discriminator 1
 1936 0010 042B     		cmp	r3, #4
 1937 0012 F8D9     		bls	.L157
2814:Generated_Source\PSoC4/CyLib.c **** 
 1938              		.loc 1 2814 0 is_stmt 1
 1939 0014 0949     		ldr	r1, .L158+4
 1940 0016 0F20     		movs	r0, #15
 1941 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1942              	.LVL124:
2817:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1943              		.loc 1 2817 0
 1944 001c 0120     		movs	r0, #1
 1945 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1946              	.LVL125:
2820:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1947              		.loc 1 2820 0
 1948 0022 074B     		ldr	r3, .L158+8
 1949 0024 1869     		ldr	r0, [r3, #16]
 1950 0026 FA21     		movs	r1, #250
 1951 0028 8900     		lsls	r1, r1, #2
 1952 002a FFF7FEFF 		bl	__aeabi_uidiv
 1953              	.LVL126:
 1954 002e FFF7FEFF 		bl	CySysTickSetReload
 1955              	.LVL127:
2821:Generated_Source\PSoC4/CyLib.c **** }
 1956              		.loc 1 2821 0
 1957 0032 FFF7FEFF 		bl	CySysTickClear
 1958              	.LVL128:
2822:Generated_Source\PSoC4/CyLib.c **** 
 1959              		.loc 1 2822 0
 1960              		@ sp needed
 1961 0036 10BD     		pop	{r4, pc}
 1962              	.L159:
 1963              		.align	2
 1964              	.L158:
 1965 0038 00000000 		.word	.LANCHOR2
 1966 003c 00000000 		.word	CySysTickServiceCallbacks
 1967 0040 00000000 		.word	.LANCHOR0
 1968              		.cfi_endproc
 1969              	.LFE37:
 1970              		.size	CySysTickInit, .-CySysTickInit
 1971              		.section	.text.CySysTickStart,"ax",%progbits
 1972              		.align	2
 1973              		.global	CySysTickStart
 1974              		.code	16
 1975              		.thumb_func
 1976              		.type	CySysTickStart, %function
 1977              	CySysTickStart:
 1978              	.LFB36:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 92


2777:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1979              		.loc 1 2777 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983 0000 10B5     		push	{r4, lr}
 1984              		.cfi_def_cfa_offset 8
 1985              		.cfi_offset 4, -8
 1986              		.cfi_offset 14, -4
2778:Generated_Source\PSoC4/CyLib.c ****     {
 1987              		.loc 1 2778 0
 1988 0002 064B     		ldr	r3, .L162
 1989 0004 5B69     		ldr	r3, [r3, #20]
 1990 0006 002B     		cmp	r3, #0
 1991 0008 04D1     		bne	.L161
2780:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1992              		.loc 1 2780 0
 1993 000a FFF7FEFF 		bl	CySysTickInit
 1994              	.LVL129:
2781:Generated_Source\PSoC4/CyLib.c ****     }
 1995              		.loc 1 2781 0
 1996 000e 0122     		movs	r2, #1
 1997 0010 024B     		ldr	r3, .L162
 1998 0012 5A61     		str	r2, [r3, #20]
 1999              	.L161:
2784:Generated_Source\PSoC4/CyLib.c **** }
 2000              		.loc 1 2784 0
 2001 0014 FFF7FEFF 		bl	CySysTickEnable
 2002              	.LVL130:
2785:Generated_Source\PSoC4/CyLib.c **** 
 2003              		.loc 1 2785 0
 2004              		@ sp needed
 2005 0018 10BD     		pop	{r4, pc}
 2006              	.L163:
 2007 001a C046     		.align	2
 2008              	.L162:
 2009 001c 00000000 		.word	.LANCHOR2
 2010              		.cfi_endproc
 2011              	.LFE36:
 2012              		.size	CySysTickStart, .-CySysTickStart
 2013              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2014              		.align	2
 2015              		.global	CySysTickSetCallback
 2016              		.code	16
 2017              		.thumb_func
 2018              		.type	CySysTickSetCallback, %function
 2019              	CySysTickSetCallback:
 2020              	.LFB49:
3062:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2021              		.loc 1 3062 0
 2022              		.cfi_startproc
 2023              		@ args = 0, pretend = 0, frame = 0
 2024              		@ frame_needed = 0, uses_anonymous_args = 0
 2025              		@ link register save eliminated.
 2026              	.LVL131:
3065:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2027              		.loc 1 3065 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 93


 2028 0000 024A     		ldr	r2, .L165
 2029 0002 8300     		lsls	r3, r0, #2
 2030 0004 9858     		ldr	r0, [r3, r2]
 2031              	.LVL132:
3066:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2032              		.loc 1 3066 0
 2033 0006 9950     		str	r1, [r3, r2]
3068:Generated_Source\PSoC4/CyLib.c **** 
 2034              		.loc 1 3068 0
 2035              		@ sp needed
 2036 0008 7047     		bx	lr
 2037              	.L166:
 2038 000a C046     		.align	2
 2039              	.L165:
 2040 000c 00000000 		.word	.LANCHOR2
 2041              		.cfi_endproc
 2042              	.LFE49:
 2043              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2044              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2045              		.align	2
 2046              		.global	CySysTickGetCallback
 2047              		.code	16
 2048              		.thumb_func
 2049              		.type	CySysTickGetCallback, %function
 2050              	CySysTickGetCallback:
 2051              	.LFB50:
3086:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2052              		.loc 1 3086 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 0
 2055              		@ frame_needed = 0, uses_anonymous_args = 0
 2056              		@ link register save eliminated.
 2057              	.LVL133:
3087:Generated_Source\PSoC4/CyLib.c **** }
 2058              		.loc 1 3087 0
 2059 0000 8000     		lsls	r0, r0, #2
 2060              	.LVL134:
 2061 0002 014B     		ldr	r3, .L168
 2062 0004 C058     		ldr	r0, [r0, r3]
3088:Generated_Source\PSoC4/CyLib.c **** 
 2063              		.loc 1 3088 0
 2064              		@ sp needed
 2065 0006 7047     		bx	lr
 2066              	.L169:
 2067              		.align	2
 2068              	.L168:
 2069 0008 00000000 		.word	.LANCHOR2
 2070              		.cfi_endproc
 2071              	.LFE50:
 2072              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2073              		.section	.text.CyGetUniqueId,"ax",%progbits
 2074              		.align	2
 2075              		.global	CyGetUniqueId
 2076              		.code	16
 2077              		.thumb_func
 2078              		.type	CyGetUniqueId, %function
 2079              	CyGetUniqueId:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 94


 2080              	.LFB52:
3114:Generated_Source\PSoC4/CyLib.c **** 
3115:Generated_Source\PSoC4/CyLib.c **** 
3116:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3117:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3118:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3119:Generated_Source\PSoC4/CyLib.c **** *
3120:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3121:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3122:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3123:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3126:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3127:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3128:Generated_Source\PSoC4/CyLib.c **** *
3129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3130:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3131:Generated_Source\PSoC4/CyLib.c **** {
 2081              		.loc 1 3131 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085              		@ link register save eliminated.
 2086              	.LVL135:
3132:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3133:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2087              		.loc 1 3133 0
 2088 0000 134B     		ldr	r3, .L171
 2089 0002 1B78     		ldrb	r3, [r3]
 2090 0004 DAB2     		uxtb	r2, r3
 2091 0006 0260     		str	r2, [r0]
3134:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2092              		.loc 1 3134 0
 2093 0008 124B     		ldr	r3, .L171+4
 2094 000a 1B78     		ldrb	r3, [r3]
 2095 000c 1B02     		lsls	r3, r3, #8
 2096 000e 1343     		orrs	r3, r2
 2097 0010 0360     		str	r3, [r0]
3135:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2098              		.loc 1 3135 0
 2099 0012 114A     		ldr	r2, .L171+8
 2100 0014 1278     		ldrb	r2, [r2]
 2101 0016 1204     		lsls	r2, r2, #16
 2102 0018 1343     		orrs	r3, r2
 2103 001a 0360     		str	r3, [r0]
3136:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2104              		.loc 1 3136 0
 2105 001c 0F4A     		ldr	r2, .L171+12
 2106 001e 1278     		ldrb	r2, [r2]
 2107 0020 1206     		lsls	r2, r2, #24
 2108 0022 1343     		orrs	r3, r2
 2109 0024 0360     		str	r3, [r0]
3137:Generated_Source\PSoC4/CyLib.c **** 
3138:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2110              		.loc 1 3138 0
 2111 0026 0E4B     		ldr	r3, .L171+16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 95


 2112 0028 1B78     		ldrb	r3, [r3]
 2113 002a DAB2     		uxtb	r2, r3
 2114 002c 4260     		str	r2, [r0, #4]
3139:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2115              		.loc 1 3139 0
 2116 002e 0D4B     		ldr	r3, .L171+20
 2117 0030 1B78     		ldrb	r3, [r3]
 2118 0032 1B02     		lsls	r3, r3, #8
 2119 0034 1343     		orrs	r3, r2
 2120 0036 4360     		str	r3, [r0, #4]
3140:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2121              		.loc 1 3140 0
 2122 0038 0B4A     		ldr	r2, .L171+24
 2123 003a 1278     		ldrb	r2, [r2]
 2124 003c 1204     		lsls	r2, r2, #16
 2125 003e 1343     		orrs	r3, r2
 2126 0040 4360     		str	r3, [r0, #4]
3141:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2127              		.loc 1 3141 0
 2128 0042 0A4A     		ldr	r2, .L171+28
 2129 0044 1278     		ldrb	r2, [r2]
 2130 0046 1206     		lsls	r2, r2, #24
 2131 0048 1343     		orrs	r3, r2
 2132 004a 4360     		str	r3, [r0, #4]
3142:Generated_Source\PSoC4/CyLib.c **** #else
3143:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3144:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3145:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3146:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3147:Generated_Source\PSoC4/CyLib.c **** 
3148:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3149:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3150:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3151:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3152:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3153:Generated_Source\PSoC4/CyLib.c **** }
 2133              		.loc 1 3153 0
 2134              		@ sp needed
 2135 004c 7047     		bx	lr
 2136              	.L172:
 2137 004e C046     		.align	2
 2138              	.L171:
 2139 0050 78F1FF0F 		.word	268431736
 2140 0054 79F1FF0F 		.word	268431737
 2141 0058 7AF1FF0F 		.word	268431738
 2142 005c 7BF1FF0F 		.word	268431739
 2143 0060 7CF1FF0F 		.word	268431740
 2144 0064 7DF1FF0F 		.word	268431741
 2145 0068 7EF1FF0F 		.word	268431742
 2146 006c 7FF1FF0F 		.word	268431743
 2147              		.cfi_endproc
 2148              	.LFE52:
 2149              		.size	CyGetUniqueId, .-CyGetUniqueId
 2150              		.global	CySysClkPumpConfig
 2151              		.global	cyImoFreqMhz2Reg
 2152              		.global	CySysTickInitVar
 2153              		.global	cydelay32kMs
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 96


 2154              		.global	cydelayFreqMhz
 2155              		.global	cydelayFreqKhz
 2156              		.global	cydelayFreqHz
 2157              		.section	.rodata
 2158              		.align	2
 2159              		.set	.LANCHOR1,. + 0
 2160              		.type	cyImoFreqMhz2Reg, %object
 2161              		.size	cyImoFreqMhz2Reg, 46
 2162              	cyImoFreqMhz2Reg:
 2163 0000 03       		.byte	3
 2164 0001 04       		.byte	4
 2165 0002 05       		.byte	5
 2166 0003 06       		.byte	6
 2167 0004 07       		.byte	7
 2168 0005 08       		.byte	8
 2169 0006 09       		.byte	9
 2170 0007 0A       		.byte	10
 2171 0008 0B       		.byte	11
 2172 0009 0C       		.byte	12
 2173 000a 0E       		.byte	14
 2174 000b 0F       		.byte	15
 2175 000c 10       		.byte	16
 2176 000d 11       		.byte	17
 2177 000e 12       		.byte	18
 2178 000f 13       		.byte	19
 2179 0010 14       		.byte	20
 2180 0011 15       		.byte	21
 2181 0012 16       		.byte	22
 2182 0013 17       		.byte	23
 2183 0014 18       		.byte	24
 2184 0015 19       		.byte	25
 2185 0016 1B       		.byte	27
 2186 0017 1C       		.byte	28
 2187 0018 1D       		.byte	29
 2188 0019 1E       		.byte	30
 2189 001a 1F       		.byte	31
 2190 001b 20       		.byte	32
 2191 001c 21       		.byte	33
 2192 001d 22       		.byte	34
 2193 001e 23       		.byte	35
 2194 001f 25       		.byte	37
 2195 0020 26       		.byte	38
 2196 0021 27       		.byte	39
 2197 0022 28       		.byte	40
 2198 0023 29       		.byte	41
 2199 0024 2A       		.byte	42
 2200 0025 2B       		.byte	43
 2201 0026 2E       		.byte	46
 2202 0027 2F       		.byte	47
 2203 0028 30       		.byte	48
 2204 0029 31       		.byte	49
 2205 002a 32       		.byte	50
 2206 002b 33       		.byte	51
 2207 002c 34       		.byte	52
 2208 002d 35       		.byte	53
 2209              		.data
 2210              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 97


 2211              		.set	.LANCHOR0,. + 0
 2212              		.type	CySysClkPumpConfig, %object
 2213              		.size	CySysClkPumpConfig, 4
 2214              	CySysClkPumpConfig:
 2215 0000 01000000 		.word	1
 2216              		.type	cydelay32kMs, %object
 2217              		.size	cydelay32kMs, 4
 2218              	cydelay32kMs:
 2219 0004 0000C05D 		.word	1572864000
 2220              		.type	cydelayFreqKhz, %object
 2221              		.size	cydelayFreqKhz, 4
 2222              	cydelayFreqKhz:
 2223 0008 80BB0000 		.word	48000
 2224              		.type	cydelayFreqMhz, %object
 2225              		.size	cydelayFreqMhz, 1
 2226              	cydelayFreqMhz:
 2227 000c 30       		.byte	48
 2228 000d 000000   		.space	3
 2229              		.type	cydelayFreqHz, %object
 2230              		.size	cydelayFreqHz, 4
 2231              	cydelayFreqHz:
 2232 0010 006CDC02 		.word	48000000
 2233              		.bss
 2234              		.align	2
 2235              		.set	.LANCHOR2,. + 0
 2236              		.type	CySysTickCallbacks, %object
 2237              		.size	CySysTickCallbacks, 20
 2238              	CySysTickCallbacks:
 2239 0000 00000000 		.space	20
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2239      00000000 
 2240              		.type	CySysTickInitVar, %object
 2241              		.size	CySysTickInitVar, 4
 2242              	CySysTickInitVar:
 2243 0014 00000000 		.space	4
 2244              		.text
 2245              	.Letext0:
 2246              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2247              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2248              		.section	.debug_info,"",%progbits
 2249              	.Ldebug_info0:
 2250 0000 CC0B0000 		.4byte	0xbcc
 2251 0004 0400     		.2byte	0x4
 2252 0006 00000000 		.4byte	.Ldebug_abbrev0
 2253 000a 04       		.byte	0x4
 2254 000b 01       		.uleb128 0x1
 2255 000c 67000000 		.4byte	.LASF112
 2256 0010 0C       		.byte	0xc
 2257 0011 01070000 		.4byte	.LASF113
 2258 0015 6C050000 		.4byte	.LASF114
 2259 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2260 001d 00000000 		.4byte	0
 2261 0021 00000000 		.4byte	.Ldebug_line0
 2262 0025 02       		.uleb128 0x2
 2263 0026 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 98


 2264 0027 06       		.byte	0x6
 2265 0028 69010000 		.4byte	.LASF0
 2266 002c 02       		.uleb128 0x2
 2267 002d 01       		.byte	0x1
 2268 002e 08       		.byte	0x8
 2269 002f 0A050000 		.4byte	.LASF1
 2270 0033 02       		.uleb128 0x2
 2271 0034 02       		.byte	0x2
 2272 0035 05       		.byte	0x5
 2273 0036 18050000 		.4byte	.LASF2
 2274 003a 02       		.uleb128 0x2
 2275 003b 02       		.byte	0x2
 2276 003c 07       		.byte	0x7
 2277 003d 4D030000 		.4byte	.LASF3
 2278 0041 02       		.uleb128 0x2
 2279 0042 04       		.byte	0x4
 2280 0043 05       		.byte	0x5
 2281 0044 A8010000 		.4byte	.LASF4
 2282 0048 02       		.uleb128 0x2
 2283 0049 04       		.byte	0x4
 2284 004a 07       		.byte	0x7
 2285 004b C0020000 		.4byte	.LASF5
 2286 004f 02       		.uleb128 0x2
 2287 0050 08       		.byte	0x8
 2288 0051 05       		.byte	0x5
 2289 0052 5B010000 		.4byte	.LASF6
 2290 0056 02       		.uleb128 0x2
 2291 0057 08       		.byte	0x8
 2292 0058 07       		.byte	0x7
 2293 0059 F5000000 		.4byte	.LASF7
 2294 005d 03       		.uleb128 0x3
 2295 005e 04       		.byte	0x4
 2296 005f 05       		.byte	0x5
 2297 0060 696E7400 		.ascii	"int\000"
 2298 0064 02       		.uleb128 0x2
 2299 0065 04       		.byte	0x4
 2300 0066 07       		.byte	0x7
 2301 0067 A4020000 		.4byte	.LASF8
 2302 006b 04       		.uleb128 0x4
 2303 006c C8010000 		.4byte	.LASF9
 2304 0070 02       		.byte	0x2
 2305 0071 E401     		.2byte	0x1e4
 2306 0073 2C000000 		.4byte	0x2c
 2307 0077 04       		.uleb128 0x4
 2308 0078 0F000000 		.4byte	.LASF10
 2309 007c 02       		.byte	0x2
 2310 007d E501     		.2byte	0x1e5
 2311 007f 3A000000 		.4byte	0x3a
 2312 0083 04       		.uleb128 0x4
 2313 0084 08020000 		.4byte	.LASF11
 2314 0088 02       		.byte	0x2
 2315 0089 E601     		.2byte	0x1e6
 2316 008b 48000000 		.4byte	0x48
 2317 008f 02       		.uleb128 0x2
 2318 0090 04       		.byte	0x4
 2319 0091 04       		.byte	0x4
 2320 0092 8D040000 		.4byte	.LASF12
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 99


 2321 0096 02       		.uleb128 0x2
 2322 0097 08       		.byte	0x8
 2323 0098 04       		.byte	0x4
 2324 0099 E4010000 		.4byte	.LASF13
 2325 009d 02       		.uleb128 0x2
 2326 009e 01       		.byte	0x1
 2327 009f 08       		.byte	0x8
 2328 00a0 E0050000 		.4byte	.LASF14
 2329 00a4 04       		.uleb128 0x4
 2330 00a5 E7060000 		.4byte	.LASF15
 2331 00a9 02       		.byte	0x2
 2332 00aa 8602     		.2byte	0x286
 2333 00ac 48000000 		.4byte	0x48
 2334 00b0 04       		.uleb128 0x4
 2335 00b1 F4040000 		.4byte	.LASF16
 2336 00b5 02       		.byte	0x2
 2337 00b6 8E02     		.2byte	0x28e
 2338 00b8 BC000000 		.4byte	0xbc
 2339 00bc 05       		.uleb128 0x5
 2340 00bd 6B000000 		.4byte	0x6b
 2341 00c1 04       		.uleb128 0x4
 2342 00c2 D3030000 		.4byte	.LASF17
 2343 00c6 02       		.byte	0x2
 2344 00c7 9002     		.2byte	0x290
 2345 00c9 CD000000 		.4byte	0xcd
 2346 00cd 05       		.uleb128 0x5
 2347 00ce 83000000 		.4byte	0x83
 2348 00d2 04       		.uleb128 0x4
 2349 00d3 E5050000 		.4byte	.LASF18
 2350 00d7 02       		.byte	0x2
 2351 00d8 A002     		.2byte	0x2a0
 2352 00da DE000000 		.4byte	0xde
 2353 00de 06       		.uleb128 0x6
 2354 00df 04       		.byte	0x4
 2355 00e0 E4000000 		.4byte	0xe4
 2356 00e4 07       		.uleb128 0x7
 2357 00e5 02       		.uleb128 0x2
 2358 00e6 08       		.byte	0x8
 2359 00e7 04       		.byte	0x4
 2360 00e8 21040000 		.4byte	.LASF19
 2361 00ec 02       		.uleb128 0x2
 2362 00ed 04       		.byte	0x4
 2363 00ee 07       		.byte	0x7
 2364 00ef F5030000 		.4byte	.LASF20
 2365 00f3 08       		.uleb128 0x8
 2366 00f4 B8040000 		.4byte	.LASF21
 2367 00f8 03       		.byte	0x3
 2368 00f9 F5       		.byte	0xf5
 2369 00fa DE000000 		.4byte	0xde
 2370 00fe 09       		.uleb128 0x9
 2371 00ff F0060000 		.4byte	.LASF22
 2372 0103 01       		.byte	0x1
 2373 0104 62       		.byte	0x62
 2374 0105 00000000 		.4byte	.LFB2
 2375 0109 14000000 		.4byte	.LFE2-.LFB2
 2376 010d 01       		.uleb128 0x1
 2377 010e 9C       		.byte	0x9c
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 100


 2378 010f 09       		.uleb128 0x9
 2379 0110 ED020000 		.4byte	.LASF23
 2380 0114 01       		.byte	0x1
 2381 0115 82       		.byte	0x82
 2382 0116 00000000 		.4byte	.LFB3
 2383 011a 10000000 		.4byte	.LFE3-.LFB3
 2384 011e 01       		.uleb128 0x1
 2385 011f 9C       		.byte	0x9c
 2386 0120 0A       		.uleb128 0xa
 2387 0121 1F000000 		.4byte	.LASF26
 2388 0125 01       		.byte	0x1
 2389 0126 1B02     		.2byte	0x21b
 2390 0128 00000000 		.4byte	.LFB4
 2391 012c 20000000 		.4byte	.LFE4-.LFB4
 2392 0130 01       		.uleb128 0x1
 2393 0131 9C       		.byte	0x9c
 2394 0132 79010000 		.4byte	0x179
 2395 0136 0B       		.uleb128 0xb
 2396 0137 40050000 		.4byte	.LASF28
 2397 013b 01       		.byte	0x1
 2398 013c 1B02     		.2byte	0x21b
 2399 013e 83000000 		.4byte	0x83
 2400 0142 00000000 		.4byte	.LLST0
 2401 0146 0C       		.uleb128 0xc
 2402 0147 86010000 		.4byte	.LASF24
 2403 014b 01       		.byte	0x1
 2404 014c 1D02     		.2byte	0x21d
 2405 014e 6B000000 		.4byte	0x6b
 2406 0152 2C000000 		.4byte	.LLST1
 2407 0156 0C       		.uleb128 0xc
 2408 0157 2D070000 		.4byte	.LASF25
 2409 015b 01       		.byte	0x1
 2410 015c 1E02     		.2byte	0x21e
 2411 015e 83000000 		.4byte	0x83
 2412 0162 3F000000 		.4byte	.LLST2
 2413 0166 0D       		.uleb128 0xd
 2414 0167 08000000 		.4byte	.LVL1
 2415 016b AE0B0000 		.4byte	0xbae
 2416 016f 0D       		.uleb128 0xd
 2417 0170 1A000000 		.4byte	.LVL5
 2418 0174 B90B0000 		.4byte	0xbb9
 2419 0178 00       		.byte	0
 2420 0179 0A       		.uleb128 0xa
 2421 017a BE030000 		.4byte	.LASF27
 2422 017e 01       		.byte	0x1
 2423 017f 6302     		.2byte	0x263
 2424 0181 00000000 		.4byte	.LFB5
 2425 0185 38000000 		.4byte	.LFE5-.LFB5
 2426 0189 01       		.uleb128 0x1
 2427 018a 9C       		.byte	0x9c
 2428 018b 9E010000 		.4byte	0x19e
 2429 018f 0E       		.uleb128 0xe
 2430 0190 DD010000 		.4byte	.LASF29
 2431 0194 01       		.byte	0x1
 2432 0195 6302     		.2byte	0x263
 2433 0197 83000000 		.4byte	0x83
 2434 019b 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 101


 2435 019c 50       		.byte	0x50
 2436 019d 00       		.byte	0
 2437 019e 0F       		.uleb128 0xf
 2438 019f 2A020000 		.4byte	.LASF38
 2439 01a3 01       		.byte	0x1
 2440 01a4 8802     		.2byte	0x288
 2441 01a6 83000000 		.4byte	0x83
 2442 01aa 00000000 		.4byte	.LFB6
 2443 01ae 1C000000 		.4byte	.LFE6-.LFB6
 2444 01b2 01       		.uleb128 0x1
 2445 01b3 9C       		.byte	0x9c
 2446 01b4 EB010000 		.4byte	0x1eb
 2447 01b8 0C       		.uleb128 0xc
 2448 01b9 86010000 		.4byte	.LASF24
 2449 01bd 01       		.byte	0x1
 2450 01be 8A02     		.2byte	0x28a
 2451 01c0 6B000000 		.4byte	0x6b
 2452 01c4 5D000000 		.4byte	.LLST3
 2453 01c8 0C       		.uleb128 0xc
 2454 01c9 35040000 		.4byte	.LASF30
 2455 01cd 01       		.byte	0x1
 2456 01ce 8B02     		.2byte	0x28b
 2457 01d0 83000000 		.4byte	0x83
 2458 01d4 70000000 		.4byte	.LLST4
 2459 01d8 0D       		.uleb128 0xd
 2460 01d9 06000000 		.4byte	.LVL8
 2461 01dd AE0B0000 		.4byte	0xbae
 2462 01e1 0D       		.uleb128 0xd
 2463 01e2 12000000 		.4byte	.LVL10
 2464 01e6 B90B0000 		.4byte	0xbb9
 2465 01ea 00       		.byte	0
 2466 01eb 0A       		.uleb128 0xa
 2467 01ec 02060000 		.4byte	.LASF31
 2468 01f0 01       		.byte	0x1
 2469 01f1 C502     		.2byte	0x2c5
 2470 01f3 00000000 		.4byte	.LFB7
 2471 01f7 30000000 		.4byte	.LFE7-.LFB7
 2472 01fb 01       		.uleb128 0x1
 2473 01fc 9C       		.byte	0x9c
 2474 01fd 34020000 		.4byte	0x234
 2475 0201 0B       		.uleb128 0xb
 2476 0202 CB060000 		.4byte	.LASF32
 2477 0206 01       		.byte	0x1
 2478 0207 C502     		.2byte	0x2c5
 2479 0209 83000000 		.4byte	0x83
 2480 020d 8E000000 		.4byte	.LLST5
 2481 0211 0C       		.uleb128 0xc
 2482 0212 86010000 		.4byte	.LASF24
 2483 0216 01       		.byte	0x1
 2484 0217 C702     		.2byte	0x2c7
 2485 0219 6B000000 		.4byte	0x6b
 2486 021d BA000000 		.4byte	.LLST6
 2487 0221 0D       		.uleb128 0xd
 2488 0222 08000000 		.4byte	.LVL13
 2489 0226 AE0B0000 		.4byte	0xbae
 2490 022a 0D       		.uleb128 0xd
 2491 022b 24000000 		.4byte	.LVL15
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 102


 2492 022f B90B0000 		.4byte	0xbb9
 2493 0233 00       		.byte	0
 2494 0234 0A       		.uleb128 0xa
 2495 0235 97030000 		.4byte	.LASF33
 2496 0239 01       		.byte	0x1
 2497 023a FF02     		.2byte	0x2ff
 2498 023c 00000000 		.4byte	.LFB8
 2499 0240 64000000 		.4byte	.LFE8-.LFB8
 2500 0244 01       		.uleb128 0x1
 2501 0245 9C       		.byte	0x9c
 2502 0246 9B020000 		.4byte	0x29b
 2503 024a 0B       		.uleb128 0xb
 2504 024b 75010000 		.4byte	.LASF34
 2505 024f 01       		.byte	0x1
 2506 0250 FF02     		.2byte	0x2ff
 2507 0252 83000000 		.4byte	0x83
 2508 0256 CD000000 		.4byte	.LLST7
 2509 025a 10       		.uleb128 0x10
 2510 025b 0C010000 		.4byte	.LASF35
 2511 025f 01       		.byte	0x1
 2512 0260 0203     		.2byte	0x302
 2513 0262 AB020000 		.4byte	0x2ab
 2514 0266 02       		.uleb128 0x2
 2515 0267 91       		.byte	0x91
 2516 0268 70       		.sleb128 -16
 2517 0269 10       		.uleb128 0x10
 2518 026a BE010000 		.4byte	.LASF36
 2519 026e 01       		.byte	0x1
 2520 026f 0303     		.2byte	0x303
 2521 0271 C0020000 		.4byte	0x2c0
 2522 0275 02       		.uleb128 0x2
 2523 0276 91       		.byte	0x91
 2524 0277 60       		.sleb128 -32
 2525 0278 0C       		.uleb128 0xc
 2526 0279 86010000 		.4byte	.LASF24
 2527 027d 01       		.byte	0x1
 2528 027e 1303     		.2byte	0x313
 2529 0280 6B000000 		.4byte	0x6b
 2530 0284 06010000 		.4byte	.LLST8
 2531 0288 0D       		.uleb128 0xd
 2532 0289 0A000000 		.4byte	.LVL17
 2533 028d AE0B0000 		.4byte	0xbae
 2534 0291 0D       		.uleb128 0xd
 2535 0292 3E000000 		.4byte	.LVL19
 2536 0296 B90B0000 		.4byte	0xbb9
 2537 029a 00       		.byte	0
 2538 029b 11       		.uleb128 0x11
 2539 029c CD000000 		.4byte	0xcd
 2540 02a0 AB020000 		.4byte	0x2ab
 2541 02a4 12       		.uleb128 0x12
 2542 02a5 EC000000 		.4byte	0xec
 2543 02a9 01       		.byte	0x1
 2544 02aa 00       		.byte	0
 2545 02ab 05       		.uleb128 0x5
 2546 02ac 9B020000 		.4byte	0x29b
 2547 02b0 11       		.uleb128 0x11
 2548 02b1 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 103


 2549 02b5 C0020000 		.4byte	0x2c0
 2550 02b9 12       		.uleb128 0x12
 2551 02ba EC000000 		.4byte	0xec
 2552 02be 03       		.byte	0x3
 2553 02bf 00       		.byte	0
 2554 02c0 05       		.uleb128 0x5
 2555 02c1 B0020000 		.4byte	0x2b0
 2556 02c5 13       		.uleb128 0x13
 2557 02c6 A3060000 		.4byte	.LASF37
 2558 02ca 01       		.byte	0x1
 2559 02cb 0D05     		.2byte	0x50d
 2560 02cd 00000000 		.4byte	.LFB10
 2561 02d1 24000000 		.4byte	.LFE10-.LFB10
 2562 02d5 01       		.uleb128 0x1
 2563 02d6 9C       		.byte	0x9c
 2564 02d7 0F       		.uleb128 0xf
 2565 02d8 0F020000 		.4byte	.LASF39
 2566 02dc 01       		.byte	0x1
 2567 02dd 2F05     		.2byte	0x52f
 2568 02df 83000000 		.4byte	0x83
 2569 02e3 00000000 		.4byte	.LFB11
 2570 02e7 10000000 		.4byte	.LFE11-.LFB11
 2571 02eb 01       		.uleb128 0x1
 2572 02ec 9C       		.byte	0x9c
 2573 02ed 00030000 		.4byte	0x300
 2574 02f1 10       		.uleb128 0x10
 2575 02f2 61070000 		.4byte	.LASF40
 2576 02f6 01       		.byte	0x1
 2577 02f7 3105     		.2byte	0x531
 2578 02f9 83000000 		.4byte	0x83
 2579 02fd 01       		.uleb128 0x1
 2580 02fe 50       		.byte	0x50
 2581 02ff 00       		.byte	0
 2582 0300 13       		.uleb128 0x13
 2583 0301 84060000 		.4byte	.LASF41
 2584 0305 01       		.byte	0x1
 2585 0306 F808     		.2byte	0x8f8
 2586 0308 00000000 		.4byte	.LFB14
 2587 030c 20000000 		.4byte	.LFE14-.LFB14
 2588 0310 01       		.uleb128 0x1
 2589 0311 9C       		.byte	0x9c
 2590 0312 14       		.uleb128 0x14
 2591 0313 D2020000 		.4byte	.LASF85
 2592 0317 01       		.byte	0x1
 2593 0318 0A09     		.2byte	0x90a
 2594 031a 83000000 		.4byte	0x83
 2595 031e 00000000 		.4byte	.LFB15
 2596 0322 10000000 		.4byte	.LFE15-.LFB15
 2597 0326 01       		.uleb128 0x1
 2598 0327 9C       		.byte	0x9c
 2599 0328 13       		.uleb128 0x13
 2600 0329 F1010000 		.4byte	.LASF42
 2601 032d 01       		.byte	0x1
 2602 032e 1A09     		.2byte	0x91a
 2603 0330 00000000 		.4byte	.LFB16
 2604 0334 0C000000 		.4byte	.LFE16-.LFB16
 2605 0338 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 104


 2606 0339 9C       		.byte	0x9c
 2607 033a 0F       		.uleb128 0xf
 2608 033b 39030000 		.4byte	.LASF43
 2609 033f 01       		.byte	0x1
 2610 0340 3409     		.2byte	0x934
 2611 0342 83000000 		.4byte	0x83
 2612 0346 00000000 		.4byte	.LFB17
 2613 034a 14000000 		.4byte	.LFE17-.LFB17
 2614 034e 01       		.uleb128 0x1
 2615 034f 9C       		.byte	0x9c
 2616 0350 73030000 		.4byte	0x373
 2617 0354 0B       		.uleb128 0xb
 2618 0355 65050000 		.4byte	.LASF44
 2619 0359 01       		.byte	0x1
 2620 035a 3409     		.2byte	0x934
 2621 035c 83000000 		.4byte	0x83
 2622 0360 19010000 		.4byte	.LLST9
 2623 0364 10       		.uleb128 0x10
 2624 0365 E8030000 		.4byte	.LASF45
 2625 0369 01       		.byte	0x1
 2626 036a 3609     		.2byte	0x936
 2627 036c 83000000 		.4byte	0x83
 2628 0370 01       		.uleb128 0x1
 2629 0371 50       		.byte	0x50
 2630 0372 00       		.byte	0
 2631 0373 0F       		.uleb128 0xf
 2632 0374 59000000 		.4byte	.LASF46
 2633 0378 01       		.byte	0x1
 2634 0379 4B09     		.2byte	0x94b
 2635 037b 83000000 		.4byte	0x83
 2636 037f 00000000 		.4byte	.LFB18
 2637 0383 10000000 		.4byte	.LFE18-.LFB18
 2638 0387 01       		.uleb128 0x1
 2639 0388 9C       		.byte	0x9c
 2640 0389 9C030000 		.4byte	0x39c
 2641 038d 10       		.uleb128 0x10
 2642 038e 16000000 		.4byte	.LASF47
 2643 0392 01       		.byte	0x1
 2644 0393 4D09     		.2byte	0x94d
 2645 0395 83000000 		.4byte	0x83
 2646 0399 01       		.uleb128 0x1
 2647 039a 50       		.byte	0x50
 2648 039b 00       		.byte	0
 2649 039c 0A       		.uleb128 0xa
 2650 039d 17010000 		.4byte	.LASF48
 2651 03a1 01       		.byte	0x1
 2652 03a2 6209     		.2byte	0x962
 2653 03a4 00000000 		.4byte	.LFB19
 2654 03a8 0C000000 		.4byte	.LFE19-.LFB19
 2655 03ac 01       		.uleb128 0x1
 2656 03ad 9C       		.byte	0x9c
 2657 03ae C1030000 		.4byte	0x3c1
 2658 03b2 0E       		.uleb128 0xe
 2659 03b3 25020000 		.4byte	.LASF49
 2660 03b7 01       		.byte	0x1
 2661 03b8 6209     		.2byte	0x962
 2662 03ba 83000000 		.4byte	0x83
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 105


 2663 03be 01       		.uleb128 0x1
 2664 03bf 50       		.byte	0x50
 2665 03c0 00       		.byte	0
 2666 03c1 0A       		.uleb128 0xa
 2667 03c2 22050000 		.4byte	.LASF50
 2668 03c6 01       		.byte	0x1
 2669 03c7 190A     		.2byte	0xa19
 2670 03c9 00000000 		.4byte	.LFB26
 2671 03cd 14000000 		.4byte	.LFE26-.LFB26
 2672 03d1 01       		.uleb128 0x1
 2673 03d2 9C       		.byte	0x9c
 2674 03d3 E8030000 		.4byte	0x3e8
 2675 03d7 0B       		.uleb128 0xb
 2676 03d8 87030000 		.4byte	.LASF51
 2677 03dc 01       		.byte	0x1
 2678 03dd 190A     		.2byte	0xa19
 2679 03df 6B000000 		.4byte	0x6b
 2680 03e3 37010000 		.4byte	.LLST10
 2681 03e7 00       		.byte	0
 2682 03e8 0F       		.uleb128 0xf
 2683 03e9 4D010000 		.4byte	.LASF52
 2684 03ed 01       		.byte	0x1
 2685 03ee 2B0A     		.2byte	0xa2b
 2686 03f0 6B000000 		.4byte	0x6b
 2687 03f4 00000000 		.4byte	.LFB27
 2688 03f8 18000000 		.4byte	.LFE27-.LFB27
 2689 03fc 01       		.uleb128 0x1
 2690 03fd 9C       		.byte	0x9c
 2691 03fe 13040000 		.4byte	0x413
 2692 0402 0B       		.uleb128 0xb
 2693 0403 87030000 		.4byte	.LASF51
 2694 0407 01       		.byte	0x1
 2695 0408 2B0A     		.2byte	0xa2b
 2696 040a 6B000000 		.4byte	0x6b
 2697 040e 58010000 		.4byte	.LLST11
 2698 0412 00       		.byte	0
 2699 0413 0A       		.uleb128 0xa
 2700 0414 B1010000 		.4byte	.LASF53
 2701 0418 01       		.byte	0x1
 2702 0419 3B0A     		.2byte	0xa3b
 2703 041b 00000000 		.4byte	.LFB28
 2704 041f 14000000 		.4byte	.LFE28-.LFB28
 2705 0423 01       		.uleb128 0x1
 2706 0424 9C       		.byte	0x9c
 2707 0425 3A040000 		.4byte	0x43a
 2708 0429 0B       		.uleb128 0xb
 2709 042a 87030000 		.4byte	.LASF51
 2710 042e 01       		.byte	0x1
 2711 042f 3B0A     		.2byte	0xa3b
 2712 0431 6B000000 		.4byte	0x6b
 2713 0435 79010000 		.4byte	.LLST12
 2714 0439 00       		.byte	0
 2715 043a 0A       		.uleb128 0xa
 2716 043b 14030000 		.4byte	.LASF54
 2717 043f 01       		.byte	0x1
 2718 0440 490A     		.2byte	0xa49
 2719 0442 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 106


 2720 0446 14000000 		.4byte	.LFE29-.LFB29
 2721 044a 01       		.uleb128 0x1
 2722 044b 9C       		.byte	0x9c
 2723 044c 61040000 		.4byte	0x461
 2724 0450 0B       		.uleb128 0xb
 2725 0451 87030000 		.4byte	.LASF51
 2726 0455 01       		.byte	0x1
 2727 0456 490A     		.2byte	0xa49
 2728 0458 6B000000 		.4byte	0x6b
 2729 045c 9A010000 		.4byte	.LLST13
 2730 0460 00       		.byte	0
 2731 0461 0A       		.uleb128 0xa
 2732 0462 0F040000 		.4byte	.LASF55
 2733 0466 01       		.byte	0x1
 2734 0467 580A     		.2byte	0xa58
 2735 0469 00000000 		.4byte	.LFB30
 2736 046d 14000000 		.4byte	.LFE30-.LFB30
 2737 0471 01       		.uleb128 0x1
 2738 0472 9C       		.byte	0x9c
 2739 0473 88040000 		.4byte	0x488
 2740 0477 0B       		.uleb128 0xb
 2741 0478 87030000 		.4byte	.LASF51
 2742 047c 01       		.byte	0x1
 2743 047d 580A     		.2byte	0xa58
 2744 047f 6B000000 		.4byte	0x6b
 2745 0483 BB010000 		.4byte	.LLST14
 2746 0487 00       		.byte	0
 2747 0488 0A       		.uleb128 0xa
 2748 0489 03050000 		.4byte	.LASF56
 2749 048d 01       		.byte	0x1
 2750 048e 670A     		.2byte	0xa67
 2751 0490 00000000 		.4byte	.LFB31
 2752 0494 04000000 		.4byte	.LFE31-.LFB31
 2753 0498 01       		.uleb128 0x1
 2754 0499 9C       		.byte	0x9c
 2755 049a AD040000 		.4byte	0x4ad
 2756 049e 0E       		.uleb128 0xe
 2757 049f 65050000 		.4byte	.LASF44
 2758 04a3 01       		.byte	0x1
 2759 04a4 670A     		.2byte	0xa67
 2760 04a6 6B000000 		.4byte	0x6b
 2761 04aa 01       		.uleb128 0x1
 2762 04ab 50       		.byte	0x50
 2763 04ac 00       		.byte	0
 2764 04ad 0A       		.uleb128 0xa
 2765 04ae D3060000 		.4byte	.LASF57
 2766 04b2 01       		.byte	0x1
 2767 04b3 5E05     		.2byte	0x55e
 2768 04b5 00000000 		.4byte	.LFB12
 2769 04b9 38000000 		.4byte	.LFE12-.LFB12
 2770 04bd 01       		.uleb128 0x1
 2771 04be 9C       		.byte	0x9c
 2772 04bf 05050000 		.4byte	0x505
 2773 04c3 0B       		.uleb128 0xb
 2774 04c4 CB060000 		.4byte	.LASF32
 2775 04c8 01       		.byte	0x1
 2776 04c9 5E05     		.2byte	0x55e
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 107


 2777 04cb 83000000 		.4byte	0x83
 2778 04cf DC010000 		.4byte	.LLST15
 2779 04d3 0C       		.uleb128 0xc
 2780 04d4 86010000 		.4byte	.LASF24
 2781 04d8 01       		.byte	0x1
 2782 04d9 6005     		.2byte	0x560
 2783 04db 6B000000 		.4byte	0x6b
 2784 04df 2C020000 		.4byte	.LLST16
 2785 04e3 0D       		.uleb128 0xd
 2786 04e4 14000000 		.4byte	.LVL40
 2787 04e8 AE0B0000 		.4byte	0xbae
 2788 04ec 0D       		.uleb128 0xd
 2789 04ed 26000000 		.4byte	.LVL42
 2790 04f1 B90B0000 		.4byte	0xbb9
 2791 04f5 15       		.uleb128 0x15
 2792 04f6 2E000000 		.4byte	.LVL45
 2793 04fa 88040000 		.4byte	0x488
 2794 04fe 16       		.uleb128 0x16
 2795 04ff 01       		.uleb128 0x1
 2796 0500 50       		.byte	0x50
 2797 0501 01       		.uleb128 0x1
 2798 0502 30       		.byte	0x30
 2799 0503 00       		.byte	0
 2800 0504 00       		.byte	0
 2801 0505 0F       		.uleb128 0xf
 2802 0506 AC030000 		.4byte	.LASF58
 2803 050a 01       		.byte	0x1
 2804 050b 7B09     		.2byte	0x97b
 2805 050d D2000000 		.4byte	0xd2
 2806 0511 00000000 		.4byte	.LFB20
 2807 0515 20000000 		.4byte	.LFE20-.LFB20
 2808 0519 01       		.uleb128 0x1
 2809 051a 9C       		.byte	0x9c
 2810 051b 6D050000 		.4byte	0x56d
 2811 051f 0B       		.uleb128 0xb
 2812 0520 87030000 		.4byte	.LASF51
 2813 0524 01       		.byte	0x1
 2814 0525 7B09     		.2byte	0x97b
 2815 0527 6B000000 		.4byte	0x6b
 2816 052b 3F020000 		.4byte	.LLST17
 2817 052f 0B       		.uleb128 0xb
 2818 0530 2D040000 		.4byte	.LASF59
 2819 0534 01       		.byte	0x1
 2820 0535 7B09     		.2byte	0x97b
 2821 0537 D2000000 		.4byte	0xd2
 2822 053b 60020000 		.4byte	.LLST18
 2823 053f 10       		.uleb128 0x10
 2824 0540 4B000000 		.4byte	.LASF60
 2825 0544 01       		.byte	0x1
 2826 0545 7D09     		.2byte	0x97d
 2827 0547 D2000000 		.4byte	0xd2
 2828 054b 01       		.uleb128 0x1
 2829 054c 50       		.byte	0x50
 2830 054d 17       		.uleb128 0x17
 2831 054e 00000000 		.4byte	.LASF61
 2832 0552 01       		.byte	0x1
 2833 0553 7E09     		.2byte	0x97e
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 108


 2834 0555 6D050000 		.4byte	0x56d
 2835 0559 00000020 		.4byte	0x20000000
 2836 055d 15       		.uleb128 0x15
 2837 055e 10000000 		.4byte	.LVL49
 2838 0562 88040000 		.4byte	0x488
 2839 0566 16       		.uleb128 0x16
 2840 0567 01       		.uleb128 0x1
 2841 0568 50       		.byte	0x50
 2842 0569 01       		.uleb128 0x1
 2843 056a 30       		.byte	0x30
 2844 056b 00       		.byte	0
 2845 056c 00       		.byte	0
 2846 056d 06       		.uleb128 0x6
 2847 056e 04       		.byte	0x4
 2848 056f D2000000 		.4byte	0xd2
 2849 0573 0F       		.uleb128 0xf
 2850 0574 2E050000 		.4byte	.LASF62
 2851 0578 01       		.byte	0x1
 2852 0579 9D09     		.2byte	0x99d
 2853 057b D2000000 		.4byte	0xd2
 2854 057f 00000000 		.4byte	.LFB21
 2855 0583 1C000000 		.4byte	.LFE21-.LFB21
 2856 0587 01       		.uleb128 0x1
 2857 0588 9C       		.byte	0x9c
 2858 0589 BD050000 		.4byte	0x5bd
 2859 058d 0B       		.uleb128 0xb
 2860 058e 87030000 		.4byte	.LASF51
 2861 0592 01       		.byte	0x1
 2862 0593 9D09     		.2byte	0x99d
 2863 0595 6B000000 		.4byte	0x6b
 2864 0599 8C020000 		.4byte	.LLST19
 2865 059d 17       		.uleb128 0x17
 2866 059e 00000000 		.4byte	.LASF61
 2867 05a2 01       		.byte	0x1
 2868 05a3 9F09     		.2byte	0x99f
 2869 05a5 6D050000 		.4byte	0x56d
 2870 05a9 00000020 		.4byte	0x20000000
 2871 05ad 15       		.uleb128 0x15
 2872 05ae 0E000000 		.4byte	.LVL55
 2873 05b2 88040000 		.4byte	0x488
 2874 05b6 16       		.uleb128 0x16
 2875 05b7 01       		.uleb128 0x1
 2876 05b8 50       		.byte	0x50
 2877 05b9 01       		.uleb128 0x1
 2878 05ba 30       		.byte	0x30
 2879 05bb 00       		.byte	0
 2880 05bc 00       		.byte	0
 2881 05bd 0F       		.uleb128 0xf
 2882 05be 78030000 		.4byte	.LASF63
 2883 05c2 01       		.byte	0x1
 2884 05c3 B309     		.2byte	0x9b3
 2885 05c5 D2000000 		.4byte	0xd2
 2886 05c9 00000000 		.4byte	.LFB22
 2887 05cd 22000000 		.4byte	.LFE22-.LFB22
 2888 05d1 01       		.uleb128 0x1
 2889 05d2 9C       		.byte	0x9c
 2890 05d3 25060000 		.4byte	0x625
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 109


 2891 05d7 0B       		.uleb128 0xb
 2892 05d8 87030000 		.4byte	.LASF51
 2893 05dc 01       		.byte	0x1
 2894 05dd B309     		.2byte	0x9b3
 2895 05df 6B000000 		.4byte	0x6b
 2896 05e3 AD020000 		.4byte	.LLST20
 2897 05e7 0B       		.uleb128 0xb
 2898 05e8 2D040000 		.4byte	.LASF59
 2899 05ec 01       		.byte	0x1
 2900 05ed B309     		.2byte	0x9b3
 2901 05ef D2000000 		.4byte	0xd2
 2902 05f3 CE020000 		.4byte	.LLST21
 2903 05f7 10       		.uleb128 0x10
 2904 05f8 4B000000 		.4byte	.LASF60
 2905 05fc 01       		.byte	0x1
 2906 05fd B509     		.2byte	0x9b5
 2907 05ff D2000000 		.4byte	0xd2
 2908 0603 01       		.uleb128 0x1
 2909 0604 50       		.byte	0x50
 2910 0605 17       		.uleb128 0x17
 2911 0606 00000000 		.4byte	.LASF61
 2912 060a 01       		.byte	0x1
 2913 060b B609     		.2byte	0x9b6
 2914 060d 6D050000 		.4byte	0x56d
 2915 0611 00000020 		.4byte	0x20000000
 2916 0615 15       		.uleb128 0x15
 2917 0616 10000000 		.4byte	.LVL59
 2918 061a 88040000 		.4byte	0x488
 2919 061e 16       		.uleb128 0x16
 2920 061f 01       		.uleb128 0x1
 2921 0620 50       		.byte	0x50
 2922 0621 01       		.uleb128 0x1
 2923 0622 30       		.byte	0x30
 2924 0623 00       		.byte	0
 2925 0624 00       		.byte	0
 2926 0625 0F       		.uleb128 0xf
 2927 0626 CA040000 		.4byte	.LASF64
 2928 062a 01       		.byte	0x1
 2929 062b CF09     		.2byte	0x9cf
 2930 062d D2000000 		.4byte	0xd2
 2931 0631 00000000 		.4byte	.LFB23
 2932 0635 1E000000 		.4byte	.LFE23-.LFB23
 2933 0639 01       		.uleb128 0x1
 2934 063a 9C       		.byte	0x9c
 2935 063b 6F060000 		.4byte	0x66f
 2936 063f 0B       		.uleb128 0xb
 2937 0640 87030000 		.4byte	.LASF51
 2938 0644 01       		.byte	0x1
 2939 0645 CF09     		.2byte	0x9cf
 2940 0647 6B000000 		.4byte	0x6b
 2941 064b FA020000 		.4byte	.LLST22
 2942 064f 17       		.uleb128 0x17
 2943 0650 00000000 		.4byte	.LASF61
 2944 0654 01       		.byte	0x1
 2945 0655 D109     		.2byte	0x9d1
 2946 0657 6D050000 		.4byte	0x56d
 2947 065b 00000020 		.4byte	0x20000000
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 110


 2948 065f 15       		.uleb128 0x15
 2949 0660 0E000000 		.4byte	.LVL65
 2950 0664 88040000 		.4byte	0x488
 2951 0668 16       		.uleb128 0x16
 2952 0669 01       		.uleb128 0x1
 2953 066a 50       		.byte	0x50
 2954 066b 01       		.uleb128 0x1
 2955 066c 30       		.byte	0x30
 2956 066d 00       		.byte	0
 2957 066e 00       		.byte	0
 2958 066f 0A       		.uleb128 0xa
 2959 0670 7C040000 		.4byte	.LASF65
 2960 0674 01       		.byte	0x1
 2961 0675 E209     		.2byte	0x9e2
 2962 0677 00000000 		.4byte	.LFB24
 2963 067b 4C000000 		.4byte	.LFE24-.LFB24
 2964 067f 01       		.uleb128 0x1
 2965 0680 9C       		.byte	0x9c
 2966 0681 0E070000 		.4byte	0x70e
 2967 0685 0B       		.uleb128 0xb
 2968 0686 87030000 		.4byte	.LASF51
 2969 068a 01       		.byte	0x1
 2970 068b E209     		.2byte	0x9e2
 2971 068d 6B000000 		.4byte	0x6b
 2972 0691 1B030000 		.4byte	.LLST23
 2973 0695 0B       		.uleb128 0xb
 2974 0696 8E030000 		.4byte	.LASF66
 2975 069a 01       		.byte	0x1
 2976 069b E209     		.2byte	0x9e2
 2977 069d 6B000000 		.4byte	0x6b
 2978 06a1 3C030000 		.4byte	.LLST24
 2979 06a5 0C       		.uleb128 0xc
 2980 06a6 86010000 		.4byte	.LASF24
 2981 06aa 01       		.byte	0x1
 2982 06ab E409     		.2byte	0x9e4
 2983 06ad 6B000000 		.4byte	0x6b
 2984 06b1 5D030000 		.4byte	.LLST25
 2985 06b5 0C       		.uleb128 0xc
 2986 06b6 EB010000 		.4byte	.LASF67
 2987 06ba 01       		.byte	0x1
 2988 06bb E509     		.2byte	0x9e5
 2989 06bd 83000000 		.4byte	0x83
 2990 06c1 70030000 		.4byte	.LLST26
 2991 06c5 0C       		.uleb128 0xc
 2992 06c6 6E020000 		.4byte	.LASF68
 2993 06ca 01       		.byte	0x1
 2994 06cb E609     		.2byte	0x9e6
 2995 06cd 83000000 		.4byte	0x83
 2996 06d1 83030000 		.4byte	.LLST27
 2997 06d5 18       		.uleb128 0x18
 2998 06d6 10000000 		.4byte	.LVL68
 2999 06da 88040000 		.4byte	0x488
 3000 06de E8060000 		.4byte	0x6e8
 3001 06e2 16       		.uleb128 0x16
 3002 06e3 01       		.uleb128 0x1
 3003 06e4 50       		.byte	0x50
 3004 06e5 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 111


 3005 06e6 30       		.byte	0x30
 3006 06e7 00       		.byte	0
 3007 06e8 18       		.uleb128 0x18
 3008 06e9 1A000000 		.4byte	.LVL69
 3009 06ed 88040000 		.4byte	0x488
 3010 06f1 FB060000 		.4byte	0x6fb
 3011 06f5 16       		.uleb128 0x16
 3012 06f6 01       		.uleb128 0x1
 3013 06f7 50       		.byte	0x50
 3014 06f8 01       		.uleb128 0x1
 3015 06f9 30       		.byte	0x30
 3016 06fa 00       		.byte	0
 3017 06fb 0D       		.uleb128 0xd
 3018 06fc 26000000 		.4byte	.LVL71
 3019 0700 AE0B0000 		.4byte	0xbae
 3020 0704 0D       		.uleb128 0xd
 3021 0705 46000000 		.4byte	.LVL77
 3022 0709 B90B0000 		.4byte	0xbb9
 3023 070d 00       		.byte	0
 3024 070e 0F       		.uleb128 0xf
 3025 070f 42020000 		.4byte	.LASF69
 3026 0713 01       		.byte	0x1
 3027 0714 040A     		.2byte	0xa04
 3028 0716 6B000000 		.4byte	0x6b
 3029 071a 00000000 		.4byte	.LFB25
 3030 071e 2C000000 		.4byte	.LFE25-.LFB25
 3031 0722 01       		.uleb128 0x1
 3032 0723 9C       		.byte	0x9c
 3033 0724 58070000 		.4byte	0x758
 3034 0728 0B       		.uleb128 0xb
 3035 0729 87030000 		.4byte	.LASF51
 3036 072d 01       		.byte	0x1
 3037 072e 040A     		.2byte	0xa04
 3038 0730 6B000000 		.4byte	0x6b
 3039 0734 B7030000 		.4byte	.LLST28
 3040 0738 0C       		.uleb128 0xc
 3041 0739 8E030000 		.4byte	.LASF66
 3042 073d 01       		.byte	0x1
 3043 073e 060A     		.2byte	0xa06
 3044 0740 6B000000 		.4byte	0x6b
 3045 0744 D8030000 		.4byte	.LLST29
 3046 0748 15       		.uleb128 0x15
 3047 0749 0E000000 		.4byte	.LVL81
 3048 074d 88040000 		.4byte	0x488
 3049 0751 16       		.uleb128 0x16
 3050 0752 01       		.uleb128 0x1
 3051 0753 50       		.byte	0x50
 3052 0754 01       		.uleb128 0x1
 3053 0755 30       		.byte	0x30
 3054 0756 00       		.byte	0
 3055 0757 00       		.byte	0
 3056 0758 13       		.uleb128 0x13
 3057 0759 24010000 		.4byte	.LASF70
 3058 075d 01       		.byte	0x1
 3059 075e 7F0A     		.2byte	0xa7f
 3060 0760 00000000 		.4byte	.LFB32
 3061 0764 18000000 		.4byte	.LFE32-.LFB32
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 112


 3062 0768 01       		.uleb128 0x1
 3063 0769 9C       		.byte	0x9c
 3064 076a 0A       		.uleb128 0xa
 3065 076b 4A060000 		.4byte	.LASF71
 3066 076f 01       		.byte	0x1
 3067 0770 930A     		.2byte	0xa93
 3068 0772 00000000 		.4byte	.LFB33
 3069 0776 30000000 		.4byte	.LFE33-.LFB33
 3070 077a 01       		.uleb128 0x1
 3071 077b 9C       		.byte	0x9c
 3072 077c A3070000 		.4byte	0x7a3
 3073 0780 0B       		.uleb128 0xb
 3074 0781 D9040000 		.4byte	.LASF72
 3075 0785 01       		.byte	0x1
 3076 0786 930A     		.2byte	0xa93
 3077 0788 83000000 		.4byte	0x83
 3078 078c EB030000 		.4byte	.LLST30
 3079 0790 0D       		.uleb128 0xd
 3080 0791 0E000000 		.4byte	.LVL86
 3081 0795 C40B0000 		.4byte	0xbc4
 3082 0799 0D       		.uleb128 0xd
 3083 079a 26000000 		.4byte	.LVL88
 3084 079e C40B0000 		.4byte	0xbc4
 3085 07a2 00       		.byte	0
 3086 07a3 0A       		.uleb128 0xa
 3087 07a4 5B050000 		.4byte	.LASF73
 3088 07a8 01       		.byte	0x1
 3089 07a9 AA0A     		.2byte	0xaaa
 3090 07ab 00000000 		.4byte	.LFB34
 3091 07af 14000000 		.4byte	.LFE34-.LFB34
 3092 07b3 01       		.uleb128 0x1
 3093 07b4 9C       		.byte	0x9c
 3094 07b5 D3070000 		.4byte	0x7d3
 3095 07b9 0B       		.uleb128 0xb
 3096 07ba 20070000 		.4byte	.LASF74
 3097 07be 01       		.byte	0x1
 3098 07bf AA0A     		.2byte	0xaaa
 3099 07c1 77000000 		.4byte	0x77
 3100 07c5 09040000 		.4byte	.LLST31
 3101 07c9 0D       		.uleb128 0xd
 3102 07ca 0C000000 		.4byte	.LVL92
 3103 07ce C40B0000 		.4byte	0xbc4
 3104 07d2 00       		.byte	0
 3105 07d3 0F       		.uleb128 0xf
 3106 07d4 4A050000 		.4byte	.LASF75
 3107 07d8 01       		.byte	0x1
 3108 07d9 7F04     		.2byte	0x47f
 3109 07db A4000000 		.4byte	0xa4
 3110 07df 00000000 		.4byte	.LFB9
 3111 07e3 54000000 		.4byte	.LFE9-.LFB9
 3112 07e7 01       		.uleb128 0x1
 3113 07e8 9C       		.byte	0x9c
 3114 07e9 2A080000 		.4byte	0x82a
 3115 07ed 0B       		.uleb128 0xb
 3116 07ee C1060000 		.4byte	.LASF76
 3117 07f2 01       		.byte	0x1
 3118 07f3 7F04     		.2byte	0x47f
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 113


 3119 07f5 83000000 		.4byte	0x83
 3120 07f9 2A040000 		.4byte	.LLST32
 3121 07fd 0C       		.uleb128 0xc
 3122 07fe E8030000 		.4byte	.LASF45
 3123 0802 01       		.byte	0x1
 3124 0803 8104     		.2byte	0x481
 3125 0805 A4000000 		.4byte	0xa4
 3126 0809 48040000 		.4byte	.LLST33
 3127 080d 18       		.uleb128 0x18
 3128 080e 2E000000 		.4byte	.LVL96
 3129 0812 A3070000 		.4byte	0x7a3
 3130 0816 20080000 		.4byte	0x820
 3131 081a 16       		.uleb128 0x16
 3132 081b 01       		.uleb128 0x1
 3133 081c 50       		.byte	0x50
 3134 081d 01       		.uleb128 0x1
 3135 081e 31       		.byte	0x31
 3136 081f 00       		.byte	0
 3137 0820 0D       		.uleb128 0xd
 3138 0821 32000000 		.4byte	.LVL97
 3139 0825 D7020000 		.4byte	0x2d7
 3140 0829 00       		.byte	0
 3141 082a 0A       		.uleb128 0xa
 3142 082b A9040000 		.4byte	.LASF77
 3143 082f 01       		.byte	0x1
 3144 0830 DA08     		.2byte	0x8da
 3145 0832 00000000 		.4byte	.LFB13
 3146 0836 44000000 		.4byte	.LFE13-.LFB13
 3147 083a 01       		.uleb128 0x1
 3148 083b 9C       		.byte	0x9c
 3149 083c 6F080000 		.4byte	0x86f
 3150 0840 0B       		.uleb128 0xb
 3151 0841 F9040000 		.4byte	.LASF78
 3152 0845 01       		.byte	0x1
 3153 0846 DA08     		.2byte	0x8da
 3154 0848 83000000 		.4byte	0x83
 3155 084c 67040000 		.4byte	.LLST34
 3156 0850 18       		.uleb128 0x18
 3157 0851 2E000000 		.4byte	.LVL104
 3158 0855 A3070000 		.4byte	0x7a3
 3159 0859 65080000 		.4byte	0x865
 3160 085d 16       		.uleb128 0x16
 3161 085e 01       		.uleb128 0x1
 3162 085f 50       		.byte	0x50
 3163 0860 03       		.uleb128 0x3
 3164 0861 0A       		.byte	0xa
 3165 0862 E803     		.2byte	0x3e8
 3166 0864 00       		.byte	0
 3167 0865 0D       		.uleb128 0xd
 3168 0866 32000000 		.4byte	.LVL105
 3169 086a 28030000 		.4byte	0x328
 3170 086e 00       		.byte	0
 3171 086f 19       		.uleb128 0x19
 3172 0870 7A010000 		.4byte	.LASF79
 3173 0874 01       		.byte	0x1
 3174 0875 B80A     		.2byte	0xab8
 3175 0877 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 114


 3176 087b 4C000000 		.4byte	.LFE35-.LFB35
 3177 087f 01       		.uleb128 0x1
 3178 0880 9C       		.byte	0x9c
 3179 0881 96080000 		.4byte	0x896
 3180 0885 0B       		.uleb128 0xb
 3181 0886 75010000 		.4byte	.LASF34
 3182 088a 01       		.byte	0x1
 3183 088b B80A     		.2byte	0xab8
 3184 088d 83000000 		.4byte	0x83
 3185 0891 93040000 		.4byte	.LLST35
 3186 0895 00       		.byte	0
 3187 0896 13       		.uleb128 0x13
 3188 0897 B3060000 		.4byte	.LASF80
 3189 089b 01       		.byte	0x1
 3190 089c 240B     		.2byte	0xb24
 3191 089e 00000000 		.4byte	.LFB39
 3192 08a2 10000000 		.4byte	.LFE39-.LFB39
 3193 08a6 01       		.uleb128 0x1
 3194 08a7 9C       		.byte	0x9c
 3195 08a8 13       		.uleb128 0x13
 3196 08a9 34010000 		.4byte	.LASF81
 3197 08ad 01       		.byte	0x1
 3198 08ae 340B     		.2byte	0xb34
 3199 08b0 00000000 		.4byte	.LFB40
 3200 08b4 10000000 		.4byte	.LFE40-.LFB40
 3201 08b8 01       		.uleb128 0x1
 3202 08b9 9C       		.byte	0x9c
 3203 08ba 0A       		.uleb128 0xa
 3204 08bb F2050000 		.4byte	.LASF82
 3205 08bf 01       		.byte	0x1
 3206 08c0 130B     		.2byte	0xb13
 3207 08c2 00000000 		.4byte	.LFB38
 3208 08c6 18000000 		.4byte	.LFE38-.LFB38
 3209 08ca 01       		.uleb128 0x1
 3210 08cb 9C       		.byte	0x9c
 3211 08cc DA080000 		.4byte	0x8da
 3212 08d0 0D       		.uleb128 0xd
 3213 08d1 06000000 		.4byte	.LVL110
 3214 08d5 A8080000 		.4byte	0x8a8
 3215 08d9 00       		.byte	0
 3216 08da 13       		.uleb128 0x13
 3217 08db 6A060000 		.4byte	.LASF83
 3218 08df 01       		.byte	0x1
 3219 08e0 440B     		.2byte	0xb44
 3220 08e2 00000000 		.4byte	.LFB41
 3221 08e6 10000000 		.4byte	.LFE41-.LFB41
 3222 08ea 01       		.uleb128 0x1
 3223 08eb 9C       		.byte	0x9c
 3224 08ec 0A       		.uleb128 0xa
 3225 08ed 34070000 		.4byte	.LASF84
 3226 08f1 01       		.byte	0x1
 3227 08f2 550B     		.2byte	0xb55
 3228 08f4 00000000 		.4byte	.LFB42
 3229 08f8 10000000 		.4byte	.LFE42-.LFB42
 3230 08fc 01       		.uleb128 0x1
 3231 08fd 9C       		.byte	0x9c
 3232 08fe 13090000 		.4byte	0x913
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 115


 3233 0902 0B       		.uleb128 0xb
 3234 0903 6E020000 		.4byte	.LASF68
 3235 0907 01       		.byte	0x1
 3236 0908 550B     		.2byte	0xb55
 3237 090a 83000000 		.4byte	0x83
 3238 090e B4040000 		.4byte	.LLST36
 3239 0912 00       		.byte	0
 3240 0913 14       		.uleb128 0x14
 3241 0914 95010000 		.4byte	.LASF86
 3242 0918 01       		.byte	0x1
 3243 0919 650B     		.2byte	0xb65
 3244 091b 83000000 		.4byte	0x83
 3245 091f 00000000 		.4byte	.LFB43
 3246 0923 10000000 		.4byte	.LFE43-.LFB43
 3247 0927 01       		.uleb128 0x1
 3248 0928 9C       		.byte	0x9c
 3249 0929 14       		.uleb128 0x14
 3250 092a 5C040000 		.4byte	.LASF87
 3251 092e 01       		.byte	0x1
 3252 092f 750B     		.2byte	0xb75
 3253 0931 83000000 		.4byte	0x83
 3254 0935 00000000 		.4byte	.LFB44
 3255 0939 10000000 		.4byte	.LFE44-.LFB44
 3256 093d 01       		.uleb128 0x1
 3257 093e 9C       		.byte	0x9c
 3258 093f 0A       		.uleb128 0xa
 3259 0940 60030000 		.4byte	.LASF88
 3260 0944 01       		.byte	0x1
 3261 0945 950B     		.2byte	0xb95
 3262 0947 00000000 		.4byte	.LFB45
 3263 094b 20000000 		.4byte	.LFE45-.LFB45
 3264 094f 01       		.uleb128 0x1
 3265 0950 9C       		.byte	0x9c
 3266 0951 64090000 		.4byte	0x964
 3267 0955 0E       		.uleb128 0xe
 3268 0956 74020000 		.4byte	.LASF89
 3269 095a 01       		.byte	0x1
 3270 095b 950B     		.2byte	0xb95
 3271 095d 83000000 		.4byte	0x83
 3272 0961 01       		.uleb128 0x1
 3273 0962 50       		.byte	0x50
 3274 0963 00       		.byte	0
 3275 0964 14       		.uleb128 0x14
 3276 0965 52060000 		.4byte	.LASF90
 3277 0969 01       		.byte	0x1
 3278 096a AE0B     		.2byte	0xbae
 3279 096c 83000000 		.4byte	0x83
 3280 0970 00000000 		.4byte	.LFB46
 3281 0974 10000000 		.4byte	.LFE46-.LFB46
 3282 0978 01       		.uleb128 0x1
 3283 0979 9C       		.byte	0x9c
 3284 097a 14       		.uleb128 0x14
 3285 097b 8E020000 		.4byte	.LASF91
 3286 097f 01       		.byte	0x1
 3287 0980 C50B     		.2byte	0xbc5
 3288 0982 83000000 		.4byte	0x83
 3289 0986 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 116


 3290 098a 10000000 		.4byte	.LFE47-.LFB47
 3291 098e 01       		.uleb128 0x1
 3292 098f 9C       		.byte	0x9c
 3293 0990 1A       		.uleb128 0x1a
 3294 0991 47070000 		.4byte	.LASF115
 3295 0995 01       		.byte	0x1
 3296 0996 1A0C     		.2byte	0xc1a
 3297 0998 00000000 		.4byte	.LFB51
 3298 099c 28000000 		.4byte	.LFE51-.LFB51
 3299 09a0 01       		.uleb128 0x1
 3300 09a1 9C       		.byte	0x9c
 3301 09a2 BE090000 		.4byte	0x9be
 3302 09a6 1B       		.uleb128 0x1b
 3303 09a7 6900     		.ascii	"i\000"
 3304 09a9 01       		.byte	0x1
 3305 09aa 1C0C     		.2byte	0xc1c
 3306 09ac 83000000 		.4byte	0x83
 3307 09b0 D5040000 		.4byte	.LLST37
 3308 09b4 0D       		.uleb128 0xd
 3309 09b5 06000000 		.4byte	.LVL114
 3310 09b9 7A090000 		.4byte	0x97a
 3311 09bd 00       		.byte	0
 3312 09be 13       		.uleb128 0x13
 3313 09bf B1020000 		.4byte	.LASF92
 3314 09c3 01       		.byte	0x1
 3315 09c4 D20B     		.2byte	0xbd2
 3316 09c6 00000000 		.4byte	.LFB48
 3317 09ca 0C000000 		.4byte	.LFE48-.LFB48
 3318 09ce 01       		.uleb128 0x1
 3319 09cf 9C       		.byte	0x9c
 3320 09d0 19       		.uleb128 0x19
 3321 09d1 60020000 		.4byte	.LASF93
 3322 09d5 01       		.byte	0x1
 3323 09d6 F50A     		.2byte	0xaf5
 3324 09d8 00000000 		.4byte	.LFB37
 3325 09dc 44000000 		.4byte	.LFE37-.LFB37
 3326 09e0 01       		.uleb128 0x1
 3327 09e1 9C       		.byte	0x9c
 3328 09e2 360A0000 		.4byte	0xa36
 3329 09e6 1B       		.uleb128 0x1b
 3330 09e7 6900     		.ascii	"i\000"
 3331 09e9 01       		.byte	0x1
 3332 09ea F70A     		.2byte	0xaf7
 3333 09ec 83000000 		.4byte	0x83
 3334 09f0 F3040000 		.4byte	.LLST38
 3335 09f4 18       		.uleb128 0x18
 3336 09f5 1C000000 		.4byte	.LVL124
 3337 09f9 05050000 		.4byte	0x505
 3338 09fd 100A0000 		.4byte	0xa10
 3339 0a01 16       		.uleb128 0x16
 3340 0a02 01       		.uleb128 0x1
 3341 0a03 50       		.byte	0x50
 3342 0a04 01       		.uleb128 0x1
 3343 0a05 3F       		.byte	0x3f
 3344 0a06 16       		.uleb128 0x16
 3345 0a07 01       		.uleb128 0x1
 3346 0a08 51       		.byte	0x51
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 117


 3347 0a09 05       		.uleb128 0x5
 3348 0a0a 03       		.byte	0x3
 3349 0a0b 00000000 		.4byte	CySysTickServiceCallbacks
 3350 0a0f 00       		.byte	0
 3351 0a10 18       		.uleb128 0x18
 3352 0a11 22000000 		.4byte	.LVL125
 3353 0a15 3F090000 		.4byte	0x93f
 3354 0a19 230A0000 		.4byte	0xa23
 3355 0a1d 16       		.uleb128 0x16
 3356 0a1e 01       		.uleb128 0x1
 3357 0a1f 50       		.byte	0x50
 3358 0a20 01       		.uleb128 0x1
 3359 0a21 31       		.byte	0x31
 3360 0a22 00       		.byte	0
 3361 0a23 0D       		.uleb128 0xd
 3362 0a24 32000000 		.4byte	.LVL127
 3363 0a28 EC080000 		.4byte	0x8ec
 3364 0a2c 0D       		.uleb128 0xd
 3365 0a2d 36000000 		.4byte	.LVL128
 3366 0a31 BE090000 		.4byte	0x9be
 3367 0a35 00       		.byte	0
 3368 0a36 0A       		.uleb128 0xa
 3369 0a37 D9030000 		.4byte	.LASF94
 3370 0a3b 01       		.byte	0x1
 3371 0a3c D80A     		.2byte	0xad8
 3372 0a3e 00000000 		.4byte	.LFB36
 3373 0a42 20000000 		.4byte	.LFE36-.LFB36
 3374 0a46 01       		.uleb128 0x1
 3375 0a47 9C       		.byte	0x9c
 3376 0a48 5F0A0000 		.4byte	0xa5f
 3377 0a4c 0D       		.uleb128 0xd
 3378 0a4d 0E000000 		.4byte	.LVL129
 3379 0a51 D0090000 		.4byte	0x9d0
 3380 0a55 0D       		.uleb128 0xd
 3381 0a56 18000000 		.4byte	.LVL130
 3382 0a5a BA080000 		.4byte	0x8ba
 3383 0a5e 00       		.byte	0
 3384 0a5f 0F       		.uleb128 0xf
 3385 0a60 19060000 		.4byte	.LASF95
 3386 0a64 01       		.byte	0x1
 3387 0a65 F50B     		.2byte	0xbf5
 3388 0a67 F3000000 		.4byte	0xf3
 3389 0a6b 00000000 		.4byte	.LFB49
 3390 0a6f 10000000 		.4byte	.LFE49-.LFB49
 3391 0a73 01       		.uleb128 0x1
 3392 0a74 9C       		.byte	0x9c
 3393 0a75 A60A0000 		.4byte	0xaa6
 3394 0a79 0B       		.uleb128 0xb
 3395 0a7a 87030000 		.4byte	.LASF51
 3396 0a7e 01       		.byte	0x1
 3397 0a7f F50B     		.2byte	0xbf5
 3398 0a81 83000000 		.4byte	0x83
 3399 0a85 12050000 		.4byte	.LLST39
 3400 0a89 0E       		.uleb128 0xe
 3401 0a8a 42040000 		.4byte	.LASF96
 3402 0a8e 01       		.byte	0x1
 3403 0a8f F50B     		.2byte	0xbf5
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 118


 3404 0a91 F3000000 		.4byte	0xf3
 3405 0a95 01       		.uleb128 0x1
 3406 0a96 51       		.byte	0x51
 3407 0a97 10       		.uleb128 0x10
 3408 0a98 52000000 		.4byte	.LASF97
 3409 0a9c 01       		.byte	0x1
 3410 0a9d F70B     		.2byte	0xbf7
 3411 0a9f F3000000 		.4byte	0xf3
 3412 0aa3 01       		.uleb128 0x1
 3413 0aa4 50       		.byte	0x50
 3414 0aa5 00       		.byte	0
 3415 0aa6 0F       		.uleb128 0xf
 3416 0aa7 24030000 		.4byte	.LASF98
 3417 0aab 01       		.byte	0x1
 3418 0aac 0D0C     		.2byte	0xc0d
 3419 0aae F3000000 		.4byte	0xf3
 3420 0ab2 00000000 		.4byte	.LFB50
 3421 0ab6 0C000000 		.4byte	.LFE50-.LFB50
 3422 0aba 01       		.uleb128 0x1
 3423 0abb 9C       		.byte	0x9c
 3424 0abc D10A0000 		.4byte	0xad1
 3425 0ac0 0B       		.uleb128 0xb
 3426 0ac1 87030000 		.4byte	.LASF51
 3427 0ac5 01       		.byte	0x1
 3428 0ac6 0D0C     		.2byte	0xc0d
 3429 0ac8 83000000 		.4byte	0x83
 3430 0acc 33050000 		.4byte	.LLST40
 3431 0ad0 00       		.byte	0
 3432 0ad1 0A       		.uleb128 0xa
 3433 0ad2 80020000 		.4byte	.LASF99
 3434 0ad6 01       		.byte	0x1
 3435 0ad7 3A0C     		.2byte	0xc3a
 3436 0ad9 00000000 		.4byte	.LFB52
 3437 0add 70000000 		.4byte	.LFE52-.LFB52
 3438 0ae1 01       		.uleb128 0x1
 3439 0ae2 9C       		.byte	0x9c
 3440 0ae3 F60A0000 		.4byte	0xaf6
 3441 0ae7 0E       		.uleb128 0xe
 3442 0ae8 41060000 		.4byte	.LASF100
 3443 0aec 01       		.byte	0x1
 3444 0aed 3A0C     		.2byte	0xc3a
 3445 0aef F60A0000 		.4byte	0xaf6
 3446 0af3 01       		.uleb128 0x1
 3447 0af4 50       		.byte	0x50
 3448 0af5 00       		.byte	0
 3449 0af6 06       		.uleb128 0x6
 3450 0af7 04       		.byte	0x4
 3451 0af8 83000000 		.4byte	0x83
 3452 0afc 11       		.uleb128 0x11
 3453 0afd F3000000 		.4byte	0xf3
 3454 0b01 0C0B0000 		.4byte	0xb0c
 3455 0b05 12       		.uleb128 0x12
 3456 0b06 EC000000 		.4byte	0xec
 3457 0b0a 04       		.byte	0x4
 3458 0b0b 00       		.byte	0
 3459 0b0c 1C       		.uleb128 0x1c
 3460 0b0d 2E060000 		.4byte	.LASF101
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 119


 3461 0b11 01       		.byte	0x1
 3462 0b12 22       		.byte	0x22
 3463 0b13 FC0A0000 		.4byte	0xafc
 3464 0b17 05       		.uleb128 0x5
 3465 0b18 03       		.byte	0x3
 3466 0b19 00000000 		.4byte	CySysTickCallbacks
 3467 0b1d 1D       		.uleb128 0x1d
 3468 0b1e 6E040000 		.4byte	.LASF102
 3469 0b22 01       		.byte	0x1
 3470 0b23 1B       		.byte	0x1b
 3471 0b24 83000000 		.4byte	0x83
 3472 0b28 05       		.uleb128 0x5
 3473 0b29 03       		.byte	0x3
 3474 0b2a 00000000 		.4byte	cydelayFreqHz
 3475 0b2e 1D       		.uleb128 0x1d
 3476 0b2f CE010000 		.4byte	.LASF103
 3477 0b33 01       		.byte	0x1
 3478 0b34 1C       		.byte	0x1c
 3479 0b35 83000000 		.4byte	0x83
 3480 0b39 05       		.uleb128 0x5
 3481 0b3a 03       		.byte	0x3
 3482 0b3b 00000000 		.4byte	cydelayFreqKhz
 3483 0b3f 1D       		.uleb128 0x1d
 3484 0b40 94060000 		.4byte	.LASF104
 3485 0b44 01       		.byte	0x1
 3486 0b45 1D       		.byte	0x1d
 3487 0b46 6B000000 		.4byte	0x6b
 3488 0b4a 05       		.uleb128 0x5
 3489 0b4b 03       		.byte	0x3
 3490 0b4c 00000000 		.4byte	cydelayFreqMhz
 3491 0b50 1D       		.uleb128 0x1d
 3492 0b51 53020000 		.4byte	.LASF105
 3493 0b55 01       		.byte	0x1
 3494 0b56 1E       		.byte	0x1e
 3495 0b57 83000000 		.4byte	0x83
 3496 0b5b 05       		.uleb128 0x5
 3497 0b5c 03       		.byte	0x3
 3498 0b5d 00000000 		.4byte	cydelay32kMs
 3499 0b61 1D       		.uleb128 0x1d
 3500 0b62 FE030000 		.4byte	.LASF106
 3501 0b66 01       		.byte	0x1
 3502 0b67 36       		.byte	0x36
 3503 0b68 83000000 		.4byte	0x83
 3504 0b6c 05       		.uleb128 0x5
 3505 0b6d 03       		.byte	0x3
 3506 0b6e 00000000 		.4byte	CySysTickInitVar
 3507 0b72 11       		.uleb128 0x11
 3508 0b73 820B0000 		.4byte	0xb82
 3509 0b77 820B0000 		.4byte	0xb82
 3510 0b7b 12       		.uleb128 0x12
 3511 0b7c EC000000 		.4byte	0xec
 3512 0b80 2D       		.byte	0x2d
 3513 0b81 00       		.byte	0
 3514 0b82 1E       		.uleb128 0x1e
 3515 0b83 6B000000 		.4byte	0x6b
 3516 0b87 1D       		.uleb128 0x1d
 3517 0b88 4B040000 		.4byte	.LASF107
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 120


 3518 0b8c 01       		.byte	0x1
 3519 0b8d 3B       		.byte	0x3b
 3520 0b8e 980B0000 		.4byte	0xb98
 3521 0b92 05       		.uleb128 0x5
 3522 0b93 03       		.byte	0x3
 3523 0b94 00000000 		.4byte	cyImoFreqMhz2Reg
 3524 0b98 1E       		.uleb128 0x1e
 3525 0b99 720B0000 		.4byte	0xb72
 3526 0b9d 1D       		.uleb128 0x1d
 3527 0b9e 38000000 		.4byte	.LASF108
 3528 0ba2 01       		.byte	0x1
 3529 0ba3 51       		.byte	0x51
 3530 0ba4 83000000 		.4byte	0x83
 3531 0ba8 05       		.uleb128 0x5
 3532 0ba9 03       		.byte	0x3
 3533 0baa 00000000 		.4byte	CySysClkPumpConfig
 3534 0bae 1F       		.uleb128 0x1f
 3535 0baf FD020000 		.4byte	.LASF109
 3536 0bb3 FD020000 		.4byte	.LASF109
 3537 0bb7 03       		.byte	0x3
 3538 0bb8 E5       		.byte	0xe5
 3539 0bb9 1F       		.uleb128 0x1f
 3540 0bba 93040000 		.4byte	.LASF110
 3541 0bbe 93040000 		.4byte	.LASF110
 3542 0bc2 03       		.byte	0x3
 3543 0bc3 E6       		.byte	0xe6
 3544 0bc4 1F       		.uleb128 0x1f
 3545 0bc5 E6040000 		.4byte	.LASF111
 3546 0bc9 E6040000 		.4byte	.LASF111
 3547 0bcd 03       		.byte	0x3
 3548 0bce DC       		.byte	0xdc
 3549 0bcf 00       		.byte	0
 3550              		.section	.debug_abbrev,"",%progbits
 3551              	.Ldebug_abbrev0:
 3552 0000 01       		.uleb128 0x1
 3553 0001 11       		.uleb128 0x11
 3554 0002 01       		.byte	0x1
 3555 0003 25       		.uleb128 0x25
 3556 0004 0E       		.uleb128 0xe
 3557 0005 13       		.uleb128 0x13
 3558 0006 0B       		.uleb128 0xb
 3559 0007 03       		.uleb128 0x3
 3560 0008 0E       		.uleb128 0xe
 3561 0009 1B       		.uleb128 0x1b
 3562 000a 0E       		.uleb128 0xe
 3563 000b 55       		.uleb128 0x55
 3564 000c 17       		.uleb128 0x17
 3565 000d 11       		.uleb128 0x11
 3566 000e 01       		.uleb128 0x1
 3567 000f 10       		.uleb128 0x10
 3568 0010 17       		.uleb128 0x17
 3569 0011 00       		.byte	0
 3570 0012 00       		.byte	0
 3571 0013 02       		.uleb128 0x2
 3572 0014 24       		.uleb128 0x24
 3573 0015 00       		.byte	0
 3574 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 121


 3575 0017 0B       		.uleb128 0xb
 3576 0018 3E       		.uleb128 0x3e
 3577 0019 0B       		.uleb128 0xb
 3578 001a 03       		.uleb128 0x3
 3579 001b 0E       		.uleb128 0xe
 3580 001c 00       		.byte	0
 3581 001d 00       		.byte	0
 3582 001e 03       		.uleb128 0x3
 3583 001f 24       		.uleb128 0x24
 3584 0020 00       		.byte	0
 3585 0021 0B       		.uleb128 0xb
 3586 0022 0B       		.uleb128 0xb
 3587 0023 3E       		.uleb128 0x3e
 3588 0024 0B       		.uleb128 0xb
 3589 0025 03       		.uleb128 0x3
 3590 0026 08       		.uleb128 0x8
 3591 0027 00       		.byte	0
 3592 0028 00       		.byte	0
 3593 0029 04       		.uleb128 0x4
 3594 002a 16       		.uleb128 0x16
 3595 002b 00       		.byte	0
 3596 002c 03       		.uleb128 0x3
 3597 002d 0E       		.uleb128 0xe
 3598 002e 3A       		.uleb128 0x3a
 3599 002f 0B       		.uleb128 0xb
 3600 0030 3B       		.uleb128 0x3b
 3601 0031 05       		.uleb128 0x5
 3602 0032 49       		.uleb128 0x49
 3603 0033 13       		.uleb128 0x13
 3604 0034 00       		.byte	0
 3605 0035 00       		.byte	0
 3606 0036 05       		.uleb128 0x5
 3607 0037 35       		.uleb128 0x35
 3608 0038 00       		.byte	0
 3609 0039 49       		.uleb128 0x49
 3610 003a 13       		.uleb128 0x13
 3611 003b 00       		.byte	0
 3612 003c 00       		.byte	0
 3613 003d 06       		.uleb128 0x6
 3614 003e 0F       		.uleb128 0xf
 3615 003f 00       		.byte	0
 3616 0040 0B       		.uleb128 0xb
 3617 0041 0B       		.uleb128 0xb
 3618 0042 49       		.uleb128 0x49
 3619 0043 13       		.uleb128 0x13
 3620 0044 00       		.byte	0
 3621 0045 00       		.byte	0
 3622 0046 07       		.uleb128 0x7
 3623 0047 15       		.uleb128 0x15
 3624 0048 00       		.byte	0
 3625 0049 27       		.uleb128 0x27
 3626 004a 19       		.uleb128 0x19
 3627 004b 00       		.byte	0
 3628 004c 00       		.byte	0
 3629 004d 08       		.uleb128 0x8
 3630 004e 16       		.uleb128 0x16
 3631 004f 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 122


 3632 0050 03       		.uleb128 0x3
 3633 0051 0E       		.uleb128 0xe
 3634 0052 3A       		.uleb128 0x3a
 3635 0053 0B       		.uleb128 0xb
 3636 0054 3B       		.uleb128 0x3b
 3637 0055 0B       		.uleb128 0xb
 3638 0056 49       		.uleb128 0x49
 3639 0057 13       		.uleb128 0x13
 3640 0058 00       		.byte	0
 3641 0059 00       		.byte	0
 3642 005a 09       		.uleb128 0x9
 3643 005b 2E       		.uleb128 0x2e
 3644 005c 00       		.byte	0
 3645 005d 3F       		.uleb128 0x3f
 3646 005e 19       		.uleb128 0x19
 3647 005f 03       		.uleb128 0x3
 3648 0060 0E       		.uleb128 0xe
 3649 0061 3A       		.uleb128 0x3a
 3650 0062 0B       		.uleb128 0xb
 3651 0063 3B       		.uleb128 0x3b
 3652 0064 0B       		.uleb128 0xb
 3653 0065 27       		.uleb128 0x27
 3654 0066 19       		.uleb128 0x19
 3655 0067 11       		.uleb128 0x11
 3656 0068 01       		.uleb128 0x1
 3657 0069 12       		.uleb128 0x12
 3658 006a 06       		.uleb128 0x6
 3659 006b 40       		.uleb128 0x40
 3660 006c 18       		.uleb128 0x18
 3661 006d 9742     		.uleb128 0x2117
 3662 006f 19       		.uleb128 0x19
 3663 0070 00       		.byte	0
 3664 0071 00       		.byte	0
 3665 0072 0A       		.uleb128 0xa
 3666 0073 2E       		.uleb128 0x2e
 3667 0074 01       		.byte	0x1
 3668 0075 3F       		.uleb128 0x3f
 3669 0076 19       		.uleb128 0x19
 3670 0077 03       		.uleb128 0x3
 3671 0078 0E       		.uleb128 0xe
 3672 0079 3A       		.uleb128 0x3a
 3673 007a 0B       		.uleb128 0xb
 3674 007b 3B       		.uleb128 0x3b
 3675 007c 05       		.uleb128 0x5
 3676 007d 27       		.uleb128 0x27
 3677 007e 19       		.uleb128 0x19
 3678 007f 11       		.uleb128 0x11
 3679 0080 01       		.uleb128 0x1
 3680 0081 12       		.uleb128 0x12
 3681 0082 06       		.uleb128 0x6
 3682 0083 40       		.uleb128 0x40
 3683 0084 18       		.uleb128 0x18
 3684 0085 9742     		.uleb128 0x2117
 3685 0087 19       		.uleb128 0x19
 3686 0088 01       		.uleb128 0x1
 3687 0089 13       		.uleb128 0x13
 3688 008a 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 123


 3689 008b 00       		.byte	0
 3690 008c 0B       		.uleb128 0xb
 3691 008d 05       		.uleb128 0x5
 3692 008e 00       		.byte	0
 3693 008f 03       		.uleb128 0x3
 3694 0090 0E       		.uleb128 0xe
 3695 0091 3A       		.uleb128 0x3a
 3696 0092 0B       		.uleb128 0xb
 3697 0093 3B       		.uleb128 0x3b
 3698 0094 05       		.uleb128 0x5
 3699 0095 49       		.uleb128 0x49
 3700 0096 13       		.uleb128 0x13
 3701 0097 02       		.uleb128 0x2
 3702 0098 17       		.uleb128 0x17
 3703 0099 00       		.byte	0
 3704 009a 00       		.byte	0
 3705 009b 0C       		.uleb128 0xc
 3706 009c 34       		.uleb128 0x34
 3707 009d 00       		.byte	0
 3708 009e 03       		.uleb128 0x3
 3709 009f 0E       		.uleb128 0xe
 3710 00a0 3A       		.uleb128 0x3a
 3711 00a1 0B       		.uleb128 0xb
 3712 00a2 3B       		.uleb128 0x3b
 3713 00a3 05       		.uleb128 0x5
 3714 00a4 49       		.uleb128 0x49
 3715 00a5 13       		.uleb128 0x13
 3716 00a6 02       		.uleb128 0x2
 3717 00a7 17       		.uleb128 0x17
 3718 00a8 00       		.byte	0
 3719 00a9 00       		.byte	0
 3720 00aa 0D       		.uleb128 0xd
 3721 00ab 898201   		.uleb128 0x4109
 3722 00ae 00       		.byte	0
 3723 00af 11       		.uleb128 0x11
 3724 00b0 01       		.uleb128 0x1
 3725 00b1 31       		.uleb128 0x31
 3726 00b2 13       		.uleb128 0x13
 3727 00b3 00       		.byte	0
 3728 00b4 00       		.byte	0
 3729 00b5 0E       		.uleb128 0xe
 3730 00b6 05       		.uleb128 0x5
 3731 00b7 00       		.byte	0
 3732 00b8 03       		.uleb128 0x3
 3733 00b9 0E       		.uleb128 0xe
 3734 00ba 3A       		.uleb128 0x3a
 3735 00bb 0B       		.uleb128 0xb
 3736 00bc 3B       		.uleb128 0x3b
 3737 00bd 05       		.uleb128 0x5
 3738 00be 49       		.uleb128 0x49
 3739 00bf 13       		.uleb128 0x13
 3740 00c0 02       		.uleb128 0x2
 3741 00c1 18       		.uleb128 0x18
 3742 00c2 00       		.byte	0
 3743 00c3 00       		.byte	0
 3744 00c4 0F       		.uleb128 0xf
 3745 00c5 2E       		.uleb128 0x2e
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 124


 3746 00c6 01       		.byte	0x1
 3747 00c7 3F       		.uleb128 0x3f
 3748 00c8 19       		.uleb128 0x19
 3749 00c9 03       		.uleb128 0x3
 3750 00ca 0E       		.uleb128 0xe
 3751 00cb 3A       		.uleb128 0x3a
 3752 00cc 0B       		.uleb128 0xb
 3753 00cd 3B       		.uleb128 0x3b
 3754 00ce 05       		.uleb128 0x5
 3755 00cf 27       		.uleb128 0x27
 3756 00d0 19       		.uleb128 0x19
 3757 00d1 49       		.uleb128 0x49
 3758 00d2 13       		.uleb128 0x13
 3759 00d3 11       		.uleb128 0x11
 3760 00d4 01       		.uleb128 0x1
 3761 00d5 12       		.uleb128 0x12
 3762 00d6 06       		.uleb128 0x6
 3763 00d7 40       		.uleb128 0x40
 3764 00d8 18       		.uleb128 0x18
 3765 00d9 9742     		.uleb128 0x2117
 3766 00db 19       		.uleb128 0x19
 3767 00dc 01       		.uleb128 0x1
 3768 00dd 13       		.uleb128 0x13
 3769 00de 00       		.byte	0
 3770 00df 00       		.byte	0
 3771 00e0 10       		.uleb128 0x10
 3772 00e1 34       		.uleb128 0x34
 3773 00e2 00       		.byte	0
 3774 00e3 03       		.uleb128 0x3
 3775 00e4 0E       		.uleb128 0xe
 3776 00e5 3A       		.uleb128 0x3a
 3777 00e6 0B       		.uleb128 0xb
 3778 00e7 3B       		.uleb128 0x3b
 3779 00e8 05       		.uleb128 0x5
 3780 00e9 49       		.uleb128 0x49
 3781 00ea 13       		.uleb128 0x13
 3782 00eb 02       		.uleb128 0x2
 3783 00ec 18       		.uleb128 0x18
 3784 00ed 00       		.byte	0
 3785 00ee 00       		.byte	0
 3786 00ef 11       		.uleb128 0x11
 3787 00f0 01       		.uleb128 0x1
 3788 00f1 01       		.byte	0x1
 3789 00f2 49       		.uleb128 0x49
 3790 00f3 13       		.uleb128 0x13
 3791 00f4 01       		.uleb128 0x1
 3792 00f5 13       		.uleb128 0x13
 3793 00f6 00       		.byte	0
 3794 00f7 00       		.byte	0
 3795 00f8 12       		.uleb128 0x12
 3796 00f9 21       		.uleb128 0x21
 3797 00fa 00       		.byte	0
 3798 00fb 49       		.uleb128 0x49
 3799 00fc 13       		.uleb128 0x13
 3800 00fd 2F       		.uleb128 0x2f
 3801 00fe 0B       		.uleb128 0xb
 3802 00ff 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 125


 3803 0100 00       		.byte	0
 3804 0101 13       		.uleb128 0x13
 3805 0102 2E       		.uleb128 0x2e
 3806 0103 00       		.byte	0
 3807 0104 3F       		.uleb128 0x3f
 3808 0105 19       		.uleb128 0x19
 3809 0106 03       		.uleb128 0x3
 3810 0107 0E       		.uleb128 0xe
 3811 0108 3A       		.uleb128 0x3a
 3812 0109 0B       		.uleb128 0xb
 3813 010a 3B       		.uleb128 0x3b
 3814 010b 05       		.uleb128 0x5
 3815 010c 27       		.uleb128 0x27
 3816 010d 19       		.uleb128 0x19
 3817 010e 11       		.uleb128 0x11
 3818 010f 01       		.uleb128 0x1
 3819 0110 12       		.uleb128 0x12
 3820 0111 06       		.uleb128 0x6
 3821 0112 40       		.uleb128 0x40
 3822 0113 18       		.uleb128 0x18
 3823 0114 9742     		.uleb128 0x2117
 3824 0116 19       		.uleb128 0x19
 3825 0117 00       		.byte	0
 3826 0118 00       		.byte	0
 3827 0119 14       		.uleb128 0x14
 3828 011a 2E       		.uleb128 0x2e
 3829 011b 00       		.byte	0
 3830 011c 3F       		.uleb128 0x3f
 3831 011d 19       		.uleb128 0x19
 3832 011e 03       		.uleb128 0x3
 3833 011f 0E       		.uleb128 0xe
 3834 0120 3A       		.uleb128 0x3a
 3835 0121 0B       		.uleb128 0xb
 3836 0122 3B       		.uleb128 0x3b
 3837 0123 05       		.uleb128 0x5
 3838 0124 27       		.uleb128 0x27
 3839 0125 19       		.uleb128 0x19
 3840 0126 49       		.uleb128 0x49
 3841 0127 13       		.uleb128 0x13
 3842 0128 11       		.uleb128 0x11
 3843 0129 01       		.uleb128 0x1
 3844 012a 12       		.uleb128 0x12
 3845 012b 06       		.uleb128 0x6
 3846 012c 40       		.uleb128 0x40
 3847 012d 18       		.uleb128 0x18
 3848 012e 9742     		.uleb128 0x2117
 3849 0130 19       		.uleb128 0x19
 3850 0131 00       		.byte	0
 3851 0132 00       		.byte	0
 3852 0133 15       		.uleb128 0x15
 3853 0134 898201   		.uleb128 0x4109
 3854 0137 01       		.byte	0x1
 3855 0138 11       		.uleb128 0x11
 3856 0139 01       		.uleb128 0x1
 3857 013a 31       		.uleb128 0x31
 3858 013b 13       		.uleb128 0x13
 3859 013c 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 126


 3860 013d 00       		.byte	0
 3861 013e 16       		.uleb128 0x16
 3862 013f 8A8201   		.uleb128 0x410a
 3863 0142 00       		.byte	0
 3864 0143 02       		.uleb128 0x2
 3865 0144 18       		.uleb128 0x18
 3866 0145 9142     		.uleb128 0x2111
 3867 0147 18       		.uleb128 0x18
 3868 0148 00       		.byte	0
 3869 0149 00       		.byte	0
 3870 014a 17       		.uleb128 0x17
 3871 014b 34       		.uleb128 0x34
 3872 014c 00       		.byte	0
 3873 014d 03       		.uleb128 0x3
 3874 014e 0E       		.uleb128 0xe
 3875 014f 3A       		.uleb128 0x3a
 3876 0150 0B       		.uleb128 0xb
 3877 0151 3B       		.uleb128 0x3b
 3878 0152 05       		.uleb128 0x5
 3879 0153 49       		.uleb128 0x49
 3880 0154 13       		.uleb128 0x13
 3881 0155 1C       		.uleb128 0x1c
 3882 0156 06       		.uleb128 0x6
 3883 0157 00       		.byte	0
 3884 0158 00       		.byte	0
 3885 0159 18       		.uleb128 0x18
 3886 015a 898201   		.uleb128 0x4109
 3887 015d 01       		.byte	0x1
 3888 015e 11       		.uleb128 0x11
 3889 015f 01       		.uleb128 0x1
 3890 0160 31       		.uleb128 0x31
 3891 0161 13       		.uleb128 0x13
 3892 0162 01       		.uleb128 0x1
 3893 0163 13       		.uleb128 0x13
 3894 0164 00       		.byte	0
 3895 0165 00       		.byte	0
 3896 0166 19       		.uleb128 0x19
 3897 0167 2E       		.uleb128 0x2e
 3898 0168 01       		.byte	0x1
 3899 0169 3F       		.uleb128 0x3f
 3900 016a 19       		.uleb128 0x19
 3901 016b 03       		.uleb128 0x3
 3902 016c 0E       		.uleb128 0xe
 3903 016d 3A       		.uleb128 0x3a
 3904 016e 0B       		.uleb128 0xb
 3905 016f 3B       		.uleb128 0x3b
 3906 0170 05       		.uleb128 0x5
 3907 0171 27       		.uleb128 0x27
 3908 0172 19       		.uleb128 0x19
 3909 0173 11       		.uleb128 0x11
 3910 0174 01       		.uleb128 0x1
 3911 0175 12       		.uleb128 0x12
 3912 0176 06       		.uleb128 0x6
 3913 0177 40       		.uleb128 0x40
 3914 0178 18       		.uleb128 0x18
 3915 0179 9642     		.uleb128 0x2116
 3916 017b 19       		.uleb128 0x19
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 127


 3917 017c 01       		.uleb128 0x1
 3918 017d 13       		.uleb128 0x13
 3919 017e 00       		.byte	0
 3920 017f 00       		.byte	0
 3921 0180 1A       		.uleb128 0x1a
 3922 0181 2E       		.uleb128 0x2e
 3923 0182 01       		.byte	0x1
 3924 0183 03       		.uleb128 0x3
 3925 0184 0E       		.uleb128 0xe
 3926 0185 3A       		.uleb128 0x3a
 3927 0186 0B       		.uleb128 0xb
 3928 0187 3B       		.uleb128 0x3b
 3929 0188 05       		.uleb128 0x5
 3930 0189 27       		.uleb128 0x27
 3931 018a 19       		.uleb128 0x19
 3932 018b 11       		.uleb128 0x11
 3933 018c 01       		.uleb128 0x1
 3934 018d 12       		.uleb128 0x12
 3935 018e 06       		.uleb128 0x6
 3936 018f 40       		.uleb128 0x40
 3937 0190 18       		.uleb128 0x18
 3938 0191 9642     		.uleb128 0x2116
 3939 0193 19       		.uleb128 0x19
 3940 0194 01       		.uleb128 0x1
 3941 0195 13       		.uleb128 0x13
 3942 0196 00       		.byte	0
 3943 0197 00       		.byte	0
 3944 0198 1B       		.uleb128 0x1b
 3945 0199 34       		.uleb128 0x34
 3946 019a 00       		.byte	0
 3947 019b 03       		.uleb128 0x3
 3948 019c 08       		.uleb128 0x8
 3949 019d 3A       		.uleb128 0x3a
 3950 019e 0B       		.uleb128 0xb
 3951 019f 3B       		.uleb128 0x3b
 3952 01a0 05       		.uleb128 0x5
 3953 01a1 49       		.uleb128 0x49
 3954 01a2 13       		.uleb128 0x13
 3955 01a3 02       		.uleb128 0x2
 3956 01a4 17       		.uleb128 0x17
 3957 01a5 00       		.byte	0
 3958 01a6 00       		.byte	0
 3959 01a7 1C       		.uleb128 0x1c
 3960 01a8 34       		.uleb128 0x34
 3961 01a9 00       		.byte	0
 3962 01aa 03       		.uleb128 0x3
 3963 01ab 0E       		.uleb128 0xe
 3964 01ac 3A       		.uleb128 0x3a
 3965 01ad 0B       		.uleb128 0xb
 3966 01ae 3B       		.uleb128 0x3b
 3967 01af 0B       		.uleb128 0xb
 3968 01b0 49       		.uleb128 0x49
 3969 01b1 13       		.uleb128 0x13
 3970 01b2 02       		.uleb128 0x2
 3971 01b3 18       		.uleb128 0x18
 3972 01b4 00       		.byte	0
 3973 01b5 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 128


 3974 01b6 1D       		.uleb128 0x1d
 3975 01b7 34       		.uleb128 0x34
 3976 01b8 00       		.byte	0
 3977 01b9 03       		.uleb128 0x3
 3978 01ba 0E       		.uleb128 0xe
 3979 01bb 3A       		.uleb128 0x3a
 3980 01bc 0B       		.uleb128 0xb
 3981 01bd 3B       		.uleb128 0x3b
 3982 01be 0B       		.uleb128 0xb
 3983 01bf 49       		.uleb128 0x49
 3984 01c0 13       		.uleb128 0x13
 3985 01c1 3F       		.uleb128 0x3f
 3986 01c2 19       		.uleb128 0x19
 3987 01c3 02       		.uleb128 0x2
 3988 01c4 18       		.uleb128 0x18
 3989 01c5 00       		.byte	0
 3990 01c6 00       		.byte	0
 3991 01c7 1E       		.uleb128 0x1e
 3992 01c8 26       		.uleb128 0x26
 3993 01c9 00       		.byte	0
 3994 01ca 49       		.uleb128 0x49
 3995 01cb 13       		.uleb128 0x13
 3996 01cc 00       		.byte	0
 3997 01cd 00       		.byte	0
 3998 01ce 1F       		.uleb128 0x1f
 3999 01cf 2E       		.uleb128 0x2e
 4000 01d0 00       		.byte	0
 4001 01d1 3F       		.uleb128 0x3f
 4002 01d2 19       		.uleb128 0x19
 4003 01d3 3C       		.uleb128 0x3c
 4004 01d4 19       		.uleb128 0x19
 4005 01d5 6E       		.uleb128 0x6e
 4006 01d6 0E       		.uleb128 0xe
 4007 01d7 03       		.uleb128 0x3
 4008 01d8 0E       		.uleb128 0xe
 4009 01d9 3A       		.uleb128 0x3a
 4010 01da 0B       		.uleb128 0xb
 4011 01db 3B       		.uleb128 0x3b
 4012 01dc 0B       		.uleb128 0xb
 4013 01dd 00       		.byte	0
 4014 01de 00       		.byte	0
 4015 01df 00       		.byte	0
 4016              		.section	.debug_loc,"",%progbits
 4017              	.Ldebug_loc0:
 4018              	.LLST0:
 4019 0000 00000000 		.4byte	.LVL0
 4020 0004 07000000 		.4byte	.LVL1-1
 4021 0008 0100     		.2byte	0x1
 4022 000a 50       		.byte	0x50
 4023 000b 07000000 		.4byte	.LVL1-1
 4024 000f 12000000 		.4byte	.LVL3
 4025 0013 0100     		.2byte	0x1
 4026 0015 54       		.byte	0x54
 4027 0016 12000000 		.4byte	.LVL3
 4028 001a 20000000 		.4byte	.LFE4
 4029 001e 0400     		.2byte	0x4
 4030 0020 F3       		.byte	0xf3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 129


 4031 0021 01       		.uleb128 0x1
 4032 0022 50       		.byte	0x50
 4033 0023 9F       		.byte	0x9f
 4034 0024 00000000 		.4byte	0
 4035 0028 00000000 		.4byte	0
 4036              	.LLST1:
 4037 002c 08000000 		.4byte	.LVL1
 4038 0030 19000000 		.4byte	.LVL5-1
 4039 0034 0100     		.2byte	0x1
 4040 0036 50       		.byte	0x50
 4041 0037 00000000 		.4byte	0
 4042 003b 00000000 		.4byte	0
 4043              	.LLST2:
 4044 003f 10000000 		.4byte	.LVL2
 4045 0043 14000000 		.4byte	.LVL4
 4046 0047 0100     		.2byte	0x1
 4047 0049 53       		.byte	0x53
 4048 004a 14000000 		.4byte	.LVL4
 4049 004e 1A000000 		.4byte	.LVL6
 4050 0052 0100     		.2byte	0x1
 4051 0054 54       		.byte	0x54
 4052 0055 00000000 		.4byte	0
 4053 0059 00000000 		.4byte	0
 4054              	.LLST3:
 4055 005d 06000000 		.4byte	.LVL8
 4056 0061 11000000 		.4byte	.LVL10-1
 4057 0065 0100     		.2byte	0x1
 4058 0067 50       		.byte	0x50
 4059 0068 00000000 		.4byte	0
 4060 006c 00000000 		.4byte	0
 4061              	.LLST4:
 4062 0070 0E000000 		.4byte	.LVL9
 4063 0074 14000000 		.4byte	.LVL11
 4064 0078 0100     		.2byte	0x1
 4065 007a 54       		.byte	0x54
 4066 007b 14000000 		.4byte	.LVL11
 4067 007f 1C000000 		.4byte	.LFE6
 4068 0083 0100     		.2byte	0x1
 4069 0085 50       		.byte	0x50
 4070 0086 00000000 		.4byte	0
 4071 008a 00000000 		.4byte	0
 4072              	.LLST5:
 4073 008e 00000000 		.4byte	.LVL12
 4074 0092 07000000 		.4byte	.LVL13-1
 4075 0096 0100     		.2byte	0x1
 4076 0098 50       		.byte	0x50
 4077 0099 07000000 		.4byte	.LVL13-1
 4078 009d 14000000 		.4byte	.LVL14
 4079 00a1 0100     		.2byte	0x1
 4080 00a3 54       		.byte	0x54
 4081 00a4 14000000 		.4byte	.LVL14
 4082 00a8 30000000 		.4byte	.LFE7
 4083 00ac 0400     		.2byte	0x4
 4084 00ae F3       		.byte	0xf3
 4085 00af 01       		.uleb128 0x1
 4086 00b0 50       		.byte	0x50
 4087 00b1 9F       		.byte	0x9f
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 130


 4088 00b2 00000000 		.4byte	0
 4089 00b6 00000000 		.4byte	0
 4090              	.LLST6:
 4091 00ba 08000000 		.4byte	.LVL13
 4092 00be 23000000 		.4byte	.LVL15-1
 4093 00c2 0100     		.2byte	0x1
 4094 00c4 50       		.byte	0x50
 4095 00c5 00000000 		.4byte	0
 4096 00c9 00000000 		.4byte	0
 4097              	.LLST7:
 4098 00cd 00000000 		.4byte	.LVL16
 4099 00d1 09000000 		.4byte	.LVL17-1
 4100 00d5 0100     		.2byte	0x1
 4101 00d7 50       		.byte	0x50
 4102 00d8 09000000 		.4byte	.LVL17-1
 4103 00dc 18000000 		.4byte	.LVL18
 4104 00e0 0100     		.2byte	0x1
 4105 00e2 54       		.byte	0x54
 4106 00e3 18000000 		.4byte	.LVL18
 4107 00e7 40000000 		.4byte	.LVL20
 4108 00eb 0300     		.2byte	0x3
 4109 00ed 74       		.byte	0x74
 4110 00ee 03       		.sleb128 3
 4111 00ef 9F       		.byte	0x9f
 4112 00f0 40000000 		.4byte	.LVL20
 4113 00f4 64000000 		.4byte	.LFE8
 4114 00f8 0400     		.2byte	0x4
 4115 00fa F3       		.byte	0xf3
 4116 00fb 01       		.uleb128 0x1
 4117 00fc 50       		.byte	0x50
 4118 00fd 9F       		.byte	0x9f
 4119 00fe 00000000 		.4byte	0
 4120 0102 00000000 		.4byte	0
 4121              	.LLST8:
 4122 0106 0A000000 		.4byte	.LVL17
 4123 010a 3D000000 		.4byte	.LVL19-1
 4124 010e 0100     		.2byte	0x1
 4125 0110 50       		.byte	0x50
 4126 0111 00000000 		.4byte	0
 4127 0115 00000000 		.4byte	0
 4128              	.LLST9:
 4129 0119 00000000 		.4byte	.LVL22
 4130 011d 04000000 		.4byte	.LVL23
 4131 0121 0100     		.2byte	0x1
 4132 0123 50       		.byte	0x50
 4133 0124 04000000 		.4byte	.LVL23
 4134 0128 14000000 		.4byte	.LFE17
 4135 012c 0100     		.2byte	0x1
 4136 012e 52       		.byte	0x52
 4137 012f 00000000 		.4byte	0
 4138 0133 00000000 		.4byte	0
 4139              	.LLST10:
 4140 0137 00000000 		.4byte	.LVL28
 4141 013b 04000000 		.4byte	.LVL29
 4142 013f 0100     		.2byte	0x1
 4143 0141 50       		.byte	0x50
 4144 0142 04000000 		.4byte	.LVL29
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 131


 4145 0146 14000000 		.4byte	.LFE26
 4146 014a 0400     		.2byte	0x4
 4147 014c F3       		.byte	0xf3
 4148 014d 01       		.uleb128 0x1
 4149 014e 50       		.byte	0x50
 4150 014f 9F       		.byte	0x9f
 4151 0150 00000000 		.4byte	0
 4152 0154 00000000 		.4byte	0
 4153              	.LLST11:
 4154 0158 00000000 		.4byte	.LVL30
 4155 015c 08000000 		.4byte	.LVL31
 4156 0160 0100     		.2byte	0x1
 4157 0162 50       		.byte	0x50
 4158 0163 08000000 		.4byte	.LVL31
 4159 0167 18000000 		.4byte	.LFE27
 4160 016b 0400     		.2byte	0x4
 4161 016d F3       		.byte	0xf3
 4162 016e 01       		.uleb128 0x1
 4163 016f 50       		.byte	0x50
 4164 0170 9F       		.byte	0x9f
 4165 0171 00000000 		.4byte	0
 4166 0175 00000000 		.4byte	0
 4167              	.LLST12:
 4168 0179 00000000 		.4byte	.LVL32
 4169 017d 04000000 		.4byte	.LVL33
 4170 0181 0100     		.2byte	0x1
 4171 0183 50       		.byte	0x50
 4172 0184 04000000 		.4byte	.LVL33
 4173 0188 14000000 		.4byte	.LFE28
 4174 018c 0400     		.2byte	0x4
 4175 018e F3       		.byte	0xf3
 4176 018f 01       		.uleb128 0x1
 4177 0190 50       		.byte	0x50
 4178 0191 9F       		.byte	0x9f
 4179 0192 00000000 		.4byte	0
 4180 0196 00000000 		.4byte	0
 4181              	.LLST13:
 4182 019a 00000000 		.4byte	.LVL34
 4183 019e 04000000 		.4byte	.LVL35
 4184 01a2 0100     		.2byte	0x1
 4185 01a4 50       		.byte	0x50
 4186 01a5 04000000 		.4byte	.LVL35
 4187 01a9 14000000 		.4byte	.LFE29
 4188 01ad 0400     		.2byte	0x4
 4189 01af F3       		.byte	0xf3
 4190 01b0 01       		.uleb128 0x1
 4191 01b1 50       		.byte	0x50
 4192 01b2 9F       		.byte	0x9f
 4193 01b3 00000000 		.4byte	0
 4194 01b7 00000000 		.4byte	0
 4195              	.LLST14:
 4196 01bb 00000000 		.4byte	.LVL36
 4197 01bf 04000000 		.4byte	.LVL37
 4198 01c3 0100     		.2byte	0x1
 4199 01c5 50       		.byte	0x50
 4200 01c6 04000000 		.4byte	.LVL37
 4201 01ca 14000000 		.4byte	.LFE30
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 132


 4202 01ce 0400     		.2byte	0x4
 4203 01d0 F3       		.byte	0xf3
 4204 01d1 01       		.uleb128 0x1
 4205 01d2 50       		.byte	0x50
 4206 01d3 9F       		.byte	0x9f
 4207 01d4 00000000 		.4byte	0
 4208 01d8 00000000 		.4byte	0
 4209              	.LLST15:
 4210 01dc 00000000 		.4byte	.LVL39
 4211 01e0 13000000 		.4byte	.LVL40-1
 4212 01e4 0100     		.2byte	0x1
 4213 01e6 50       		.byte	0x50
 4214 01e7 13000000 		.4byte	.LVL40-1
 4215 01eb 18000000 		.4byte	.LVL41
 4216 01ef 0100     		.2byte	0x1
 4217 01f1 54       		.byte	0x54
 4218 01f2 18000000 		.4byte	.LVL41
 4219 01f6 28000000 		.4byte	.LVL43
 4220 01fa 0400     		.2byte	0x4
 4221 01fc F3       		.byte	0xf3
 4222 01fd 01       		.uleb128 0x1
 4223 01fe 50       		.byte	0x50
 4224 01ff 9F       		.byte	0x9f
 4225 0200 28000000 		.4byte	.LVL43
 4226 0204 2A000000 		.4byte	.LVL44
 4227 0208 0100     		.2byte	0x1
 4228 020a 50       		.byte	0x50
 4229 020b 2A000000 		.4byte	.LVL44
 4230 020f 2E000000 		.4byte	.LVL45
 4231 0213 0100     		.2byte	0x1
 4232 0215 54       		.byte	0x54
 4233 0216 2E000000 		.4byte	.LVL45
 4234 021a 38000000 		.4byte	.LFE12
 4235 021e 0400     		.2byte	0x4
 4236 0220 F3       		.byte	0xf3
 4237 0221 01       		.uleb128 0x1
 4238 0222 50       		.byte	0x50
 4239 0223 9F       		.byte	0x9f
 4240 0224 00000000 		.4byte	0
 4241 0228 00000000 		.4byte	0
 4242              	.LLST16:
 4243 022c 14000000 		.4byte	.LVL40
 4244 0230 25000000 		.4byte	.LVL42-1
 4245 0234 0100     		.2byte	0x1
 4246 0236 50       		.byte	0x50
 4247 0237 00000000 		.4byte	0
 4248 023b 00000000 		.4byte	0
 4249              	.LLST17:
 4250 023f 00000000 		.4byte	.LVL46
 4251 0243 0C000000 		.4byte	.LVL48
 4252 0247 0100     		.2byte	0x1
 4253 0249 50       		.byte	0x50
 4254 024a 0C000000 		.4byte	.LVL48
 4255 024e 20000000 		.4byte	.LFE20
 4256 0252 0400     		.2byte	0x4
 4257 0254 F3       		.byte	0xf3
 4258 0255 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 133


 4259 0256 50       		.byte	0x50
 4260 0257 9F       		.byte	0x9f
 4261 0258 00000000 		.4byte	0
 4262 025c 00000000 		.4byte	0
 4263              	.LLST18:
 4264 0260 00000000 		.4byte	.LVL46
 4265 0264 0F000000 		.4byte	.LVL49-1
 4266 0268 0100     		.2byte	0x1
 4267 026a 51       		.byte	0x51
 4268 026b 0F000000 		.4byte	.LVL49-1
 4269 026f 1E000000 		.4byte	.LVL51
 4270 0273 0100     		.2byte	0x1
 4271 0275 55       		.byte	0x55
 4272 0276 1E000000 		.4byte	.LVL51
 4273 027a 20000000 		.4byte	.LFE20
 4274 027e 0400     		.2byte	0x4
 4275 0280 F3       		.byte	0xf3
 4276 0281 01       		.uleb128 0x1
 4277 0282 51       		.byte	0x51
 4278 0283 9F       		.byte	0x9f
 4279 0284 00000000 		.4byte	0
 4280 0288 00000000 		.4byte	0
 4281              	.LLST19:
 4282 028c 00000000 		.4byte	.LVL52
 4283 0290 0A000000 		.4byte	.LVL54
 4284 0294 0100     		.2byte	0x1
 4285 0296 50       		.byte	0x50
 4286 0297 0A000000 		.4byte	.LVL54
 4287 029b 1C000000 		.4byte	.LFE21
 4288 029f 0400     		.2byte	0x4
 4289 02a1 F3       		.byte	0xf3
 4290 02a2 01       		.uleb128 0x1
 4291 02a3 50       		.byte	0x50
 4292 02a4 9F       		.byte	0x9f
 4293 02a5 00000000 		.4byte	0
 4294 02a9 00000000 		.4byte	0
 4295              	.LLST20:
 4296 02ad 00000000 		.4byte	.LVL56
 4297 02b1 0C000000 		.4byte	.LVL58
 4298 02b5 0100     		.2byte	0x1
 4299 02b7 50       		.byte	0x50
 4300 02b8 0C000000 		.4byte	.LVL58
 4301 02bc 22000000 		.4byte	.LFE22
 4302 02c0 0400     		.2byte	0x4
 4303 02c2 F3       		.byte	0xf3
 4304 02c3 01       		.uleb128 0x1
 4305 02c4 50       		.byte	0x50
 4306 02c5 9F       		.byte	0x9f
 4307 02c6 00000000 		.4byte	0
 4308 02ca 00000000 		.4byte	0
 4309              	.LLST21:
 4310 02ce 00000000 		.4byte	.LVL56
 4311 02d2 0F000000 		.4byte	.LVL59-1
 4312 02d6 0100     		.2byte	0x1
 4313 02d8 51       		.byte	0x51
 4314 02d9 0F000000 		.4byte	.LVL59-1
 4315 02dd 20000000 		.4byte	.LVL61
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 134


 4316 02e1 0100     		.2byte	0x1
 4317 02e3 55       		.byte	0x55
 4318 02e4 20000000 		.4byte	.LVL61
 4319 02e8 22000000 		.4byte	.LFE22
 4320 02ec 0400     		.2byte	0x4
 4321 02ee F3       		.byte	0xf3
 4322 02ef 01       		.uleb128 0x1
 4323 02f0 51       		.byte	0x51
 4324 02f1 9F       		.byte	0x9f
 4325 02f2 00000000 		.4byte	0
 4326 02f6 00000000 		.4byte	0
 4327              	.LLST22:
 4328 02fa 00000000 		.4byte	.LVL62
 4329 02fe 0A000000 		.4byte	.LVL64
 4330 0302 0100     		.2byte	0x1
 4331 0304 50       		.byte	0x50
 4332 0305 0A000000 		.4byte	.LVL64
 4333 0309 1E000000 		.4byte	.LFE23
 4334 030d 0400     		.2byte	0x4
 4335 030f F3       		.byte	0xf3
 4336 0310 01       		.uleb128 0x1
 4337 0311 50       		.byte	0x50
 4338 0312 9F       		.byte	0x9f
 4339 0313 00000000 		.4byte	0
 4340 0317 00000000 		.4byte	0
 4341              	.LLST23:
 4342 031b 00000000 		.4byte	.LVL66
 4343 031f 0C000000 		.4byte	.LVL67
 4344 0323 0100     		.2byte	0x1
 4345 0325 50       		.byte	0x50
 4346 0326 0C000000 		.4byte	.LVL67
 4347 032a 4C000000 		.4byte	.LFE24
 4348 032e 0400     		.2byte	0x4
 4349 0330 F3       		.byte	0xf3
 4350 0331 01       		.uleb128 0x1
 4351 0332 50       		.byte	0x50
 4352 0333 9F       		.byte	0x9f
 4353 0334 00000000 		.4byte	0
 4354 0338 00000000 		.4byte	0
 4355              	.LLST24:
 4356 033c 00000000 		.4byte	.LVL66
 4357 0340 0F000000 		.4byte	.LVL68-1
 4358 0344 0100     		.2byte	0x1
 4359 0346 51       		.byte	0x51
 4360 0347 0F000000 		.4byte	.LVL68-1
 4361 034b 4C000000 		.4byte	.LFE24
 4362 034f 0400     		.2byte	0x4
 4363 0351 F3       		.byte	0xf3
 4364 0352 01       		.uleb128 0x1
 4365 0353 51       		.byte	0x51
 4366 0354 9F       		.byte	0x9f
 4367 0355 00000000 		.4byte	0
 4368 0359 00000000 		.4byte	0
 4369              	.LLST25:
 4370 035d 26000000 		.4byte	.LVL71
 4371 0361 45000000 		.4byte	.LVL77-1
 4372 0365 0100     		.2byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 135


 4373 0367 50       		.byte	0x50
 4374 0368 00000000 		.4byte	0
 4375 036c 00000000 		.4byte	0
 4376              	.LLST26:
 4377 0370 22000000 		.4byte	.LVL70
 4378 0374 46000000 		.4byte	.LVL78
 4379 0378 0100     		.2byte	0x1
 4380 037a 55       		.byte	0x55
 4381 037b 00000000 		.4byte	0
 4382 037f 00000000 		.4byte	0
 4383              	.LLST27:
 4384 0383 32000000 		.4byte	.LVL72
 4385 0387 38000000 		.4byte	.LVL73
 4386 038b 0100     		.2byte	0x1
 4387 038d 51       		.byte	0x51
 4388 038e 3A000000 		.4byte	.LVL74
 4389 0392 3C000000 		.4byte	.LVL75
 4390 0396 0100     		.2byte	0x1
 4391 0398 51       		.byte	0x51
 4392 0399 3C000000 		.4byte	.LVL75
 4393 039d 40000000 		.4byte	.LVL76
 4394 03a1 0100     		.2byte	0x1
 4395 03a3 53       		.byte	0x53
 4396 03a4 40000000 		.4byte	.LVL76
 4397 03a8 45000000 		.4byte	.LVL77-1
 4398 03ac 0100     		.2byte	0x1
 4399 03ae 51       		.byte	0x51
 4400 03af 00000000 		.4byte	0
 4401 03b3 00000000 		.4byte	0
 4402              	.LLST28:
 4403 03b7 00000000 		.4byte	.LVL79
 4404 03bb 0A000000 		.4byte	.LVL80
 4405 03bf 0100     		.2byte	0x1
 4406 03c1 50       		.byte	0x50
 4407 03c2 0A000000 		.4byte	.LVL80
 4408 03c6 2C000000 		.4byte	.LFE25
 4409 03ca 0400     		.2byte	0x4
 4410 03cc F3       		.byte	0xf3
 4411 03cd 01       		.uleb128 0x1
 4412 03ce 50       		.byte	0x50
 4413 03cf 9F       		.byte	0x9f
 4414 03d0 00000000 		.4byte	0
 4415 03d4 00000000 		.4byte	0
 4416              	.LLST29:
 4417 03d8 24000000 		.4byte	.LVL82
 4418 03dc 26000000 		.4byte	.LVL83
 4419 03e0 0100     		.2byte	0x1
 4420 03e2 50       		.byte	0x50
 4421 03e3 00000000 		.4byte	0
 4422 03e7 00000000 		.4byte	0
 4423              	.LLST30:
 4424 03eb 00000000 		.4byte	.LVL84
 4425 03ef 06000000 		.4byte	.LVL85
 4426 03f3 0100     		.2byte	0x1
 4427 03f5 50       		.byte	0x50
 4428 03f6 06000000 		.4byte	.LVL85
 4429 03fa 26000000 		.4byte	.LVL89
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 136


 4430 03fe 0100     		.2byte	0x1
 4431 0400 54       		.byte	0x54
 4432 0401 00000000 		.4byte	0
 4433 0405 00000000 		.4byte	0
 4434              	.LLST31:
 4435 0409 00000000 		.4byte	.LVL90
 4436 040d 08000000 		.4byte	.LVL91
 4437 0411 0100     		.2byte	0x1
 4438 0413 50       		.byte	0x50
 4439 0414 08000000 		.4byte	.LVL91
 4440 0418 14000000 		.4byte	.LFE34
 4441 041c 0400     		.2byte	0x4
 4442 041e F3       		.byte	0xf3
 4443 041f 01       		.uleb128 0x1
 4444 0420 50       		.byte	0x50
 4445 0421 9F       		.byte	0x9f
 4446 0422 00000000 		.4byte	0
 4447 0426 00000000 		.4byte	0
 4448              	.LLST32:
 4449 042a 00000000 		.4byte	.LVL93
 4450 042e 26000000 		.4byte	.LVL95
 4451 0432 0100     		.2byte	0x1
 4452 0434 50       		.byte	0x50
 4453 0435 26000000 		.4byte	.LVL95
 4454 0439 42000000 		.4byte	.LVL100
 4455 043d 0100     		.2byte	0x1
 4456 043f 54       		.byte	0x54
 4457 0440 00000000 		.4byte	0
 4458 0444 00000000 		.4byte	0
 4459              	.LLST33:
 4460 0448 04000000 		.4byte	.LVL94
 4461 044c 42000000 		.4byte	.LVL99
 4462 0450 0200     		.2byte	0x2
 4463 0452 30       		.byte	0x30
 4464 0453 9F       		.byte	0x9f
 4465 0454 42000000 		.4byte	.LVL99
 4466 0458 54000000 		.4byte	.LFE9
 4467 045c 0100     		.2byte	0x1
 4468 045e 50       		.byte	0x50
 4469 045f 00000000 		.4byte	0
 4470 0463 00000000 		.4byte	0
 4471              	.LLST34:
 4472 0467 00000000 		.4byte	.LVL101
 4473 046b 14000000 		.4byte	.LVL102
 4474 046f 0100     		.2byte	0x1
 4475 0471 50       		.byte	0x50
 4476 0472 14000000 		.4byte	.LVL102
 4477 0476 18000000 		.4byte	.LVL103
 4478 047a 0100     		.2byte	0x1
 4479 047c 53       		.byte	0x53
 4480 047d 18000000 		.4byte	.LVL103
 4481 0481 44000000 		.4byte	.LFE13
 4482 0485 0400     		.2byte	0x4
 4483 0487 F3       		.byte	0xf3
 4484 0488 01       		.uleb128 0x1
 4485 0489 50       		.byte	0x50
 4486 048a 9F       		.byte	0x9f
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 137


 4487 048b 00000000 		.4byte	0
 4488 048f 00000000 		.4byte	0
 4489              	.LLST35:
 4490 0493 00000000 		.4byte	.LVL106
 4491 0497 1A000000 		.4byte	.LVL107
 4492 049b 0100     		.2byte	0x1
 4493 049d 50       		.byte	0x50
 4494 049e 1A000000 		.4byte	.LVL107
 4495 04a2 4C000000 		.4byte	.LFE35
 4496 04a6 0400     		.2byte	0x4
 4497 04a8 F3       		.byte	0xf3
 4498 04a9 01       		.uleb128 0x1
 4499 04aa 50       		.byte	0x50
 4500 04ab 9F       		.byte	0x9f
 4501 04ac 00000000 		.4byte	0
 4502 04b0 00000000 		.4byte	0
 4503              	.LLST36:
 4504 04b4 00000000 		.4byte	.LVL111
 4505 04b8 02000000 		.4byte	.LVL112
 4506 04bc 0100     		.2byte	0x1
 4507 04be 50       		.byte	0x50
 4508 04bf 02000000 		.4byte	.LVL112
 4509 04c3 10000000 		.4byte	.LFE42
 4510 04c7 0400     		.2byte	0x4
 4511 04c9 F3       		.byte	0xf3
 4512 04ca 01       		.uleb128 0x1
 4513 04cb 50       		.byte	0x50
 4514 04cc 9F       		.byte	0x9f
 4515 04cd 00000000 		.4byte	0
 4516 04d1 00000000 		.4byte	0
 4517              	.LLST37:
 4518 04d5 0C000000 		.4byte	.LVL115
 4519 04d9 1C000000 		.4byte	.LVL118
 4520 04dd 0100     		.2byte	0x1
 4521 04df 54       		.byte	0x54
 4522 04e0 1E000000 		.4byte	.LVL119
 4523 04e4 22000000 		.4byte	.LVL120
 4524 04e8 0100     		.2byte	0x1
 4525 04ea 54       		.byte	0x54
 4526 04eb 00000000 		.4byte	0
 4527 04ef 00000000 		.4byte	0
 4528              	.LLST38:
 4529 04f3 02000000 		.4byte	.LVL121
 4530 04f7 06000000 		.4byte	.LVL122
 4531 04fb 0200     		.2byte	0x2
 4532 04fd 30       		.byte	0x30
 4533 04fe 9F       		.byte	0x9f
 4534 04ff 06000000 		.4byte	.LVL122
 4535 0503 1B000000 		.4byte	.LVL124-1
 4536 0507 0100     		.2byte	0x1
 4537 0509 53       		.byte	0x53
 4538 050a 00000000 		.4byte	0
 4539 050e 00000000 		.4byte	0
 4540              	.LLST39:
 4541 0512 00000000 		.4byte	.LVL131
 4542 0516 06000000 		.4byte	.LVL132
 4543 051a 0100     		.2byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 138


 4544 051c 50       		.byte	0x50
 4545 051d 06000000 		.4byte	.LVL132
 4546 0521 10000000 		.4byte	.LFE49
 4547 0525 0400     		.2byte	0x4
 4548 0527 F3       		.byte	0xf3
 4549 0528 01       		.uleb128 0x1
 4550 0529 50       		.byte	0x50
 4551 052a 9F       		.byte	0x9f
 4552 052b 00000000 		.4byte	0
 4553 052f 00000000 		.4byte	0
 4554              	.LLST40:
 4555 0533 00000000 		.4byte	.LVL133
 4556 0537 02000000 		.4byte	.LVL134
 4557 053b 0100     		.2byte	0x1
 4558 053d 50       		.byte	0x50
 4559 053e 02000000 		.4byte	.LVL134
 4560 0542 0C000000 		.4byte	.LFE50
 4561 0546 0400     		.2byte	0x4
 4562 0548 F3       		.byte	0xf3
 4563 0549 01       		.uleb128 0x1
 4564 054a 50       		.byte	0x50
 4565 054b 9F       		.byte	0x9f
 4566 054c 00000000 		.4byte	0
 4567 0550 00000000 		.4byte	0
 4568              		.section	.debug_aranges,"",%progbits
 4569 0000 AC010000 		.4byte	0x1ac
 4570 0004 0200     		.2byte	0x2
 4571 0006 00000000 		.4byte	.Ldebug_info0
 4572 000a 04       		.byte	0x4
 4573 000b 00       		.byte	0
 4574 000c 0000     		.2byte	0
 4575 000e 0000     		.2byte	0
 4576 0010 00000000 		.4byte	.LFB2
 4577 0014 14000000 		.4byte	.LFE2-.LFB2
 4578 0018 00000000 		.4byte	.LFB3
 4579 001c 10000000 		.4byte	.LFE3-.LFB3
 4580 0020 00000000 		.4byte	.LFB4
 4581 0024 20000000 		.4byte	.LFE4-.LFB4
 4582 0028 00000000 		.4byte	.LFB5
 4583 002c 38000000 		.4byte	.LFE5-.LFB5
 4584 0030 00000000 		.4byte	.LFB6
 4585 0034 1C000000 		.4byte	.LFE6-.LFB6
 4586 0038 00000000 		.4byte	.LFB7
 4587 003c 30000000 		.4byte	.LFE7-.LFB7
 4588 0040 00000000 		.4byte	.LFB8
 4589 0044 64000000 		.4byte	.LFE8-.LFB8
 4590 0048 00000000 		.4byte	.LFB10
 4591 004c 24000000 		.4byte	.LFE10-.LFB10
 4592 0050 00000000 		.4byte	.LFB11
 4593 0054 10000000 		.4byte	.LFE11-.LFB11
 4594 0058 00000000 		.4byte	.LFB14
 4595 005c 20000000 		.4byte	.LFE14-.LFB14
 4596 0060 00000000 		.4byte	.LFB15
 4597 0064 10000000 		.4byte	.LFE15-.LFB15
 4598 0068 00000000 		.4byte	.LFB16
 4599 006c 0C000000 		.4byte	.LFE16-.LFB16
 4600 0070 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 139


 4601 0074 14000000 		.4byte	.LFE17-.LFB17
 4602 0078 00000000 		.4byte	.LFB18
 4603 007c 10000000 		.4byte	.LFE18-.LFB18
 4604 0080 00000000 		.4byte	.LFB19
 4605 0084 0C000000 		.4byte	.LFE19-.LFB19
 4606 0088 00000000 		.4byte	.LFB26
 4607 008c 14000000 		.4byte	.LFE26-.LFB26
 4608 0090 00000000 		.4byte	.LFB27
 4609 0094 18000000 		.4byte	.LFE27-.LFB27
 4610 0098 00000000 		.4byte	.LFB28
 4611 009c 14000000 		.4byte	.LFE28-.LFB28
 4612 00a0 00000000 		.4byte	.LFB29
 4613 00a4 14000000 		.4byte	.LFE29-.LFB29
 4614 00a8 00000000 		.4byte	.LFB30
 4615 00ac 14000000 		.4byte	.LFE30-.LFB30
 4616 00b0 00000000 		.4byte	.LFB31
 4617 00b4 04000000 		.4byte	.LFE31-.LFB31
 4618 00b8 00000000 		.4byte	.LFB12
 4619 00bc 38000000 		.4byte	.LFE12-.LFB12
 4620 00c0 00000000 		.4byte	.LFB20
 4621 00c4 20000000 		.4byte	.LFE20-.LFB20
 4622 00c8 00000000 		.4byte	.LFB21
 4623 00cc 1C000000 		.4byte	.LFE21-.LFB21
 4624 00d0 00000000 		.4byte	.LFB22
 4625 00d4 22000000 		.4byte	.LFE22-.LFB22
 4626 00d8 00000000 		.4byte	.LFB23
 4627 00dc 1E000000 		.4byte	.LFE23-.LFB23
 4628 00e0 00000000 		.4byte	.LFB24
 4629 00e4 4C000000 		.4byte	.LFE24-.LFB24
 4630 00e8 00000000 		.4byte	.LFB25
 4631 00ec 2C000000 		.4byte	.LFE25-.LFB25
 4632 00f0 00000000 		.4byte	.LFB32
 4633 00f4 18000000 		.4byte	.LFE32-.LFB32
 4634 00f8 00000000 		.4byte	.LFB33
 4635 00fc 30000000 		.4byte	.LFE33-.LFB33
 4636 0100 00000000 		.4byte	.LFB34
 4637 0104 14000000 		.4byte	.LFE34-.LFB34
 4638 0108 00000000 		.4byte	.LFB9
 4639 010c 54000000 		.4byte	.LFE9-.LFB9
 4640 0110 00000000 		.4byte	.LFB13
 4641 0114 44000000 		.4byte	.LFE13-.LFB13
 4642 0118 00000000 		.4byte	.LFB35
 4643 011c 4C000000 		.4byte	.LFE35-.LFB35
 4644 0120 00000000 		.4byte	.LFB39
 4645 0124 10000000 		.4byte	.LFE39-.LFB39
 4646 0128 00000000 		.4byte	.LFB40
 4647 012c 10000000 		.4byte	.LFE40-.LFB40
 4648 0130 00000000 		.4byte	.LFB38
 4649 0134 18000000 		.4byte	.LFE38-.LFB38
 4650 0138 00000000 		.4byte	.LFB41
 4651 013c 10000000 		.4byte	.LFE41-.LFB41
 4652 0140 00000000 		.4byte	.LFB42
 4653 0144 10000000 		.4byte	.LFE42-.LFB42
 4654 0148 00000000 		.4byte	.LFB43
 4655 014c 10000000 		.4byte	.LFE43-.LFB43
 4656 0150 00000000 		.4byte	.LFB44
 4657 0154 10000000 		.4byte	.LFE44-.LFB44
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 140


 4658 0158 00000000 		.4byte	.LFB45
 4659 015c 20000000 		.4byte	.LFE45-.LFB45
 4660 0160 00000000 		.4byte	.LFB46
 4661 0164 10000000 		.4byte	.LFE46-.LFB46
 4662 0168 00000000 		.4byte	.LFB47
 4663 016c 10000000 		.4byte	.LFE47-.LFB47
 4664 0170 00000000 		.4byte	.LFB51
 4665 0174 28000000 		.4byte	.LFE51-.LFB51
 4666 0178 00000000 		.4byte	.LFB48
 4667 017c 0C000000 		.4byte	.LFE48-.LFB48
 4668 0180 00000000 		.4byte	.LFB37
 4669 0184 44000000 		.4byte	.LFE37-.LFB37
 4670 0188 00000000 		.4byte	.LFB36
 4671 018c 20000000 		.4byte	.LFE36-.LFB36
 4672 0190 00000000 		.4byte	.LFB49
 4673 0194 10000000 		.4byte	.LFE49-.LFB49
 4674 0198 00000000 		.4byte	.LFB50
 4675 019c 0C000000 		.4byte	.LFE50-.LFB50
 4676 01a0 00000000 		.4byte	.LFB52
 4677 01a4 70000000 		.4byte	.LFE52-.LFB52
 4678 01a8 00000000 		.4byte	0
 4679 01ac 00000000 		.4byte	0
 4680              		.section	.debug_ranges,"",%progbits
 4681              	.Ldebug_ranges0:
 4682 0000 00000000 		.4byte	.LFB2
 4683 0004 14000000 		.4byte	.LFE2
 4684 0008 00000000 		.4byte	.LFB3
 4685 000c 10000000 		.4byte	.LFE3
 4686 0010 00000000 		.4byte	.LFB4
 4687 0014 20000000 		.4byte	.LFE4
 4688 0018 00000000 		.4byte	.LFB5
 4689 001c 38000000 		.4byte	.LFE5
 4690 0020 00000000 		.4byte	.LFB6
 4691 0024 1C000000 		.4byte	.LFE6
 4692 0028 00000000 		.4byte	.LFB7
 4693 002c 30000000 		.4byte	.LFE7
 4694 0030 00000000 		.4byte	.LFB8
 4695 0034 64000000 		.4byte	.LFE8
 4696 0038 00000000 		.4byte	.LFB10
 4697 003c 24000000 		.4byte	.LFE10
 4698 0040 00000000 		.4byte	.LFB11
 4699 0044 10000000 		.4byte	.LFE11
 4700 0048 00000000 		.4byte	.LFB14
 4701 004c 20000000 		.4byte	.LFE14
 4702 0050 00000000 		.4byte	.LFB15
 4703 0054 10000000 		.4byte	.LFE15
 4704 0058 00000000 		.4byte	.LFB16
 4705 005c 0C000000 		.4byte	.LFE16
 4706 0060 00000000 		.4byte	.LFB17
 4707 0064 14000000 		.4byte	.LFE17
 4708 0068 00000000 		.4byte	.LFB18
 4709 006c 10000000 		.4byte	.LFE18
 4710 0070 00000000 		.4byte	.LFB19
 4711 0074 0C000000 		.4byte	.LFE19
 4712 0078 00000000 		.4byte	.LFB26
 4713 007c 14000000 		.4byte	.LFE26
 4714 0080 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 141


 4715 0084 18000000 		.4byte	.LFE27
 4716 0088 00000000 		.4byte	.LFB28
 4717 008c 14000000 		.4byte	.LFE28
 4718 0090 00000000 		.4byte	.LFB29
 4719 0094 14000000 		.4byte	.LFE29
 4720 0098 00000000 		.4byte	.LFB30
 4721 009c 14000000 		.4byte	.LFE30
 4722 00a0 00000000 		.4byte	.LFB31
 4723 00a4 04000000 		.4byte	.LFE31
 4724 00a8 00000000 		.4byte	.LFB12
 4725 00ac 38000000 		.4byte	.LFE12
 4726 00b0 00000000 		.4byte	.LFB20
 4727 00b4 20000000 		.4byte	.LFE20
 4728 00b8 00000000 		.4byte	.LFB21
 4729 00bc 1C000000 		.4byte	.LFE21
 4730 00c0 00000000 		.4byte	.LFB22
 4731 00c4 22000000 		.4byte	.LFE22
 4732 00c8 00000000 		.4byte	.LFB23
 4733 00cc 1E000000 		.4byte	.LFE23
 4734 00d0 00000000 		.4byte	.LFB24
 4735 00d4 4C000000 		.4byte	.LFE24
 4736 00d8 00000000 		.4byte	.LFB25
 4737 00dc 2C000000 		.4byte	.LFE25
 4738 00e0 00000000 		.4byte	.LFB32
 4739 00e4 18000000 		.4byte	.LFE32
 4740 00e8 00000000 		.4byte	.LFB33
 4741 00ec 30000000 		.4byte	.LFE33
 4742 00f0 00000000 		.4byte	.LFB34
 4743 00f4 14000000 		.4byte	.LFE34
 4744 00f8 00000000 		.4byte	.LFB9
 4745 00fc 54000000 		.4byte	.LFE9
 4746 0100 00000000 		.4byte	.LFB13
 4747 0104 44000000 		.4byte	.LFE13
 4748 0108 00000000 		.4byte	.LFB35
 4749 010c 4C000000 		.4byte	.LFE35
 4750 0110 00000000 		.4byte	.LFB39
 4751 0114 10000000 		.4byte	.LFE39
 4752 0118 00000000 		.4byte	.LFB40
 4753 011c 10000000 		.4byte	.LFE40
 4754 0120 00000000 		.4byte	.LFB38
 4755 0124 18000000 		.4byte	.LFE38
 4756 0128 00000000 		.4byte	.LFB41
 4757 012c 10000000 		.4byte	.LFE41
 4758 0130 00000000 		.4byte	.LFB42
 4759 0134 10000000 		.4byte	.LFE42
 4760 0138 00000000 		.4byte	.LFB43
 4761 013c 10000000 		.4byte	.LFE43
 4762 0140 00000000 		.4byte	.LFB44
 4763 0144 10000000 		.4byte	.LFE44
 4764 0148 00000000 		.4byte	.LFB45
 4765 014c 20000000 		.4byte	.LFE45
 4766 0150 00000000 		.4byte	.LFB46
 4767 0154 10000000 		.4byte	.LFE46
 4768 0158 00000000 		.4byte	.LFB47
 4769 015c 10000000 		.4byte	.LFE47
 4770 0160 00000000 		.4byte	.LFB51
 4771 0164 28000000 		.4byte	.LFE51
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 142


 4772 0168 00000000 		.4byte	.LFB48
 4773 016c 0C000000 		.4byte	.LFE48
 4774 0170 00000000 		.4byte	.LFB37
 4775 0174 44000000 		.4byte	.LFE37
 4776 0178 00000000 		.4byte	.LFB36
 4777 017c 20000000 		.4byte	.LFE36
 4778 0180 00000000 		.4byte	.LFB49
 4779 0184 10000000 		.4byte	.LFE49
 4780 0188 00000000 		.4byte	.LFB50
 4781 018c 0C000000 		.4byte	.LFE50
 4782 0190 00000000 		.4byte	.LFB52
 4783 0194 70000000 		.4byte	.LFE52
 4784 0198 00000000 		.4byte	0
 4785 019c 00000000 		.4byte	0
 4786              		.section	.debug_line,"",%progbits
 4787              	.Ldebug_line0:
 4788 0000 CC040000 		.section	.debug_str,"MS",%progbits,1
 4788      02004D00 
 4788      00000201 
 4788      FB0E0D00 
 4788      01010101 
 4789              	.LASF61:
 4790 0000 72616D56 		.ascii	"ramVectorTable\000"
 4790      6563746F 
 4790      72546162 
 4790      6C6500
 4791              	.LASF10:
 4792 000f 75696E74 		.ascii	"uint16\000"
 4792      313600
 4793              	.LASF47:
 4794 0016 696E7453 		.ascii	"intState\000"
 4794      74617465 
 4794      00
 4795              	.LASF26:
 4796 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4796      73436C6B 
 4796      57726974 
 4796      65486663 
 4796      6C6B4469 
 4797              	.LASF108:
 4798 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
 4798      73436C6B 
 4798      50756D70 
 4798      436F6E66 
 4798      696700
 4799              	.LASF60:
 4800 004b 6F6C6449 		.ascii	"oldIsr\000"
 4800      737200
 4801              	.LASF97:
 4802 0052 72657456 		.ascii	"retVal\000"
 4802      616C00
 4803              	.LASF46:
 4804 0059 43794469 		.ascii	"CyDisableInts\000"
 4804      7361626C 
 4804      65496E74 
 4804      7300
 4805              	.LASF112:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 143


 4806 0067 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4806      43313120 
 4806      352E342E 
 4806      31203230 
 4806      31363036 
 4807 009a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4807      20726576 
 4807      6973696F 
 4807      6E203233 
 4807      37373135 
 4808 00cd 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4808      66756E63 
 4808      74696F6E 
 4808      2D736563 
 4808      74696F6E 
 4809              	.LASF7:
 4810 00f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 4810      206C6F6E 
 4810      6720756E 
 4810      7369676E 
 4810      65642069 
 4811              	.LASF35:
 4812 010c 70617261 		.ascii	"parameters\000"
 4812      6D657465 
 4812      727300
 4813              	.LASF48:
 4814 0117 4379456E 		.ascii	"CyEnableInts\000"
 4814      61626C65 
 4814      496E7473 
 4814      00
 4815              	.LASF70:
 4816 0124 4379536F 		.ascii	"CySoftwareReset\000"
 4816      66747761 
 4816      72655265 
 4816      73657400 
 4817              	.LASF81:
 4818 0134 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4818      73546963 
 4818      6B456E61 
 4818      626C6549 
 4818      6E746572 
 4819              	.LASF52:
 4820 014d 4379496E 		.ascii	"CyIntGetState\000"
 4820      74476574 
 4820      53746174 
 4820      6500
 4821              	.LASF6:
 4822 015b 6C6F6E67 		.ascii	"long long int\000"
 4822      206C6F6E 
 4822      6720696E 
 4822      7400
 4823              	.LASF0:
 4824 0169 7369676E 		.ascii	"signed char\000"
 4824      65642063 
 4824      68617200 
 4825              	.LASF34:
 4826 0175 66726571 		.ascii	"freq\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 144


 4826      00
 4827              	.LASF79:
 4828 017a 43794465 		.ascii	"CyDelayFreq\000"
 4828      6C617946 
 4828      72657100 
 4829              	.LASF24:
 4830 0186 696E7465 		.ascii	"interruptState\000"
 4830      72727570 
 4830      74537461 
 4830      746500
 4831              	.LASF86:
 4832 0195 43795379 		.ascii	"CySysTickGetReload\000"
 4832      73546963 
 4832      6B476574 
 4832      52656C6F 
 4832      616400
 4833              	.LASF4:
 4834 01a8 6C6F6E67 		.ascii	"long int\000"
 4834      20696E74 
 4834      00
 4835              	.LASF53:
 4836 01b1 4379496E 		.ascii	"CyIntDisable\000"
 4836      74446973 
 4836      61626C65 
 4836      00
 4837              	.LASF36:
 4838 01be 72656756 		.ascii	"regValues\000"
 4838      616C7565 
 4838      7300
 4839              	.LASF9:
 4840 01c8 75696E74 		.ascii	"uint8\000"
 4840      3800
 4841              	.LASF103:
 4842 01ce 63796465 		.ascii	"cydelayFreqKhz\000"
 4842      6C617946 
 4842      7265714B 
 4842      687A00
 4843              	.LASF29:
 4844 01dd 656E6162 		.ascii	"enable\000"
 4844      6C6500
 4845              	.LASF13:
 4846 01e4 646F7562 		.ascii	"double\000"
 4846      6C6500
 4847              	.LASF67:
 4848 01eb 73686966 		.ascii	"shift\000"
 4848      7400
 4849              	.LASF42:
 4850 01f1 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4850      734C7664 
 4850      436C6561 
 4850      72496E74 
 4850      65727275 
 4851              	.LASF11:
 4852 0208 75696E74 		.ascii	"uint32\000"
 4852      333200
 4853              	.LASF39:
 4854 020f 43795379 		.ascii	"CySysClkEcoReadStatus\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 145


 4854      73436C6B 
 4854      45636F52 
 4854      65616453 
 4854      74617475 
 4855              	.LASF49:
 4856 0225 6D61736B 		.ascii	"mask\000"
 4856      00
 4857              	.LASF38:
 4858 022a 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4858      73436C6B 
 4858      47657453 
 4858      7973636C 
 4858      6B536F75 
 4859              	.LASF69:
 4860 0242 4379496E 		.ascii	"CyIntGetPriority\000"
 4860      74476574 
 4860      5072696F 
 4860      72697479 
 4860      00
 4861              	.LASF105:
 4862 0253 63796465 		.ascii	"cydelay32kMs\000"
 4862      6C617933 
 4862      326B4D73 
 4862      00
 4863              	.LASF93:
 4864 0260 43795379 		.ascii	"CySysTickInit\000"
 4864      73546963 
 4864      6B496E69 
 4864      7400
 4865              	.LASF68:
 4866 026e 76616C75 		.ascii	"value\000"
 4866      6500
 4867              	.LASF89:
 4868 0274 636C6F63 		.ascii	"clockSource\000"
 4868      6B536F75 
 4868      72636500 
 4869              	.LASF99:
 4870 0280 43794765 		.ascii	"CyGetUniqueId\000"
 4870      74556E69 
 4870      71756549 
 4870      6400
 4871              	.LASF91:
 4872 028e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4872      73546963 
 4872      6B476574 
 4872      436F756E 
 4872      74466C61 
 4873              	.LASF8:
 4874 02a4 756E7369 		.ascii	"unsigned int\000"
 4874      676E6564 
 4874      20696E74 
 4874      00
 4875              	.LASF92:
 4876 02b1 43795379 		.ascii	"CySysTickClear\000"
 4876      73546963 
 4876      6B436C65 
 4876      617200
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 146


 4877              	.LASF5:
 4878 02c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4878      20756E73 
 4878      69676E65 
 4878      6420696E 
 4878      7400
 4879              	.LASF85:
 4880 02d2 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4880      734C7664 
 4880      47657449 
 4880      6E746572 
 4880      72757074 
 4881              	.LASF23:
 4882 02ed 43795379 		.ascii	"CySysClkImoStop\000"
 4882      73436C6B 
 4882      496D6F53 
 4882      746F7000 
 4883              	.LASF109:
 4884 02fd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4884      74657243 
 4884      72697469 
 4884      63616C53 
 4884      65637469 
 4885              	.LASF54:
 4886 0314 4379496E 		.ascii	"CyIntSetPending\000"
 4886      74536574 
 4886      50656E64 
 4886      696E6700 
 4887              	.LASF98:
 4888 0324 43795379 		.ascii	"CySysTickGetCallback\000"
 4888      73546963 
 4888      6B476574 
 4888      43616C6C 
 4888      6261636B 
 4889              	.LASF43:
 4890 0339 43795379 		.ascii	"CySysGetResetReason\000"
 4890      73476574 
 4890      52657365 
 4890      74526561 
 4890      736F6E00 
 4891              	.LASF3:
 4892 034d 73686F72 		.ascii	"short unsigned int\000"
 4892      7420756E 
 4892      7369676E 
 4892      65642069 
 4892      6E7400
 4893              	.LASF88:
 4894 0360 43795379 		.ascii	"CySysTickSetClockSource\000"
 4894      73546963 
 4894      6B536574 
 4894      436C6F63 
 4894      6B536F75 
 4895              	.LASF63:
 4896 0378 4379496E 		.ascii	"CyIntSetVector\000"
 4896      74536574 
 4896      56656374 
 4896      6F7200
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 147


 4897              	.LASF51:
 4898 0387 6E756D62 		.ascii	"number\000"
 4898      657200
 4899              	.LASF66:
 4900 038e 7072696F 		.ascii	"priority\000"
 4900      72697479 
 4900      00
 4901              	.LASF33:
 4902 0397 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4902      73436C6B 
 4902      57726974 
 4902      65496D6F 
 4902      46726571 
 4903              	.LASF58:
 4904 03ac 4379496E 		.ascii	"CyIntSetSysVector\000"
 4904      74536574 
 4904      53797356 
 4904      6563746F 
 4904      7200
 4905              	.LASF27:
 4906 03be 43795379 		.ascii	"CySysEnablePumpClock\000"
 4906      73456E61 
 4906      626C6550 
 4906      756D7043 
 4906      6C6F636B 
 4907              	.LASF17:
 4908 03d3 72656733 		.ascii	"reg32\000"
 4908      3200
 4909              	.LASF94:
 4910 03d9 43795379 		.ascii	"CySysTickStart\000"
 4910      73546963 
 4910      6B537461 
 4910      727400
 4911              	.LASF45:
 4912 03e8 72657475 		.ascii	"returnStatus\000"
 4912      726E5374 
 4912      61747573 
 4912      00
 4913              	.LASF20:
 4914 03f5 73697A65 		.ascii	"sizetype\000"
 4914      74797065 
 4914      00
 4915              	.LASF106:
 4916 03fe 43795379 		.ascii	"CySysTickInitVar\000"
 4916      73546963 
 4916      6B496E69 
 4916      74566172 
 4916      00
 4917              	.LASF55:
 4918 040f 4379496E 		.ascii	"CyIntClearPending\000"
 4918      74436C65 
 4918      61725065 
 4918      6E64696E 
 4918      6700
 4919              	.LASF19:
 4920 0421 6C6F6E67 		.ascii	"long double\000"
 4920      20646F75 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 148


 4920      626C6500 
 4921              	.LASF59:
 4922 042d 61646472 		.ascii	"address\000"
 4922      65737300 
 4923              	.LASF30:
 4924 0435 73797363 		.ascii	"sysclkSource\000"
 4924      6C6B536F 
 4924      75726365 
 4924      00
 4925              	.LASF96:
 4926 0442 66756E63 		.ascii	"function\000"
 4926      74696F6E 
 4926      00
 4927              	.LASF107:
 4928 044b 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4928      6F467265 
 4928      714D687A 
 4928      32526567 
 4928      00
 4929              	.LASF87:
 4930 045c 43795379 		.ascii	"CySysTickGetValue\000"
 4930      73546963 
 4930      6B476574 
 4930      56616C75 
 4930      6500
 4931              	.LASF102:
 4932 046e 63796465 		.ascii	"cydelayFreqHz\000"
 4932      6C617946 
 4932      72657148 
 4932      7A00
 4933              	.LASF65:
 4934 047c 4379496E 		.ascii	"CyIntSetPriority\000"
 4934      74536574 
 4934      5072696F 
 4934      72697479 
 4934      00
 4935              	.LASF12:
 4936 048d 666C6F61 		.ascii	"float\000"
 4936      7400
 4937              	.LASF110:
 4938 0493 43794578 		.ascii	"CyExitCriticalSection\000"
 4938      69744372 
 4938      69746963 
 4938      616C5365 
 4938      6374696F 
 4939              	.LASF77:
 4940 04a9 43795379 		.ascii	"CySysLvdEnable\000"
 4940      734C7664 
 4940      456E6162 
 4940      6C6500
 4941              	.LASF21:
 4942 04b8 63795379 		.ascii	"cySysTickCallback\000"
 4942      73546963 
 4942      6B43616C 
 4942      6C626163 
 4942      6B00
 4943              	.LASF64:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 149


 4944 04ca 4379496E 		.ascii	"CyIntGetVector\000"
 4944      74476574 
 4944      56656374 
 4944      6F7200
 4945              	.LASF72:
 4946 04d9 6D696C6C 		.ascii	"milliseconds\000"
 4946      69736563 
 4946      6F6E6473 
 4946      00
 4947              	.LASF111:
 4948 04e6 43794465 		.ascii	"CyDelayCycles\000"
 4948      6C617943 
 4948      79636C65 
 4948      7300
 4949              	.LASF16:
 4950 04f4 72656738 		.ascii	"reg8\000"
 4950      00
 4951              	.LASF78:
 4952 04f9 74687265 		.ascii	"threshold\000"
 4952      73686F6C 
 4952      6400
 4953              	.LASF56:
 4954 0503 43794861 		.ascii	"CyHalt\000"
 4954      6C7400
 4955              	.LASF1:
 4956 050a 756E7369 		.ascii	"unsigned char\000"
 4956      676E6564 
 4956      20636861 
 4956      7200
 4957              	.LASF2:
 4958 0518 73686F72 		.ascii	"short int\000"
 4958      7420696E 
 4958      7400
 4959              	.LASF50:
 4960 0522 4379496E 		.ascii	"CyIntEnable\000"
 4960      74456E61 
 4960      626C6500 
 4961              	.LASF62:
 4962 052e 4379496E 		.ascii	"CyIntGetSysVector\000"
 4962      74476574 
 4962      53797356 
 4962      6563746F 
 4962      7200
 4963              	.LASF28:
 4964 0540 636C6B53 		.ascii	"clkSelect\000"
 4964      656C6563 
 4964      7400
 4965              	.LASF75:
 4966 054a 43795379 		.ascii	"CySysClkEcoStart\000"
 4966      73436C6B 
 4966      45636F53 
 4966      74617274 
 4966      00
 4967              	.LASF73:
 4968 055b 43794465 		.ascii	"CyDelayUs\000"
 4968      6C617955 
 4968      7300
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 150


 4969              	.LASF44:
 4970 0565 72656173 		.ascii	"reason\000"
 4970      6F6E00
 4971              	.LASF114:
 4972 056c 433A5C55 		.ascii	"C:\\Users\\jagumiel\\OneDrive - TEKNIKER\\Codigo\\C"
 4972      73657273 
 4972      5C6A6167 
 4972      756D6965 
 4972      6C5C4F6E 
 4973 059a 79707265 		.ascii	"ypress\\1-Pruebas\\1-LIN-Master-Slave\\Master-UART\\"
 4973      73735C31 
 4973      2D507275 
 4973      65626173 
 4973      5C312D4C 
 4974 05ca 4C494E2D 		.ascii	"LIN-Master-UART.cydsn\000"
 4974      4D617374 
 4974      65722D55 
 4974      4152542E 
 4974      63796473 
 4975              	.LASF14:
 4976 05e0 63686172 		.ascii	"char\000"
 4976      00
 4977              	.LASF18:
 4978 05e5 63796973 		.ascii	"cyisraddress\000"
 4978      72616464 
 4978      72657373 
 4978      00
 4979              	.LASF82:
 4980 05f2 43795379 		.ascii	"CySysTickEnable\000"
 4980      73546963 
 4980      6B456E61 
 4980      626C6500 
 4981              	.LASF31:
 4982 0602 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4982      73436C6B 
 4982      57726974 
 4982      65537973 
 4982      636C6B44 
 4983              	.LASF95:
 4984 0619 43795379 		.ascii	"CySysTickSetCallback\000"
 4984      73546963 
 4984      6B536574 
 4984      43616C6C 
 4984      6261636B 
 4985              	.LASF101:
 4986 062e 43795379 		.ascii	"CySysTickCallbacks\000"
 4986      73546963 
 4986      6B43616C 
 4986      6C626163 
 4986      6B7300
 4987              	.LASF100:
 4988 0641 756E6971 		.ascii	"uniqueId\000"
 4988      75654964 
 4988      00
 4989              	.LASF71:
 4990 064a 43794465 		.ascii	"CyDelay\000"
 4990      6C617900 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 151


 4991              	.LASF90:
 4992 0652 43795379 		.ascii	"CySysTickGetClockSource\000"
 4992      73546963 
 4992      6B476574 
 4992      436C6F63 
 4992      6B536F75 
 4993              	.LASF83:
 4994 066a 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4994      73546963 
 4994      6B446973 
 4994      61626C65 
 4994      496E7465 
 4995              	.LASF41:
 4996 0684 43795379 		.ascii	"CySysLvdDisable\000"
 4996      734C7664 
 4996      44697361 
 4996      626C6500 
 4997              	.LASF104:
 4998 0694 63796465 		.ascii	"cydelayFreqMhz\000"
 4998      6C617946 
 4998      7265714D 
 4998      687A00
 4999              	.LASF37:
 5000 06a3 43795379 		.ascii	"CySysClkEcoStop\000"
 5000      73436C6B 
 5000      45636F53 
 5000      746F7000 
 5001              	.LASF80:
 5002 06b3 43795379 		.ascii	"CySysTickStop\000"
 5002      73546963 
 5002      6B53746F 
 5002      7000
 5003              	.LASF76:
 5004 06c1 74696D65 		.ascii	"timeoutUs\000"
 5004      6F757455 
 5004      7300
 5005              	.LASF32:
 5006 06cb 64697669 		.ascii	"divider\000"
 5006      64657200 
 5007              	.LASF57:
 5008 06d3 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5008      73436C6B 
 5008      57726974 
 5008      6545636F 
 5008      44697600 
 5009              	.LASF15:
 5010 06e7 63797374 		.ascii	"cystatus\000"
 5010      61747573 
 5010      00
 5011              	.LASF22:
 5012 06f0 43795379 		.ascii	"CySysClkImoStart\000"
 5012      73436C6B 
 5012      496D6F53 
 5012      74617274 
 5012      00
 5013              	.LASF113:
 5014 0701 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccZQ2AUR.s 			page 152


 5014      72617465 
 5014      645F536F 
 5014      75726365 
 5014      5C50536F 
 5015              	.LASF74:
 5016 0720 6D696372 		.ascii	"microseconds\000"
 5016      6F736563 
 5016      6F6E6473 
 5016      00
 5017              	.LASF25:
 5018 072d 746D7052 		.ascii	"tmpReg\000"
 5018      656700
 5019              	.LASF84:
 5020 0734 43795379 		.ascii	"CySysTickSetReload\000"
 5020      73546963 
 5020      6B536574 
 5020      52656C6F 
 5020      616400
 5021              	.LASF115:
 5022 0747 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5022      73546963 
 5022      6B536572 
 5022      76696365 
 5022      43616C6C 
 5023              	.LASF40:
 5024 0761 72657475 		.ascii	"returnValue\000"
 5024      726E5661 
 5024      6C756500 
 5025              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
